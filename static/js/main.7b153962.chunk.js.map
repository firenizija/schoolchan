{"version":3,"sources":["svg/arrow.svg","svg/racoon_male.svg","svg/chatIco.svg","svg/userIco.svg","svg/report.svg","svg/image_icon.svg","svg/backIco.svg","svg/addIco.svg","svg/closeIco.svg","svg/formIco.svg","svg/uploadImage.svg","svg/uploadImageDone.svg","serviceWorker.js","api/SocketConnect.js","redux/reducers/isLogged.js","redux/reducers/socket.js","redux/reducers/index.js","components/mobile/start/Register.js","components/mobile/start/Login.js","redux/actions/index.js","components/mobile/start/Start.js","components/mobile/chan/TopBar.js","components/mobile/chan/post/Comment.js","components/mobile/chan/post/Comments.js","helper/whenPosted.js","components/mobile/chan/post/Post.js","components/mobile/chan/post/Posts.js","components/mobile/chan/createPost/CreatePostForm.js","components/mobile/chan/createPost/CreatePost.js","components/mobile/chan/Chan.js","components/mobile/chan/Main.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","socket","tokenIsSet","localStorage","getItem","loggedReducer","action","type","AllReducers","combineReducers","isLogged","Register","switchFormState","useState","username","setUsername","school","setSchool","repassword","setRepassword","password","setPassword","setError","errorName","setErrorName","data","className","onSubmit","e","fetch","process","method","headers","body","JSON","stringify","response","json","name","preventDefault","placeholder","value","onChange","target","hidden","onClick","src","arrow","alt","Login","setusername","dispatch","useDispatch","errorController","status","res","message","setItem","token","Start","formState","TopBar","userIco","chatIco","Comment","comment","racoonMale","commentText","image","href","large","rel","Comments","post","setCommentsView","focus","postComments","setImage","setCommentText","comments","setComments","useSelector","useEffect","on","uploadImage","file","files","reader","FileReader","onloadend","base64","myHeaders","Headers","append","urlencoded","URLSearchParams","redirect","url","mini","thumb","sendImage","result","substr","indexOf","readAsDataURL","autosize","document","querySelector","backIco","map","key","imageIcon","autoFocus","rows","wrap","commentData","postId","_id","emit","sendComment","whenPosted","createdAt","date","Date","minutes","parse","getTime","ISODate","year","getFullYear","month","getMonth","dt","getDate","Math","ceil","Post","commentsLength","shortPosts","commentsView","setPostComments","length","err","slice","medium","reportIcon","Posts","posts","setPosts","id","CreatePostForm","setCreatePostFrom","setBody","getElementById","axis","handle","formIco","closeIco","htmlFor","uploadImageIco","uploadImageDoneIco","accept","postData","sendPost","CreatePost","createPostFrom","Add","Chan","Main","SocketConnect","ENDPOINT","io","removeItem","alert","isMobile","store","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","URL","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker","ServiceWorker","reg"],"mappings":"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","file":"static/js/main.7b153962.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.1d027598.svg\";","module.exports = __webpack_public_path__ + \"static/media/racoon_male.9eabe416.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatIco.4195cd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIco.c95fa3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.b7a16ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_icon.eae12adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/backIco.8bf6e5a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIco.a83663f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeIco.6be77778.svg\";","module.exports = __webpack_public_path__ + \"static/media/formIco.db5ef68f.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImage.af8867ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImageDone.3e48864c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SignOut, SetSocket } from 'redux/actions/index';\nimport Start from 'components/mobile/start/Start';\nimport Main from 'components/mobile/chan/Main';\nimport isMobile from 'is-mobile';\n\nlet socket;\n\nconst SocketConnect = () => {\n    const ENDPOINT = process.env.REACT_APP_API;\n    const dispatch = useDispatch();\n    const isLogged = useSelector(state => state.isLogged);\n    useEffect(() => {\n        socket = io(ENDPOINT, {\n            'query': 'token=' + localStorage.getItem(\"token\")\n        });\n        dispatch(SetSocket(socket));\n        socket.on(\"error\", function (err) {\n            if (err) {\n                localStorage.removeItem(\"token\");\n                dispatch(SignOut())\n            }\n        });\n        socket.on('connect', () => {\n\n        })\n        socket.on('userInfo', (res) => {\n            // setUsername(res.username);\n            // setSchool(res.school);\n            socket.emit('joinChan', (error) => {\n                if (error) {\n                    alert(error);\n                }\n            });\n        });\n\n        socket.on('connect_error', () => {\n            console.log(\"Brak połączenia\")\n            localStorage.removeItem(\"token\");\n            dispatch(SignOut())\n        });\n    }, [ENDPOINT, dispatch, socket]);\n    return (\n        <>\n            {isLogged ?\n                isMobile() ? <Main /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"\n                :\n                isMobile() ? <Start /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"}\n        </>\n    )\n}\n\nexport default SocketConnect;","const tokenIsSet = localStorage.getItem(\"token\") !== \"\";\nconst loggedReducer = (state = tokenIsSet, action) => {\n    switch (action.type) {\n        case 'SIGN_IN':\n            return true;\n        case 'SIGN_OUT':\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loggedReducer;","const socket = (state = \"\", action) => {\n    switch (action.type) {\n        case 'SET_SOCKET':\n            return action.socket;\n        case 'RESET_SOCKET':\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default socket;","import isLogged from './isLogged'\nimport socket from './socket'\nimport { combineReducers } from 'redux';\n\nconst AllReducers = combineReducers({\n    isLogged,\n    socket\n})\nexport default AllReducers;","import React, { useState } from 'react';\n\nimport './style/register.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Register = ({ switchFormState }) => {\n    const [username, setUsername] = useState('');\n    const [school, setSchool] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [errorName, setErrorName] = useState('');\n\n    const errorController = (name) => {\n        if (name === \"MissingUsernameError\") {\n            setError(\"Podaj nazwę uzytkownika\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"MissingPasswordError\") {\n            setError(\"Wpisz hasło\");\n            setErrorName(\"password\");\n        }\n        else if (name === \"PasswordsDoNotMatch\") {\n            setError(\"Podane hasła nie są takie same\");\n            setErrorName(\"repassword\");\n        }\n        else if (name === \"UserExistsError\") {\n            setError(\"Ten pseudonim juz jest zajęty\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"NoSchoolSelected\") {\n            setError(\"Wybierz szkołę\");\n            setErrorName(\"school\");\n        }\n        else if (name === \"AccountCreated\") {\n            switchFormState(\"login\")\n        }\n        else if (name) {\n            setError(\"Nieznany błąd\");\n            setErrorName(\"repassword\");\n        }\n        else switchFormState(\"login\")\n    }\n\n    const data = { username, school, repassword, password };\n\n    const handleSubmit = e => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Response:', data);\n                errorController(data.name);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n        e.preventDefault();\n    }\n\n\n    return (\n        <div className=\"register\">\n            <div>\n                <h1 className=\"register__title\">\n                    Stwórz nowe konto\n            </h1>\n                <h2 className=\"register__text\">\n                    Trzymaj kontakt anonimowo ze społecznością swojej szkoły.\n            </h2>\n            </div>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Pseudonim\"\n                    className=\"register__input\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'username' ? error : null}</span>\n                <select\n                    name=\"school\"\n                    placeholder=\"Wybierz szkołe\"\n                    className=\"register__input\"\n                    value={school}\n                    onChange={e => setSchool(e.target.value)}\n                >\n                    <option value hidden>Wybierz szkołe</option>\n                    <option value=\"kilińskiego\">kilińskiego</option>\n                    <option value=\"test\">test</option>\n                </select>\n                <span className=\"register__error\">{errorName === 'school' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"register__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'password' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"repassword\"\n                    placeholder=\"Powtórz hasło\"\n                    className=\"register__input\"\n                    value={repassword}\n                    onChange={e => setRepassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'repassword' ? error : null}</span >\n                <div className=\"register__buttons\">\n                    <button\n                        type=\"button\"\n                        className=\"register__loginButton\"\n                        onClick={() => switchFormState('login')}\n                    >\n                        <p className=\"register__loginText\">\n                            Masz już konto?\n                    </p>\n                        <p className=\"register__loginTextBlue\">\n                            Zaloguj się\n                        </p>\n                    </button>\n                    <button className=\"register__registerButton\">\n                        Zarejestruj się <img src={arrow} alt=\"\" />\n                    </button>\n                </div>\n            </form >\n        </div >\n    );\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { SignIn } from 'redux/actions/index';\n\nimport './style/login.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Login = ({ switchFormState }) => {\n    const [username, setusername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const dispatch = useDispatch();\n\n    const errorController = (status) => {\n        if (status === 400) {\n            setError(\"Wpisz dane logowania\");\n        } else if (status === 401) {\n            setError(\"Wpisane login lub hasło są nieprawidłowe\");\n        } else if (status === 404 || status === 403) {\n            setError(\"Serwery aktualnie są niedostępne. Proszę spróbować ponownie później.\");\n        } else if (status === 200) {\n        }\n    }\n\n    const data = { username, password }\n    const handleSubmit = (e) => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => { errorController(res.status); return (res.json()) })\n            .then((data) => {\n                console.log('Success:', data);\n                if (data.message) {\n                    console.log(\"Złe dane\");\n                } else {\n                    localStorage.setItem(\"token\", data.token);\n                    dispatch(SignIn());\n                }\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                if (error == \"TypeError: Failed to fetch\") errorController(404)\n            });\n        e.preventDefault();\n    }\n    return (\n        <div className=\"login\">\n            <h1 className=\"login__title\">\n                Logowanie\n            </h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pseudonim\"\n                    className=\"login__input\"\n                    value={username}\n                    onChange={e => setusername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"login__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"login__error\">{error}</span>\n                <div className=\"login__underInputs\">\n                    <button className=\"login__forgotPassword\">\n                        Zapomniałeś hasła?\n                    </button>\n                    <label className=\"login__remember\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"remember\"\n                            className=\"login__rememberCheckbox\"\n                        />\n                        Pamiętaj mnie\n                    </label>\n                </div>\n                <button className=\"login__loginButton\">\n                    Zaloguj się <img src={arrow} alt=\"\" />\n                </button>\n                <button className=\"login__registerButton\" onClick={() => switchFormState('register')}>Stwórz nowe konto</button>\n            </form>\n        </div >\n    );\n}\n\nexport default Login;","export const SignIn = () => {\n    return {\n        type: 'SIGN_IN'\n    }\n}\n\nexport const SignOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\nexport const SetSocket = (socket) => {\n    return {\n        type: 'SET_SOCKET',\n        socket\n    }\n}","import React, { useState } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nimport './style/start.scss'\n\nconst Start = () => {\n    const [formState, switchFormState] = useState('login');\n\n    return (\n        <div className=\"start\">\n            <div className=\"start__bannerText\">\n                Pozostań anonimowy i wyraź swoje opinie\n            </div>\n            <hr className=\"start__hr\" />\n            {formState === 'login' ? <Login switchFormState={switchFormState} /> : <Register switchFormState={switchFormState} />}\n        </div>\n    );\n}\n\nexport default Start;","import React from 'react';\nimport chatIco from 'svg/chatIco.svg'\nimport userIco from 'svg/userIco.svg'\n\nimport './styles/topBar.scss'\n\nconst TopBar = () => {\n    return (\n        <div className=\"topBar\">\n            <ul className=\"topBar__optionsList\">\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--menu\" onClick={() => localStorage.setItem(\"token\", \"\")}>\n                        <img src={userIco} alt=\"\" />\n                    </button>\n                </li>\n                <li className=\"topBar__options topBar__options--banner\">\n                    schoolchan\n                </li>\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--chat\">\n                        <img src={chatIco} alt=\"\" />\n                    </button>\n                </li>\n            </ul>\n\n        </div>\n    );\n}\n\nexport default TopBar;","import React from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\n\nimport './styles/comment.scss'\n\nconst Comment = ({ comment }) => {\n    return (\n        <li className=\"comment\">\n            <img src={racoonMale} alt=\"sex\" className=\"comment__sex\" />\n            <div className=\"comment__username\">{comment.username}</div>\n            &nbsp;\n            <div>\n                <div className=\"comment__text\">{comment.commentText}</div>\n            </div>\n            &nbsp;\n            {comment.image ? <a href={comment.image.large} rel=\"noopener noreferrer\" target=\"_blank\">Obraz</a> : null}\n        </li>\n    );\n}\n\nexport default Comment;","import React, { useState, useEffect } from 'react';\nimport Comment from './Comment';\nimport imageIcon from 'svg/image_icon.svg';\nimport { useSelector } from 'react-redux';\nimport backIco from 'svg/backIco.svg';\nimport autosize from 'autosize'\n// import uploadImage from 'api/uploadImage';\n\nimport './styles/comments.scss';\n\nconst Comments = ({ post, setCommentsView, focus, postComments }) => {\n    const [image, setImage] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\");\n    const [comments, setComments] = useState(postComments);\n\n    const socket = useSelector(state => state.socket);\n\n    // useEffect(() => {\n    //     socket.emit('showComments', post._id);\n    // }, [socket, post._id]);\n\n    useEffect(() => {\n        if (socket) {\n            // socket.on('comments', data => {\n            //     setComments(data);\n            // })\n            socket.on(\"comment\", (comment) => {\n                setComments([comment, ...comments]);\n            });\n        }\n    }, [comments, socket]);\n\n    const sendComment = (e) => {\n        e.preventDefault();\n        const commentData = { image, commentText, postId: post._id };\n        socket.emit(\"sendComment\", commentData);\n        setCommentText(\"\");\n        setImage(\"\");\n    }\n\n    const uploadImage = (e) => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(res => res.json())\n                .then(res => {\n                    setImage({ large: res.data.image.url, mini: res.data.thumb.url });\n                })\n                .catch(error => console.log('error', error));\n        }\n\n        var file = e.target.files[0];\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result);\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n    autosize(document.querySelector('textarea'));\n\n    return (\n        <div className=\"comments\">\n            <div className=\"comments__topBar\">\n                <button\n                    onClick={() => setCommentsView(false)}\n                >\n                    <img src={backIco} alt=\"back\" className=\"comments__backButtonImg\" />\n                </button>\n                <div className=\"comments__title\">Komentarze</div>\n            </div>\n            <ul className=\"comments__list\">\n                {comments.map((comment, key) => <Comment key={key} comment={comment} />)}\n            </ul>\n            <form className=\"comments__commentForm\">\n                <label>\n                    <img src={imageIcon} alt=\"sendImage\" />\n                    <input\n                        className=\"comments__imageInput\"\n                        type=\"file\"\n                        onChange={(e) => uploadImage(e)}\n                    />\n                </label>\n                <textarea\n                    autoFocus={focus}\n                    rows=\"1\"\n                    wrap=\"hard\"\n                    placeholder=\"Napisz komentarz...\"\n                    className=\"comments__textInput\"\n                    onChange={e => setCommentText(e.target.value)}\n                    value={commentText}\n                >\n                </textarea>\n                <button className=\"comments__submit\" onClick={e => sendComment(e)}>⌲</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Comments;","const whenPosted = (createdAt) => {\n    const date = new Date();\n    const minutes = -1 * (Date.parse(createdAt) - date.getTime()) / (1000 * 60);\n    if (minutes > 43829) {\n        const ISODate = new Date(createdAt);\n        let year = ISODate.getFullYear();\n        let month = ISODate.getMonth() + 1;\n        let dt = ISODate.getDate();\n\n        if (dt < 10) {\n            dt = '0' + dt;\n        }\n        if (month < 10) {\n            month = '0' + month;\n        }\n        return dt + '-' + month + '-' + year;\n    }\n    else if (minutes > 1440 * 2) {\n        return `${Math.ceil(minutes / 1440)} dni temu`;\n    }\n    else if (minutes > 1440) {\n        return `1 dzień temu`;\n    }\n    else if (minutes > 60 * 2) {\n        return `${Math.ceil(minutes / 60)} h temu`;\n    }\n    else if (minutes > 60) {\n        return `godzinę temu`;\n    }\n    else if (minutes > 2) {\n        return `${Math.ceil(minutes)} min temu`;\n    }\n    else if (minutes) {\n        return `minutę temu`;\n    }\n    else {\n        return 'przed chwilą';\n    }\n}\nexport default whenPosted;","import React, { useState, useEffect } from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\nimport reportIcon from 'svg/report.svg';\nimport Comments from './Comments'\nimport whenPosted from 'helper/whenPosted'\nimport { useSelector } from 'react-redux'\n\nimport './styles/post.scss';\n\nconst Post = ({ post }) => {\n    const socket = useSelector(state => state.socket)\n    const [commentsView, setCommentsView] = useState(false);\n    let { comments, image, body, createdAt, username, _id } = post;\n    const [postComments, setPostComments] = useState(comments);\n    let commentsLength\n    try {\n        commentsLength = postComments.length\n    } catch (err) {\n        commentsLength = 0\n        setPostComments([])\n    }\n    let shortPosts\n    try {\n        shortPosts = postComments.slice(0, 3)\n    } catch (err) {\n        shortPosts = []\n    }\n\n    useEffect(() => {\n        socket.on('comment', (comment) => {\n            if (comment.postId === _id) {\n                setPostComments([...postComments, comment])\n            }\n        });\n    }, [socket, postComments, _id]);\n\n\n    return (\n        <li className=\"post\">\n            <img src={racoonMale} alt=\"sex\" className=\"post__sex\" />\n            <div className=\"post__content\">\n                <div className=\"post__username\">{username}</div>\n                <div className=\"post__postDate\">{whenPosted(createdAt)}</div>\n                <div className=\"post__body\">{body}</div>\n                {image ? <img className=\"post__image\" src={image.medium} alt=\"\" /> : null}\n                <div className=\"post__buttons\">\n                    <button className=\"post__like\">+1</button>\n                    <button className=\"post__dislike\">-1</button>\n                    <button\n                        className=\"post__commentsButton\"\n                        onClick={() => setCommentsView(true)}\n                    >\n                        {commentsLength === 0 ? \"Napisz komentarz\" : `Komentarze ${commentsLength}`}\n                    </button>\n                </div>\n            </div>\n            <button className=\"post__reportButton\">\n                <img src={reportIcon} alt=\"report\" />\n            </button>\n            <div className=\"post__bottom\">\n                <hr className=\"post__hr\" />\n                <div>\n                    <div className=\"post__votes\">\n                        <span className=\"post__reactions\">\n                            13\n                        </span>\n                        <span>&nbsp;szopów jest za, a&nbsp;</span>\n                        <span className=\"post__reactions\">\n                            5\n                        </span>\n                        <span>&nbsp;przeciw</span>\n                    </div>\n                    <ul className=\"post__comments\">\n                        {shortPosts.map((comment, key) => (\n                            <li key={key}>\n                                <span className=\"post__username\">{comment.username}</span> {comment.commentText}\n                            </li>\n                        ))}\n                        {commentsLength > 3 ?\n                            <li>\n                                <button className=\"post__showAllButton\" onClick={() => setCommentsView(true)}>\n                                    Zobacz wszystkie\n                                </button>\n                            </li>\n                            : null}\n                    </ul>\n                </div>\n            </div>\n            {commentsView ? <Comments post={post} postComments={postComments} setCommentsView={setCommentsView} focus={commentsLength === 0 ? true : false} /> : null}\n        </li>\n    );\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport Post from './Post'\nimport { useSelector } from 'react-redux'\n\nimport './styles/posts.scss'\n\nconst Posts = () => {\n    const socket = useSelector(state => state.socket)\n    const [posts, setPosts] = useState([])\n\n    if (socket) {\n        socket.on('posts', data => {\n            setPosts(data)\n        })\n        socket.on('post', data => {\n            setPosts([data, ...posts])\n        })\n    }\n    return (\n        <ul className=\"posts\">\n            {posts.map((post, id) => (\n                <Post\n                    key={post._id}\n                    post={post}\n                />\n            ))}\n        </ul>\n    );\n}\n\nexport default Posts;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport Draggable from 'react-draggable';\nimport autosize from 'autosize'\n\nimport closeIco from 'svg/closeIco.svg';\nimport formIco from 'svg/formIco.svg';\nimport uploadImageIco from 'svg/uploadImage.svg';\nimport uploadImageDoneIco from 'svg/uploadImageDone.svg';\n// import uploadImageLoadingIco from 'svg/uploadImageLoading.svg';\n\nimport './styles/createPostForm.scss'\n\nconst CreatePostForm = ({ setCreatePostFrom }) => {\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const socket = useSelector(state => state.socket)\n\n    const sendPost = (e, data) => {\n        e.preventDefault();\n        const postData = { body, image }\n        if (postData) {\n            socket.emit('sendPost', postData);\n            setCreatePostFrom(false)\n        }\n    }\n\n    const uploadImage = () => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(response => response.json())\n                .then(result => setImage({ large: result.data.image.url, mini: result.data.thumb.url, medium: result.data.medium.url }))\n                .catch(error => console.log('error', error));\n        }\n        var file = document.getElementById('file').files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n\n    }\n    autosize(document.querySelector('textarea'))\n\n    return (\n        <Draggable\n            axis=\"y\"\n            handle=\".createPostForm__handle\"\n        >\n            <div className=\"createPostForm\">\n                <div className=\"createPostForm__handle\">\n                    <div>\n                        <img className=\"createPostForm__formIco\" src={formIco} alt=\"createPost\" />\n                        <span className=\"createPostForm__handleTitle\">Utwórz post</span>\n                    </div>\n                    <button\n                        className=\"createPostForm__closeButton\"\n                        onClick={() => setCreatePostFrom(false)}\n                    >\n                        <img src={closeIco} alt=\"closeForm\" />\n                    </button>\n                </div>\n                <form action=\"\" className=\"createPostForm__form\">\n                    <label className=\"createPostForm__label\" htmlFor=\"body\">\n                        Treść:\n                </label>\n                    <textarea\n                        name=\"body\"\n                        className=\"createPostForm__postBody\"\n                        rows=\"8\"\n                        placeholder=\"Nie ma to jak koronawirus x_x\"\n                        onChange={e => setBody(e.target.value)}\n                        value={body}\n                    >\n\n                    </textarea>\n                    <label className=\"createPostForm__label\" htmlFor=\"image\">\n                        Obraz:\n                </label>\n                    <label>\n                        <img src={image === \"\" ? uploadImageIco : uploadImageDoneIco} alt=\"upload\" className=\"createPostForm__uploadImg\" />\n                        <input\n                            className=\"createPostForm__imageButton\"\n                            name=\"image\"\n                            type=\"file\"\n                            accept=\"image/x-png,image/jpeg\"\n                            id=\"file\"\n                            onChange={() => uploadImage()}\n                        />\n                    </label>\n                    <button\n                        className=\"createPostForm__submit\"\n                        onClick={(e) => sendPost(e)}\n                    >\n                        Opublikuj\n                </button>\n                </form>\n            </div>\n        </Draggable>\n    );\n}\n\nexport default CreatePostForm;","import React, { useState } from 'react';\nimport Add from 'svg/addIco.svg'\nimport CreatePostForm from './CreatePostForm'\n\nimport './styles/createPost.scss'\n\nconst CreatePost = () => {\n    const [createPostFrom, setCreatePostFrom] = useState(false)\n    return (\n        <div className=\"createPost\">\n            {createPostFrom\n                ? <CreatePostForm setCreatePostFrom={setCreatePostFrom} />\n                : <button\n                    className=\"createPost__button\"\n                    onClick={() => setCreatePostFrom(true)}\n                >\n                    <img src={Add} alt=\"\" />\n                </button>\n            }\n\n        </div>\n    );\n}\n\nexport default CreatePost;","import React from 'react';\nimport Posts from './post/Posts'\nimport CreatePost from './createPost/CreatePost'\n\nimport './styles/chan.scss'\n\n\nconst Chan = () => {\n    return (\n        <div className=\"chan\">\n            <Posts />\n            <CreatePost />\n        </div>\n    );\n}\n\nexport default Chan;","import React from 'react';\nimport TopBar from './TopBar';\nimport Chan from './Chan'\n\nconst Main = () => {\n    return (\n        <div>\n            <TopBar />\n            <Chan />\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport * as ServiceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport SocketConnect from 'api/SocketConnect';\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SocketConnect />\n    </Provider>, document.getElementById('root'));\n\nServiceWorker.register();\n\nif ('serviceWorker' in navigator) {\n    console.log(\"Will the service worker register?\");\n    navigator.serviceWorker.register('./serviceWorker.js')\n        .then(function (reg) {\n            console.log(\"Yes, it did.\");\n        }).catch(function (err) {\n            console.log(\"No it didn't. This happened: \", err)\n        });\n}"],"sourceRoot":""}