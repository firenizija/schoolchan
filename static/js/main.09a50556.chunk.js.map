{"version":3,"sources":["svg/racoon_male.svg","svg/arrow.svg","svg/backButton.svg","svg/image_icon.svg","svg/online.svg","svg/uploadImage.svg","svg/chatIco.svg","svg/userIco.svg","svg/newChat.svg","svg/report.svg","svg/backIco.svg","svg/addIco.svg","svg/closeIco.svg","svg/formIco.svg","svg/uploadImageDone.svg","svg/uploadImageLoading.svg","svg/all.svg","svg/sendMessage.svg","serviceWorker.js","redux/reducers/socket.js","redux/reducers/posts.js","redux/reducers/userInfo.js","redux/reducers/messages.js","redux/reducers/index.js","redux/actions/index.js","components/mobile/start/Register.js","helper/cookies.js","components/mobile/start/Login.js","components/mobile/start/Start.js","api/SocketPosts.js","api/SocketMessages.js","components/mobile/chan/TopBar.js","helper/whenPosted.js","api/uploadImage.js","components/mobile/chan/post/CommentForm.js","components/mobile/chan/post/Comment.js","components/mobile/chan/post/Comments.js","components/mobile/chan/post/Post.js","components/mobile/chan/post/Posts.js","components/mobile/chan/createPost/CreatePostForm.js","components/mobile/chan/createPost/CreatePost.js","components/mobile/chan/Chan.js","components/mobile/chan/aside/chat/TopBarChat.js","components/mobile/chan/aside/chat/messages/Message.js","components/mobile/chan/aside/chat/messages/Messages.js","components/mobile/chan/aside/chat/MessageForm.js","components/mobile/chan/aside/chat/Conversation.js","components/mobile/chan/aside/chat/Chat.js","components/mobile/chan/aside/menu/Menu.js","components/mobile/chan/Main.js","api/SocketConnect.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ENDPOINT","process","token","localStorage","getItem","socketConnect","io","query","socket","action","type","postsObj","posts","postsLastId","myPosts","concat","post","userInfo","user","initialState","messages","messagesLastId","message","moreMessages","reverse","AllReducers","combineReducers","SetSocket","Register","switchFormState","useState","username","setUsername","school","setSchool","repassword","setRepassword","password","setPassword","setError","errorName","setErrorName","data","className","onSubmit","e","fetch","method","headers","body","JSON","stringify","response","json","name","preventDefault","placeholder","value","onChange","target","hidden","onClick","src","arrow","alt","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","Login","setusername","rememberMe","setRememberMe","dispatch","useDispatch","tokenCookie","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","getCookie","errorController","status","setItem","res","resData","err","htmlFor","checked","Start","formState","onload","hash","SocketPosts","useSelector","useEffect","on","_id","SetMyPosts","SocketMessages","AddMessage","emit","messagesDatabase","TopBar","setMenu","forceUpdateMain","history","back","backButton","userIco","newChat","chatIco","whenPosted","createdAt","date","minutes","parse","ISODate","year","getFullYear","month","getMonth","dt","getDate","Math","ceil","imageStatus","uploadImage","input","setImage","setImageStatus","file","current","files","reader","FileReader","onloadend","base64","myHeaders","Headers","append","urlencoded","URLSearchParams","redirect","result","large","image","url","mini","thumb","sendImage","substr","readAsDataURL","CommentForm","focus","commentText","setCommentText","textareaRef","useRef","fileInputRef","sendComment","commentData","postId","autosize","imageIcon","ref","id","accept","autoFocus","rows","wrap","onKeyPress","key","defaultProps","Comment","comment","racoonMale","href","rel","Comments","postComments","forceUpdatePost","forceUpdate","useForceUpdate","onhashchange","backIco","slice","map","Post","commentsLength","setCommentsLength","comments","like","dislike","reaction","setReaction","push","usernameLike","index","splice","handleReaction","reactionData","reportIcon","Posts","postType","waitForMorePosts","useScrollPosition","currPos","scrollProgress","offsetHeight","innerHeight","y","connect","CreatePostForm","setCreatePostFrom","setBody","axis","handle","formIco","closeIco","uploadImageIco","uploadImageLoadingIco","uploadImageDoneIco","imageStatusIMG","postData","sendPost","CreatePost","createPostFrom","Add","Chan","visible","display","style","TopBarChat","chatWith","setChatWith","online","Message","isMy","isWaitingForMessages","autoScroll","setAutoScroll","bottomDiv","messagesScrollRef","messagesLoadMoreButtonRef","scrollToBottom","speed","scrollIntoView","behavior","messagesBlock","button","loadedMessages","querySelectorAll","getMessagesHeight","setInterval","scrollTop","click","newMessage","scrollHeight","scrollHeightMessages","MessageForm","messageText","setMessageText","messageImage","setMessageImage","handleClickSend","messageObj","SendMessage","onFocus","querySelector","sendMessage","Conversation","Chat","all","Menu","setPostType","reload","Main","menu","SocketConnect","isLogged","connected","removeItem","isMobile","store","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","URL","origin","addEventListener","contentType","get","ready","unregister","checkValidServiceWorker","ServiceWorker","reg"],"mappings":"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","file":"static/js/main.09a50556.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/racoon_male.9eabe416.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.1d027598.svg\";","module.exports = __webpack_public_path__ + \"static/media/backButton.49052b35.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_icon.eae12adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/online.86d4e583.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImage.af8867ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatIco.4195cd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIco.c95fa3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/newChat.d9414f81.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.b7a16ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/backIco.8bf6e5a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIco.a83663f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeIco.6be77778.svg\";","module.exports = __webpack_public_path__ + \"static/media/formIco.db5ef68f.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImageDone.3e48864c.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImageLoading.52447787.svg\";","module.exports = __webpack_public_path__ + \"static/media/all.e487a034.svg\";","module.exports = __webpack_public_path__ + \"static/media/sendMessage.3ee2f767.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import io from 'socket.io-client';\n\nconst ENDPOINT = process.env.REACT_APP_API;\nconst token = localStorage.getItem('token');\n\nconst socketConnect = io(ENDPOINT, {\n  query: `token=${token}`,\n});\n\nconst socket = (state = socketConnect, action) => {\n  switch (action.type) {\n    case 'SET_SOCKET':\n      return io(ENDPOINT, {\n        query: `token=${localStorage.getItem('token')}`,\n      });\n    case 'RESET_SOCKET':\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default socket;\n","const postsObj = {\n  posts: [],\n  postsLastId: '',\n  myPosts: [],\n};\nconst posts = (state = postsObj, action) => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return {\n        ...state,\n        posts: action.posts,\n        postsLastId: action.postsLastId,\n      };\n    case 'SET_MY_POSTS':\n      return {\n        ...state,\n        myPosts: action.myPosts,\n      };\n    case 'ADD_POSTS':\n      return {\n        ...state,\n        posts: state.posts.concat(action.post),\n        postsLastId: action.postsLastId,\n      };\n    case 'ADD_POST':\n      return {\n        ...state,\n        posts: [...state.posts, action.post],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","const userInfo = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.user\n        default:\n            return state\n    }\n};\n\nexport default userInfo;","const initialState = {\n  messages: [],\n  messagesLastId: '',\n};\nconst messages = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_MESSAGES':\n      return {\n        ...state,\n        messages: action.messages,\n        messagesLastId: action.messagesLastId,\n      };\n    case 'RESET_MESSAGES':\n      return {\n        messages: [],\n      };\n    case 'ADD_MESSAGES':\n      return {\n        ...state,\n        messages: [...state.messages, action.message],\n      };\n    case 'ADD_MORE_MESSAGES':\n      return {\n        ...state,\n        messages: action.moreMessages.reverse().concat(state.messages),\n        messagesLastId: action.messagesLastId,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default messages;\n","import { combineReducers } from 'redux';\nimport socket from './socket';\nimport posts from './posts';\nimport userInfo from './userInfo';\nimport messages from './messages';\n\nconst AllReducers = combineReducers({\n  socket,\n  posts,\n  userInfo,\n  messages,\n});\nexport default AllReducers;\n","export const SetSocket = (socket) => ({\n  type: 'SET_SOCKET',\n  socket,\n});\n\nexport const SetPosts = (posts, postsLastId) => ({\n  type: 'SET_POSTS',\n  posts,\n  postsLastId,\n});\n\nexport const SetMyPosts = (myPosts) => ({\n  type: 'SET_MY_POSTS',\n  myPosts,\n});\n\nexport const AddPost = (post) => ({\n  type: 'ADD_POST',\n  post,\n});\n\nexport const AddPosts = (post, postsLastId) => ({\n  type: 'ADD_POSTS',\n  post,\n  postsLastId,\n});\n\nexport const SetUser = (user) => ({\n  type: 'SET_USER',\n  user,\n});\n\nexport const SetMessages = (messages, messagesLastId) => ({\n  type: 'SET_MESSAGES',\n  messages,\n  messagesLastId,\n});\n\nexport const ResetMessages = () => ({\n  type: 'RESET_MESSAGES',\n});\n\nexport const AddMessage = (message) => ({\n  type: 'ADD_MESSAGES',\n  message,\n});\n\nexport const AddMoreMessages = (moreMessages, messagesLastId) => ({\n  type: 'ADD_MORE_MESSAGES',\n  moreMessages,\n  messagesLastId,\n});\n","import React, { useState } from 'react';\n\nimport './style/register.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Register = ({ switchFormState }) => {\n    const [username, setUsername] = useState('');\n    const [school, setSchool] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [errorName, setErrorName] = useState('');\n\n    const errorController = (name) => {\n        if (name === \"MissingUsernameError\") {\n            setError(\"Podaj nazwę uzytkownika\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"MissingPasswordError\") {\n            setError(\"Wpisz hasło\");\n            setErrorName(\"password\");\n        }\n        else if (name === \"PasswordsDoNotMatch\") {\n            setError(\"Podane hasła nie są takie same\");\n            setErrorName(\"repassword\");\n        }\n        else if (name === \"UserExistsError\") {\n            setError(\"Ten pseudonim juz jest zajęty\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"NoSchoolSelected\") {\n            setError(\"Wybierz szkołę\");\n            setErrorName(\"school\");\n        }\n        else if (name === \"AccountCreated\") {\n            switchFormState(\"login\")\n        }\n        else if (name) {\n            setError(\"Nieznany błąd\");\n            setErrorName(\"repassword\");\n        }\n        else switchFormState(\"login\")\n    }\n\n    const data = { username, school, repassword, password };\n\n    const handleSubmit = e => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Response:', data);\n                errorController(data.name);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n        e.preventDefault();\n    }\n\n\n    return (\n        <div className=\"register\">\n            <div>\n                <h1 className=\"register__title\">\n                    Stwórz nowe konto\n            </h1>\n                <h2 className=\"register__text\">\n                    Trzymaj kontakt anonimowo ze społecznością swojej szkoły.\n            </h2>\n            </div>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Pseudonim\"\n                    className=\"register__input\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'username' ? error : null}</span>\n                <select\n                    name=\"school\"\n                    placeholder=\"Wybierz szkołe\"\n                    className=\"register__input\"\n                    value={school}\n                    onChange={e => setSchool(e.target.value)}\n                >\n                    <option value hidden>Wybierz szkołe</option>\n                    <option value=\"kilińskiego\">kilińskiego</option>\n                    <option value=\"test\">test</option>\n                </select>\n                <span className=\"register__error\">{errorName === 'school' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"register__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'password' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"repassword\"\n                    placeholder=\"Powtórz hasło\"\n                    className=\"register__input\"\n                    value={repassword}\n                    onChange={e => setRepassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'repassword' ? error : null}</span >\n                <div className=\"register__buttons\">\n                    <button\n                        type=\"button\"\n                        className=\"register__loginButton\"\n                        onClick={() => switchFormState('login')}\n                    >\n                        <p className=\"register__loginText\">\n                            Masz już konto?\n                    </p>\n                        <p className=\"register__loginTextBlue\">\n                            Zaloguj się\n                        </p>\n                    </button>\n                    <button className=\"register__registerButton\">\n                        Zarejestruj się <img src={arrow} alt=\"\" />\n                    </button>\n                </div>\n            </form >\n        </div >\n    );\n}\n\nexport default Register;","const setCookie = (cname, cvalue, exdays) => {\n  const d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  const expires = `expires= ${d.toUTCString()}`;\n  document.cookie = `${cname}=${cvalue};${expires};path=/`;\n};\nconst getCookie = (cname) => {\n  const name = `${cname}=`;\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const ca = decodedCookie.split(';');\n  for (let i = 0; i < ca.length; i += 1) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n};\nexport { setCookie, getCookie };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { SetSocket } from 'redux/actions/index';\nimport { getCookie, setCookie } from 'helper/cookies';\n\nimport './style/login.scss';\nimport arrow from 'svg/arrow.svg';\n\nconst Login = ({ switchFormState }) => {\n  const [username, setusername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const dispatch = useDispatch();\n  const tokenCookie = getCookie('token');\n  const errorController = (status) => {\n    if (status === 400) {\n      setError('Wpisz dane logowania');\n    } else if (status === 401) {\n      setError('Wpisane login lub hasło są nieprawidłowe');\n    } else if (status === 404 || status === 403) {\n      setError('Serwery aktualnie są niedostępne. Proszę spróbować ponownie później.');\n    }\n  };\n\n  const data = { username, password };\n  const handleSubmit = (e) => {\n    fetch(`${process.env.REACT_APP_API}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        errorController(res.status);\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.message) {\n          console.log('Złe dane');\n        } else {\n          localStorage.setItem('token', resData.token);\n          if (rememberMe) {\n            setCookie('token', resData.token, 7);\n          }\n          dispatch(SetSocket());\n        }\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        if (err == 'TypeError: Failed to fetch') errorController(404);\n      });\n    e.preventDefault();\n  };\n\n  if (tokenCookie.length > 0) {\n    localStorage.setItem('token', data.token);\n    dispatch(SetSocket());\n  }\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"login__title\">Logowanie</h1>\n      <form className=\"login__form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Pseudonim\"\n          className=\"login__input\"\n          value={username}\n          onChange={(e) => setusername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Hasło\"\n          className=\"login__input\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <span className=\"login__error\">{error}</span>\n        <div className=\"login__underInputs\">\n          <button type=\"button\" className=\"login__forgotPassword\">\n            Zapomniałeś hasła?\n          </button>\n          <label className=\"login__remember\" htmlFor=\"remember\">\n            <input\n              type=\"checkbox\"\n              name=\"remember\"\n              className=\"login__rememberCheckbox\"\n              onChange={(e) => setRememberMe(e.target.checked)}\n              checked={rememberMe}\n            />\n            Pamiętaj mnie\n          </label>\n        </div>\n        <button type=\"submit\" className=\"login__loginButton\">\n          Zaloguj się <img src={arrow} alt=\"\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"login__registerButton\"\n          onClick={() => switchFormState('register')}\n        >\n          Stwórz nowe konto\n        </button>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  switchFormState: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nimport './style/start.scss'\n\nconst Start = () => {\n    const [formState, switchFormState] = useState('login');\n    window.onload = () => {\n        window.location.hash = \"\";\n    }\n    return (\n        <div className=\"start\">\n            <div className=\"start__bannerText\">\n                Pozostań anonimowy i wyraź swoje opinie\n            </div>\n            <hr className=\"start__hr\" />\n            {formState === 'login' ? <Login switchFormState={switchFormState} /> : <Register switchFormState={switchFormState} />}\n        </div>\n    );\n}\n\nexport default Start;","/* eslint-disable no-underscore-dangle */\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  SetPosts, SetMyPosts, AddPost, AddPosts,\n} from 'redux/actions/index';\n\nconst SocketPosts = () => {\n  const dispatch = useDispatch();\n  const socket = useSelector((state) => state.socket);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('posts', (data) => {\n        if (data.length > 0) {\n          dispatch(SetPosts(data, data[data.length - 1]._id));\n        }\n      });\n      socket.on('post', (data) => {\n        dispatch(AddPost(data));\n      });\n      socket.on('morePosts', (data) => {\n        if (data.length > 0) {\n          dispatch(AddPosts(data, data[data.length - 1]._id));\n        }\n      });\n      socket.on('myPosts', (myPosts) => {\n        dispatch(SetMyPosts(myPosts));\n      });\n    }\n  }, [dispatch, socket]);\n  return null;\n};\n\nexport default SocketPosts;\n","/* eslint-disable no-underscore-dangle */\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SetMessages, AddMessage, AddMoreMessages } from 'redux/actions/index';\n\nconst SocketMessages = () => {\n  const dispatch = useDispatch();\n  const socket = useSelector((state) => state.socket);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      dispatch(AddMessage(message));\n    });\n\n    socket.on('moreMessages', (message) => {\n      if (message.length > 0) {\n        dispatch(AddMoreMessages(message, message[message.length - 1]._id));\n      }\n    });\n  }, [dispatch, socket]);\n  useEffect(() => {\n    socket.emit('joinChat', 'all');\n    socket.on('messages', (messagesDatabase) => {\n      if (messagesDatabase.length > 0) {\n        dispatch(SetMessages(messagesDatabase, messagesDatabase[0]._id));\n      }\n    });\n  }, [dispatch, socket]);\n  return null;\n};\n\nexport default SocketMessages;\n","import React from 'react';\nimport chatIco from 'svg/chatIco.svg';\nimport userIco from 'svg/userIco.svg';\nimport backButton from 'svg/backButton.svg';\nimport newChat from 'svg/newChat.svg';\n\n\nimport './styles/topBar.scss'\n\nconst TopBar = ({ setMenu, forceUpdateMain }) => {\n    return (\n        <div className=\"topBar\">\n            <ul className=\"topBar__optionsList\">\n                {window.location.hash === \"#chat\" ?\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button\n                            className=\"topBar__button topBar__button--menu\"\n                            onClick={() => {\n                                window.history.back();\n                            }}\n                        >\n                            <img src={backButton} alt=\"\" />\n                        </button>\n                    </li>\n                    :\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button className=\"topBar__button topBar__button--menu\" onClick={() => setMenu(true)}>\n                            <img src={userIco} alt=\"\" />\n                        </button>\n                    </li>\n                }\n\n                <li className=\"topBar__options topBar__options--banner\">\n                    schoolchan\n                </li>\n                {window.location.hash === \"#chat\" ?\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button className=\"topBar__button topBar__button--chat\" onClick={() => null}>\n                            <img src={newChat} alt=\"\" />\n                        </button>\n                    </li>\n                    :\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button\n                            className=\"topBar__button topBar__button--chat\"\n                            onClick={() => {\n                                window.location.hash = \"chat\";\n                                forceUpdateMain()\n                            }}>\n                            <img src={chatIco} alt=\"\" />\n                        </button>\n                    </li>\n                }\n\n            </ul>\n\n        </div>\n    );\n}\n\nexport default TopBar;","const whenPosted = (createdAt) => {\n  const date = new Date();\n  const minutes = (-1 * (Date.parse(createdAt) - date.getTime())) / (1000 * 60);\n  if (minutes > 43829) {\n    const ISODate = new Date(createdAt);\n    const year = ISODate.getFullYear();\n    let month = ISODate.getMonth() + 1;\n    let dt = ISODate.getDate();\n\n    if (dt < 10) {\n      dt = `0 ${dt}`;\n    }\n    if (month < 10) {\n      month = `0 ${month}`;\n    }\n    return `${dt} - ${month} - ${year}`;\n  }\n  if (minutes > 1440 * 2) {\n    return `${Math.ceil(minutes / 1440)} dni temu`;\n  }\n  if (minutes > 1440) {\n    return '1 dzień temu';\n  }\n  if (minutes > 60 * 2) {\n    return `${Math.ceil(minutes / 60)}h temu`;\n  }\n  if (minutes > 60) {\n    return 'godzinę temu';\n  }\n  if (minutes > 2) {\n    return `${Math.ceil(minutes)} min temu`;\n  }\n  if (minutes) {\n    return 'minutę temu';\n  }\n  return 'przed chwilą';\n};\nexport default whenPosted;\n","const imageStatus = {\n  before: 'BEFORE',\n  during: 'DURING',\n  done: 'DONE',\n};\nconst uploadImage = (input, setImage, setImageStatus) => {\n  setImageStatus(imageStatus.during);\n\n  const sendImage = (base64) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\n\n    const urlencoded = new URLSearchParams();\n    urlencoded.append('key', process.env.REACT_APP_SECRET);\n    urlencoded.append('image', base64);\n\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: 'follow',\n    };\n\n    fetch('https://api.imgbb.com/1/upload', requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setImageStatus(imageStatus.done);\n        return setImage({\n          large: result.data.image.url,\n          mini: result.data.thumb.url,\n          // medium: result.data.medium.url,\n        });\n      })\n      .catch((error) => console.log('error', error));\n  };\n  const file = input.current.files[0];\n  const reader = new FileReader();\n\n  reader.onloadend = () => {\n    const base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n    sendImage(base64result);\n  };\n\n  if (file) {\n    reader.readAsDataURL(file);\n  }\n};\nexport default uploadImage;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport autosize from 'autosize';\nimport { useSelector } from 'react-redux';\nimport imageIcon from 'svg/image_icon.svg';\nimport uploadImage from 'api/uploadImage';\n\nimport './styles/commentForm.scss';\n\nconst CommentForm = ({ focus, post }) => {\n  const [image, setImage] = useState('');\n  const [imageStatus, setImageStatus] = useState('BEFORE');\n  const [commentText, setCommentText] = useState('');\n  const socket = useSelector((state) => state.socket);\n  const textareaRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  const sendComment = (e) => {\n    e.preventDefault();\n    if (commentText.length > 0 && imageStatus !== 'DURING') {\n      const commentData = { image, commentText, postId: post._id };\n      socket.emit('sendComment', commentData);\n      setCommentText('');\n      setImage('');\n    }\n  };\n\n  autosize(textareaRef.current);\n\n  return (\n    <form className=\"commentForm\">\n      <label htmlFor=\"file\">\n        <img src={imageIcon} alt=\"sendImage\" />\n        <input\n          ref={fileInputRef}\n          id=\"file\"\n          className=\"commentForm__imageInput\"\n          type=\"file\"\n          accept=\"image/x-png,image/jpeg\"\n          onChange={() => uploadImage(fileInputRef, setImage, setImageStatus)}\n        />\n      </label>\n      <textarea\n        ref={textareaRef}\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={focus}\n        rows=\"1\"\n        wrap=\"hard\"\n        placeholder=\"Napisz komentarz...\"\n        className=\"commentForm__textInput\"\n        onChange={(e) => setCommentText(e.target.value)}\n        value={commentText}\n        onKeyPress={(e) => (e.key === 'Enter' ? sendComment(e) : null)}\n      />\n      <button type=\"submit\" className=\"commentForm__submit\" onClick={(e) => sendComment(e)}>\n        ⌲\n      </button>\n    </form>\n  );\n};\n\nCommentForm.propTypes = {\n  focus: PropTypes.bool,\n  post: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nCommentForm.defaultProps = {\n  focus: false,\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport racoonMale from 'svg/racoon_male.svg';\n\nimport './styles/comment.scss';\n\nconst Comment = ({ comment }) => (\n    <li className=\"comment\">\n      <img src={racoonMale} alt=\"sex\" className=\"comment__sex\" />\n      <div className=\"comment__text\">\n        <span className=\"comment__username\">{comment.username}</span>\n        &nbsp;{comment.commentText}\n      </div>\n      &nbsp;\n      {comment.image ? (\n        <a href={comment.image.large} rel=\"noopener noreferrer\" target=\"_blank\">\n          Obraz\n        </a>\n      ) : null}\n    </li>\n);\n\nComment.propTypes = {\n  comment: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Comment;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport backIco from 'svg/backIco.svg';\nimport useForceUpdate from 'use-force-update';\nimport CommentForm from './CommentForm';\nimport Comment from './Comment';\n\nimport './styles/comments.scss';\n\nconst Comments = ({\n  post, focus, postComments, forceUpdatePost,\n}) => {\n  const socket = useSelector((state) => state.socket);\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    if (socket) {\n      socket.on('comment', () => {\n        forceUpdate();\n      });\n    }\n  }, [socket, forceUpdate]);\n  window.onhashchange = () => {\n    forceUpdatePost();\n  };\n  return (\n    <div className=\"comments\">\n      <div className=\"comments__topBar\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            window.history.back();\n          }}\n        >\n          <img src={backIco} alt=\"back\" className=\"comments__backButtonImg\" />\n        </button>\n        <div className=\"comments__title\">Komentarze</div>\n      </div>\n      <ul className=\"comments__list\">\n        {postComments\n          .slice(0)\n          .reverse()\n          .map((comment) => (\n            <Comment key={comment._id} comment={comment} />\n          ))}\n      </ul>\n      <CommentForm focus={focus} post={post} />\n    </div>\n  );\n};\n\nComments.propTypes = {\n  post: PropTypes.objectOf(PropTypes.any).isRequired,\n  focus: PropTypes.bool,\n  postComments: PropTypes.arrayOf(PropTypes.object).isRequired,\n  forceUpdatePost: PropTypes.func.isRequired,\n};\n\nComments.defaultProps = {\n  focus: false,\n};\n\nexport default Comments;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport racoonMale from 'svg/racoon_male.svg';\nimport reportIcon from 'svg/report.svg';\nimport useForceUpdate from 'use-force-update';\nimport whenPosted from 'helper/whenPosted';\nimport { useSelector } from 'react-redux';\nimport Comments from './Comments';\n\nimport './styles/post.scss';\n\nconst Post = ({ post }) => {\n  const socket = useSelector((state) => state.socket);\n  const [commentsLength, setCommentsLength] = useState(0);\n  const {\n    comments, image, body, createdAt, username, _id, like, dislike,\n  } = post;\n\n  const [reaction, setReaction] = useState({ like, dislike });\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    try {\n      setCommentsLength(comments.length);\n    } catch (error) {\n      setCommentsLength(0);\n    }\n  }, [comments.length]);\n\n  useEffect(() => {\n    socket.on('comment', (comment) => {\n      if (_id === comment.postId) {\n        setCommentsLength(comments.length + 1);\n        comments.push(comment);\n        forceUpdate();\n      }\n    });\n  }, [comments, socket, _id, forceUpdate]);\n\n  useEffect(() => {\n    socket.on('newReactionAdd', ({ postId, type, usernameLike }) => {\n      if (postId === _id) {\n        if (type === 'like') {\n          setReaction({ ...reaction, like: usernameLike });\n        } else setReaction({ ...reaction, dislike: usernameLike });\n      }\n    });\n    socket.on('newReactionSub', ({ postId, type, usernameLike }) => {\n      if (postId === _id) {\n        if (type === 'like') {\n          const index = like.indexOf(usernameLike);\n          like.splice(index, 1);\n        } else {\n          const index = dislike.indexOf(usernameLike);\n          dislike.splice(index, 1);\n        }\n        setReaction({ ...reaction, [type]: [type].length });\n      }\n    });\n  }, []);\n\n  const handleReaction = (type) => {\n    const reactionData = {\n      postId: _id,\n      type,\n    };\n    socket.emit('reaction', reactionData);\n  };\n\n  return (\n    <li className=\"post\">\n      <img src={racoonMale} alt=\"sex\" className=\"post__sex\" />\n      <div className=\"post__content\">\n        <div className=\"post__username\">{username}</div>\n        <div className=\"post__postDate\">{whenPosted(createdAt)}</div>\n        <div className=\"post__body\">{body}</div>\n        {image && <img className=\"post__image\" src={image.large} alt=\"\" />}\n        <div className=\"post__buttons\">\n          <button type=\"button\" className=\"post__like\" onClick={() => handleReaction('like')}>\n            +1\n          </button>\n          <button type=\"button\" className=\"post__dislike\" onClick={() => handleReaction('dislike')}>\n            -1\n          </button>\n          <button\n            type=\"button\"\n            className=\"post__commentsButton\"\n            onClick={() => {\n              window.location.hash = 'comments';\n              forceUpdate();\n            }}\n          >\n            {commentsLength === 0 ? 'Napisz komentarz' : `Komentarze ${commentsLength}`}\n          </button>\n        </div>\n      </div>\n      <button type=\"button\" className=\"post__reportButton\">\n        <img src={reportIcon} alt=\"report\" />\n      </button>\n      <div className=\"post__bottom\">\n        <hr className=\"post__hr\" />\n        <div>\n          <div className=\"post__votes\">\n            <span className=\"post__reactions\">{reaction.like.length}</span>\n            <span>&nbsp;szopów jest za, a&nbsp;</span>\n            <span className=\"post__reactions\">{reaction.dislike.length}</span>\n            <span>&nbsp;przeciw</span>\n          </div>\n          <ul className=\"post__comments\">\n            {comments\n              .slice(0)\n              .reverse()\n              .slice(0, 3)\n              .map((comment) => (\n                <li key={comment._id}>\n                  <span className=\"post__username\">{comment.username}</span> {comment.commentText}\n                </li>\n              ))}\n            {commentsLength > 3 ? (\n              <li>\n                <button\n                  type=\"button\"\n                  className=\"post__showAllButton\"\n                  onClick={() => {\n                    window.location.hash = 'comments';\n                    forceUpdate();\n                  }}\n                >\n                  Zobacz wszystkie\n                </button>\n              </li>\n            ) : null}\n          </ul>\n        </div>\n      </div>\n      {window.location.hash === '#comments' ? (\n        <Comments\n          forceUpdatePost={forceUpdate}\n          post={post}\n          postComments={comments}\n          focus={commentsLength === 0}\n        />\n      ) : null}\n    </li>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, connect } from 'react-redux';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport Post from './Post';\n\nimport './styles/posts.scss';\n\nconst Posts = ({ postType, posts }) => {\n  let waitForMorePosts = false;\n  const socket = useSelector((state) => state.socket);\n\n  useScrollPosition(\n    ({ currPos }) => {\n      const scrollProgress = document.body.offsetHeight - window.innerHeight + currPos.y;\n      if (!waitForMorePosts && scrollProgress < 0) {\n        socket.emit('getMorePosts', posts.postsLastId);\n        waitForMorePosts = true;\n      }\n    },\n    [posts],\n    null,\n    false,\n    300,\n  );\n\n  return (\n    <ul className=\"posts\">\n      {posts[postType].map((post) => (\n        <Post key={post._id} post={post} />\n      ))}\n    </ul>\n  );\n};\n\nconst mapPosts = (posts) => posts;\n\nPosts.propTypes = {\n  postType: PropTypes.string,\n  posts: PropTypes.objectOf(PropTypes.any).isRequired,\n};\nPosts.defaultProps = {\n  postType: 'posts',\n};\nexport default connect(mapPosts)(Posts);\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Draggable from 'react-draggable';\nimport uploadImage from 'api/uploadImage';\n\nimport closeIco from 'svg/closeIco.svg';\nimport formIco from 'svg/formIco.svg';\nimport uploadImageIco from 'svg/uploadImage.svg';\nimport uploadImageDoneIco from 'svg/uploadImageDone.svg';\nimport uploadImageLoadingIco from 'svg/uploadImageLoading.svg';\n\nimport './styles/createPostForm.scss';\n\nconst CreatePostForm = ({ setCreatePostFrom }) => {\n  const [body, setBody] = useState('');\n  const [image, setImage] = useState('');\n  const [imageStatus, setImageStatus] = useState('BEFORE');\n  const socket = useSelector((state) => state.socket);\n  const fileInputRef = useRef(null);\n\n  const sendPost = (e) => {\n    e.preventDefault();\n    const postData = { body, image };\n    if (postData) {\n      socket.emit('sendPost', postData);\n      setCreatePostFrom(false);\n    }\n  };\n\n  const imageStatusIMG = () => {\n    switch (imageStatus) {\n      case 'BEFORE':\n        return uploadImageIco;\n      case 'DURING':\n        return uploadImageLoadingIco;\n      case 'DONE':\n        return uploadImageDoneIco;\n      default:\n        return uploadImageIco;\n    }\n  };\n\n  return (\n    <Draggable axis=\"y\" handle=\".createPostForm__handle\">\n      <div className=\"createPostForm\">\n        <div className=\"createPostForm__handle\">\n          <div>\n            <img className=\"createPostForm__formIco\" src={formIco} alt=\"createPost\" />\n            <span className=\"createPostForm__handleTitle\">Utwórz post</span>\n          </div>\n          <button\n            type=\"button\"\n            className=\"createPostForm__closeButton\"\n            onClick={() => {\n              setCreatePostFrom(false);\n            }}\n          >\n            <img src={closeIco} alt=\"closeForm\" />\n          </button>\n        </div>\n        <form action=\"\" className=\"createPostForm__form\">\n          <div className=\"createPostForm__label\">Treść:</div>\n          <textarea\n            name=\"body\"\n            className=\"createPostForm__postBody\"\n            rows=\"8\"\n            placeholder=\"Napisz coś...\"\n            onChange={(e) => setBody(e.target.value)}\n            value={body}\n          />\n          <div className=\"createPostForm__label\">Obraz:</div>\n          <label className=\"createPostForm__labelButtonStyle\" htmlFor=\"file\">\n            <img src={imageStatusIMG()} alt=\"upload\" className=\"createPostForm__uploadImg\" />\n            <input\n              ref={fileInputRef}\n              className=\"createPostForm__imageButton\"\n              name=\"image\"\n              type=\"file\"\n              accept=\"image/x-png,image/jpeg\"\n              id=\"file\"\n              onChange={() => uploadImage(fileInputRef, setImage, setImageStatus)}\n            />\n          </label>\n          <button type=\"submit\" className=\"createPostForm__submit\" onClick={(e) => sendPost(e)}>\n            Opublikuj\n          </button>\n        </form>\n      </div>\n    </Draggable>\n  );\n};\n\nCreatePostForm.propTypes = {\n  setCreatePostFrom: PropTypes.func,\n};\n\nCreatePostForm.defaultProps = {\n  setCreatePostFrom: () => 0,\n};\n\nexport default CreatePostForm;\n","import React, { useState } from 'react';\nimport Add from 'svg/addIco.svg';\nimport CreatePostForm from './CreatePostForm';\n\nimport './styles/createPost.scss';\n\nconst CreatePost = () => {\n  const [createPostFrom, setCreatePostFrom] = useState(false);\n  return (\n    <div className=\"createPost\">\n      {createPostFrom ? (\n        <CreatePostForm setCreatePostFrom={setCreatePostFrom} />\n      ) : (\n        <button\n          type=\"button\"\n          className=\"createPost__button\"\n          onClick={() => setCreatePostFrom(true)}\n        >\n          <img src={Add} alt=\"\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Posts from './post/Posts';\nimport CreatePost from './createPost/CreatePost';\n\nimport './styles/chan.scss';\n\nconst Chan = ({ postType }) => {\n  const visible = { display: 'block' };\n  if (window.location.hash !== '') {\n    visible.display = 'none';\n  } else visible.display = 'block';\n  return (\n    <div style={visible} className=\"chan\">\n      <Posts postType={postType} />\n      <CreatePost />\n    </div>\n  );\n};\nChan.propTypes = {\n  postType: PropTypes.string,\n};\nChan.defaultProps = {\n  postType: 'posts',\n};\nexport default Chan;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport backButton from 'svg/backButton.svg';\nimport online from 'svg/online.svg';\nimport './styles/topBarChat.scss';\n\nconst TopBarChat = ({ chatWith, setChatWith }) => (\n    <div className=\"topBarChat\">\n      <button\n        type=\"button\"\n        className=\"topBarChat__backButton\"\n        onClick={() => {\n          setChatWith('');\n          window.history.back();\n        }}\n      >\n        <img src={backButton} alt=\"back\" />\n      </button>\n      <div className=\"topBarChat__title\">{chatWith}</div>\n      <div className=\"topBarChat__online\">\n        <div className=\"topBarChat__onlineNumber\">1</div>\n        <img src={online} alt=\"online\" />\n      </div>\n    </div>\n);\n\nTopBarChat.propTypes = {\n  chatWith: PropTypes.string.isRequired,\n  setChatWith: PropTypes.func.isRequired,\n};\n\nexport default TopBarChat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles/message.scss';\n\nconst Message = ({ message, isMy }) => (\n  <div className={`message ${isMy ? 'message--end' : null}`}>\n    <div className={`message__speechBubble ${isMy ? 'message__speechBubble--end' : null}`}>\n      {message.body}\n      {message.image.mini && (\n        <>\n          <a href={message.image.large} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={message.image.mini} alt=\"\" />\n          </a>\n        </>\n      )}\n    </div>\n    <div className=\"message__username\">{message.username}</div>\n  </div>\n);\n\nMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.any).isRequired,\n  isMy: PropTypes.bool.isRequired,\n};\n\nexport default Message;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, connect } from 'react-redux';\nimport Message from './Message';\n\nimport './styles/messages.scss';\n\nconst Messages = ({ messages }) => {\n  let isWaitingForMessages = false;\n\n  const socket = useSelector((state) => state.socket);\n  const username = useSelector((state) => state.userInfo.username);\n  const [autoScroll, setAutoScroll] = useState(true);\n  const bottomDiv = useRef(null);\n  const messagesScrollRef = useRef(null);\n  const messagesLoadMoreButtonRef = useRef(null);\n\n  const scrollToBottom = (speed) => {\n    if (speed === 'smooth') {\n      bottomDiv.current.scrollIntoView({ behavior: 'smooth' });\n    } else if (speed === 'fast') {\n      bottomDiv.current.scrollIntoView();\n    }\n  };\n\n  const loadMoreMessages = () => {\n    isWaitingForMessages = true;\n    socket.emit('getMoreMessages', messages.messagesLastId);\n  };\n  useEffect(() => {\n    scrollToBottom('fast');\n  }, []);\n  useEffect(() => {\n    const messagesBlock = messagesScrollRef.current;\n    const button = messagesLoadMoreButtonRef.current;\n    const loadedMessages = document.querySelectorAll('.message');\n    if (messagesBlock && loadedMessages.length > 5) {\n      let getMessagesHeight;\n      for (let i = 0; i < 5; i += 1) {\n        getMessagesHeight = loadedMessages[i].offsetHeight;\n      }\n      setInterval(() => {\n        const y = messagesBlock.scrollTop;\n        if (!isWaitingForMessages && messages.messages.length > 14 && y < 50) {\n          messagesBlock.scrollTop = y + getMessagesHeight;\n          button.click();\n        }\n      }, 1000);\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    const newMessage = document.querySelectorAll('.message');\n    const { scrollHeight, scrollTop, offsetHeight } = messagesScrollRef.current;\n    if (newMessage.length > 0) {\n      const msgHeight = scrollHeight - scrollTop - offsetHeight;\n      const scrollHeightMessages = msgHeight - newMessage[newMessage.length - 1].offsetHeight - 24;\n      if (scrollHeightMessages < 100) {\n        setAutoScroll(true);\n      } else {\n        setAutoScroll(false);\n      }\n    }\n    if (autoScroll) {\n      scrollToBottom('smooth');\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"messages\">\n      <div ref={messagesScrollRef} className=\"messages__scroll\">\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          ref={messagesLoadMoreButtonRef}\n          type=\"button\"\n          className=\"messages__loadMoreButton\"\n          onClick={() => loadMoreMessages()}\n        />\n        {messages.messages.map((message) => (\n          <Message key={message._id} message={message} isMy={message.username === username} />\n        ))}\n        <div ref={bottomDiv} id=\"bottom\" />\n      </div>\n    </div>\n  );\n};\n\nMessages.propTypes = {\n  messages: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapMessages = (messages) => messages;\n\nexport default connect(mapMessages)(Messages);\n","import React, { useState, useRef } from 'react';\nimport uploadImage from 'api/uploadImage';\nimport autosize from 'autosize';\nimport sendMessage from 'svg/sendMessage.svg';\nimport imageIcon from 'svg/image_icon.svg';\nimport { useSelector } from 'react-redux';\n\nimport './styles/messageForm.scss';\n\nconst MessageForm = () => {\n  const socket = useSelector((state) => state.socket);\n  const [messageText, setMessageText] = useState('');\n  const [messageImage, setMessageImage] = useState('');\n  const [imageStatus, setImageStatus] = useState('BEFORE');\n  const textareaRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  autosize(textareaRef.current);\n\n  const handleFocus = () => {\n    const bottom = document.querySelector('#bottom');\n    bottom.scrollIntoView();\n  };\n  const SendMessage = () => {\n    if (imageStatus !== 'DURING') {\n      const messageObj = { messageText, messageImage };\n      socket.emit('sendMessage', messageObj);\n      setMessageText('');\n      setMessageImage('');\n    }\n  };\n  const handleClickSend = (e) => {\n    e.preventDefault();\n    SendMessage();\n  };\n\n  return (\n    <div className=\"messageForm\">\n      <label className=\"messageForm__sendImageButton\" htmlFor=\"file\">\n        <input\n          ref={fileInputRef}\n          className=\"messageForm__sendImageInput\"\n          type=\"file\"\n          id=\"file\"\n          onChange={() => uploadImage(fileInputRef, setMessageImage, setImageStatus)}\n        />\n        <img src={imageIcon} alt=\"\" />\n      </label>\n      <textarea\n        ref={textareaRef}\n        className=\"messageForm__textarea\"\n        rows=\"1\"\n        wrap=\"hard\"\n        placeholder=\"Napisz wiadomość...\"\n        onChange={(e) => setMessageText(e.target.value)}\n        onKeyPress={(e) => (e.key === 'Enter' ? handleClickSend(e) : null)}\n        value={messageText}\n        onFocus={() => handleFocus()}\n      />\n      <button\n        type=\"button\"\n        className=\"messageForm__sendMessageButton\"\n        onClick={(e) => handleClickSend(e)}\n      >\n        <img src={sendMessage} alt=\"\" />\n      </button>\n    </div>\n  );\n};\n\nexport default MessageForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TopBarChat from './TopBarChat';\nimport Messages from './messages/Messages';\nimport MessageForm from './MessageForm';\n\nimport './styles/conversation.scss';\n\nconst Conversation = ({ chatWith, setChatWith }) => (\n    <div className=\"conversation\">\n      <TopBarChat chatWith={chatWith} setChatWith={setChatWith} />\n      <Messages chatWith={chatWith} />\n      <MessageForm chatWith={chatWith} />\n    </div>\n);\n\nConversation.propTypes = {\n  chatWith: PropTypes.string,\n  setChatWith: PropTypes.func,\n};\n\nConversation.defaultProps = {\n  chatWith: 'all',\n  setChatWith: () => 0,\n};\n\nexport default Conversation;\n","import React, { useState } from 'react';\nimport all from 'svg/all.svg';\nimport online from 'svg/online.svg';\nimport PropTypes from 'prop-types';\nimport Conversation from './Conversation';\n\nimport './styles/chat.scss';\n\nconst Chat = ({ forceUpdateMain }) => {\n  const [chatWith, setChatWith] = useState('');\n  window.onhashchange = () => {\n    forceUpdateMain();\n  };\n\n  return (\n    <>\n      <div className=\"chat\">\n        <button\n          type=\"button\"\n          className=\"chat__all\"\n          onClick={() => {\n            setChatWith('all');\n            window.location.hash += '/#all';\n          }}\n        >\n          <div className=\"chat__allHeader\">\n            <img src={all} alt=\"wtf\" />\n            <div className=\"chat__allTitle\">Wszyscy</div>\n          </div>\n          <div className=\"chat__allOnline\">\n            <div className=\"chat__allOnlineNumber\">0</div>\n            <img src={online} alt=\"\" />\n          </div>\n        </button>\n        <ul>\n          <li>Tu znajdą się Twoje rozmowy z innymi szopami</li>\n        </ul>\n      </div>\n      {chatWith ? <Conversation chatWith={chatWith} setChatWith={setChatWith} /> : null}\n    </>\n  );\n};\n\nChat.propTypes = {\n  forceUpdateMain: PropTypes.func,\n};\nChat.defaultProps = {\n  forceUpdateMain: null,\n};\n\nexport default Chat;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import closeIco from 'svg/closeIco.svg';\nimport { useSelector } from 'react-redux';\nimport racoonMale from 'svg/racoon_male.svg';\nimport { setCookie } from 'helper/cookies';\nimport './styles/menu.scss';\n\nconst logout = () => {\n  localStorage.setItem('token', null);\n  setCookie('token', '', 0);\n  window.location.reload();\n};\n\nconst Menu = ({ setMenu, setPostType, postType }) => {\n  const username = useSelector((state) => state.userInfo.username);\n  return (\n    <aside className=\"menu\">\n      <div className=\"menu__content\">\n        <div className=\"menu__header\">\n          <img src={racoonMale} alt=\"profile\" className=\"menu__profile\" />\n          Witaj,&nbsp;<span className=\"menu__username\">{username}</span>\n          {/* <button className=\"menu__close\" onClick={() => setMenu(false)}>\n                        <img src={closeIco} alt=\"close\" />\n                    </button> */}\n        </div>\n        <div className=\"menu__options\">\n          <button\n            type=\"button\"\n            className={`menu__option ${postType === 'posts' ? 'menu__option--chosen' : null}`}\n            onClick={() => {\n              setPostType('posts');\n              setMenu(false);\n            }}\n          >\n            Tablica\n          </button>\n          <button\n            type=\"button\"\n            className={`menu__option ${postType === 'myPosts' ? 'menu__option--chosen' : null}`}\n            onClick={() => {\n              setPostType('myPosts');\n              setMenu(false);\n            }}\n          >\n            Moje posty\n          </button>\n          <button\n            type=\"button\"\n            className={`menu__option ${\n              postType === 'followingPosts' ? 'menu__option--chosen' : null\n            }`}\n            onClick={() => {\n              setPostType('followingPosts');\n              setMenu(false);\n            }}\n          >\n            Obserwowane\n          </button>\n          <button type=\"button\" className=\"menu__option\">\n            Sklep\n          </button>\n          <button type=\"button\" className=\"menu__option\">\n            Randka\n          </button>\n          <button type=\"button\" className=\"menu__option\">\n            Ustawienia\n          </button>\n          <button\n            type=\"button\"\n            className=\"menu__option menu__option--logout\"\n            onClick={() => logout()}\n          >\n            Wyloguj\n          </button>\n        </div>\n      </div>\n      <div className=\"menu__bg\" onClick={() => setMenu(false)} />\n    </aside>\n  );\n};\n\nMenu.propTypes = {\n  setMenu: PropTypes.func.isRequired,\n  setPostType: PropTypes.func.isRequired,\n  postType: PropTypes.string,\n};\n\nMenu.defaultProps = {\n  postType: 'posts',\n};\n\nexport default Menu;\n","import React, { useState } from 'react';\nimport useForceUpdate from 'use-force-update';\nimport SocketPosts from 'api/SocketPosts';\nimport SocketMessages from 'api/SocketMessages';\nimport TopBar from './TopBar';\nimport Chan from './Chan';\nimport Chat from './aside/chat/Chat';\nimport Menu from './aside/menu/Menu';\n\nconst Main = () => {\n  const forceUpdate = useForceUpdate();\n  const [menu, setMenu] = useState(false);\n  const [postType, setPostType] = useState('posts');\n  window.onload = () => {\n    window.location.hash = '';\n  };\n  return (\n    <div>\n      <SocketPosts />\n      <SocketMessages />\n      <TopBar setMenu={setMenu} forceUpdateMain={forceUpdate} />\n      {window.location.hash.indexOf('chat') > 0 ? <Chat forceUpdateMain={forceUpdate} /> : null}\n      {menu ? <Menu setMenu={setMenu} setPostType={setPostType} postType={postType} /> : null}\n      <Chan postType={postType} />\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SetUser } from 'redux/actions/index';\nimport Start from 'components/mobile/start/Start';\nimport Main from 'components/mobile/chan/Main';\nimport isMobile from 'is-mobile';\n\nconst SocketConnect = () => {\n  const ENDPOINT = process.env.REACT_APP_API;\n  const dispatch = useDispatch();\n  const socket = useSelector((state) => state.socket);\n  const isLogged = useSelector((state) => state.socket.connected);\n  useEffect(() => {\n    if (socket) {\n      socket.on('error', (err) => {\n        if (err) {\n          localStorage.removeItem('token');\n        }\n      });\n      socket.on('connect', () => {});\n      socket.on('userInfo', (res) => {\n        dispatch(SetUser(res));\n        socket.emit('joinChan', (error) => {\n          if (error) {\n            // alert(error);\n          }\n        });\n      });\n\n      socket.on('connect_error', () => {\n        localStorage.removeItem('token');\n      });\n    }\n  }, [ENDPOINT, dispatch, socket]);\n  const status = () => {\n    if (isMobile()) {\n      if (isLogged) {\n        return <Main />;\n      }\n      if (!isLogged) {\n        return <Start />;\n      }\n    }\n    if (!isMobile()) {\n      if (isLogged) {\n        return 'noMobileLogged';\n      }\n      if (!isLogged) {\n        return 'noMobileNoLogged';\n      }\n    }\n    return null;\n  };\n  return <>{status()}</>;\n};\n\nexport default SocketConnect;\n","import React from 'react';\nimport * as ServiceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport SocketConnect from 'api/SocketConnect';\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SocketConnect />\n    </Provider>, document.getElementById('root'));\n\nServiceWorker.register();\n\nif ('serviceWorker' in navigator) {\n    console.log(\"Will the service worker register?\");\n    navigator.serviceWorker.register('./serviceWorker.js')\n        .then(function (reg) {\n            console.log(\"Yes, it did.\");\n        }).catch(function (err) {\n            console.log(\"No it didn't. This happened: \", err)\n        });\n}"],"sourceRoot":""}