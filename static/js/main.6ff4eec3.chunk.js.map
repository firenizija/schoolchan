{"version":3,"sources":["svg/arrow.svg","svg/racoon_male.svg","svg/chatIco.svg","svg/userIco.svg","svg/report.svg","svg/image_icon.svg","svg/backIco.svg","svg/addIco.svg","svg/closeIco.svg","svg/formIco.svg","svg/uploadImage.svg","svg/uploadImageDone.svg","serviceWorker.js","api/SocketConnect.js","redux/reducers/isLogged.js","redux/reducers/socket.js","redux/reducers/index.js","components/mobile/start/Register.js","components/mobile/start/Login.js","redux/actions/index.js","components/mobile/start/Start.js","components/mobile/chan/TopBar.js","components/mobile/chan/post/Comment.js","components/mobile/chan/post/commentForm.js","components/mobile/chan/post/Comments.js","helper/whenPosted.js","components/mobile/chan/post/Post.js","components/mobile/chan/post/Posts.js","components/mobile/chan/createPost/CreatePostForm.js","components/mobile/chan/createPost/CreatePost.js","components/mobile/chan/Chan.js","components/mobile/chan/Main.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","socket","tokenIsSet","localStorage","getItem","loggedReducer","action","type","AllReducers","combineReducers","isLogged","Register","switchFormState","useState","username","setUsername","school","setSchool","repassword","setRepassword","password","setPassword","setError","errorName","setErrorName","data","className","onSubmit","e","fetch","process","method","headers","body","JSON","stringify","response","json","name","preventDefault","placeholder","value","onChange","target","hidden","onClick","src","arrow","alt","Login","setusername","dispatch","useDispatch","errorController","status","res","message","setItem","token","Start","formState","TopBar","userIco","chatIco","Comment","comment","racoonMale","commentText","image","href","large","rel","CommentForm","focus","post","setImage","setCommentText","useSelector","uploadImage","file","files","reader","FileReader","onloadend","base64","myHeaders","Headers","append","urlencoded","URLSearchParams","redirect","url","mini","thumb","sendImage","result","substr","indexOf","readAsDataURL","autosize","document","querySelector","imageIcon","autoFocus","rows","wrap","commentData","postId","_id","emit","sendComment","Comments","postComments","forceUpdatePost","forceUpdate","useForceUpdate","useEffect","on","onhashchange","history","back","backIco","slice","reverse","map","key","whenPosted","createdAt","date","Date","minutes","parse","getTime","ISODate","year","getFullYear","month","getMonth","dt","getDate","Math","ceil","Post","commentsLength","setCommentsLength","comments","length","push","medium","hash","reportIcon","Posts","posts","setPosts","id","CreatePostForm","setCreatePostFrom","setBody","getElementById","axis","handle","formIco","closeIco","htmlFor","uploadImageIco","uploadImageDoneIco","accept","postData","sendPost","CreatePost","createPostFrom","Add","Chan","Main","onbeforeunload","SocketConnect","ENDPOINT","io","err","removeItem","alert","isMobile","store","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","URL","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker","ServiceWorker","reg"],"mappings":"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","file":"static/js/main.6ff4eec3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.1d027598.svg\";","module.exports = __webpack_public_path__ + \"static/media/racoon_male.9eabe416.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatIco.4195cd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIco.c95fa3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.b7a16ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_icon.eae12adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/backIco.8bf6e5a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIco.a83663f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeIco.6be77778.svg\";","module.exports = __webpack_public_path__ + \"static/media/formIco.db5ef68f.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImage.af8867ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImageDone.3e48864c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SignOut, SetSocket } from 'redux/actions/index';\nimport Start from 'components/mobile/start/Start';\nimport Main from 'components/mobile/chan/Main';\nimport isMobile from 'is-mobile';\n\nlet socket;\n\nconst SocketConnect = () => {\n    const ENDPOINT = process.env.REACT_APP_API;\n    const dispatch = useDispatch();\n    const isLogged = useSelector(state => state.isLogged);\n    useEffect(() => {\n        socket = io(ENDPOINT, {\n            'query': 'token=' + localStorage.getItem(\"token\")\n        });\n        dispatch(SetSocket(socket));\n        socket.on(\"error\", function (err) {\n            if (err) {\n                localStorage.removeItem(\"token\");\n                dispatch(SignOut())\n            }\n        });\n        socket.on('connect', () => {\n\n        })\n        socket.on('userInfo', (res) => {\n            // setUsername(res.username);\n            // setSchool(res.school);\n            socket.emit('joinChan', (error) => {\n                if (error) {\n                    alert(error);\n                }\n            });\n        });\n\n        socket.on('connect_error', () => {\n            console.log(\"Brak połączenia\")\n            localStorage.removeItem(\"token\");\n            dispatch(SignOut())\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ENDPOINT, dispatch, socket]);\n    return (\n        <>\n            {isLogged ?\n                isMobile() ? <Main /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"\n                :\n                isMobile() ? <Start /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"}\n        </>\n    )\n}\n\nexport default SocketConnect;","const tokenIsSet = localStorage.getItem(\"token\") !== \"\";\nconst loggedReducer = (state = tokenIsSet, action) => {\n    switch (action.type) {\n        case 'SIGN_IN':\n            return true;\n        case 'SIGN_OUT':\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loggedReducer;","const socket = (state = \"\", action) => {\n    switch (action.type) {\n        case 'SET_SOCKET':\n            return action.socket;\n        case 'RESET_SOCKET':\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default socket;","import isLogged from './isLogged'\nimport socket from './socket'\nimport { combineReducers } from 'redux';\n\nconst AllReducers = combineReducers({\n    isLogged,\n    socket\n})\nexport default AllReducers;","import React, { useState } from 'react';\n\nimport './style/register.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Register = ({ switchFormState }) => {\n    const [username, setUsername] = useState('');\n    const [school, setSchool] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [errorName, setErrorName] = useState('');\n\n    const errorController = (name) => {\n        if (name === \"MissingUsernameError\") {\n            setError(\"Podaj nazwę uzytkownika\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"MissingPasswordError\") {\n            setError(\"Wpisz hasło\");\n            setErrorName(\"password\");\n        }\n        else if (name === \"PasswordsDoNotMatch\") {\n            setError(\"Podane hasła nie są takie same\");\n            setErrorName(\"repassword\");\n        }\n        else if (name === \"UserExistsError\") {\n            setError(\"Ten pseudonim juz jest zajęty\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"NoSchoolSelected\") {\n            setError(\"Wybierz szkołę\");\n            setErrorName(\"school\");\n        }\n        else if (name === \"AccountCreated\") {\n            switchFormState(\"login\")\n        }\n        else if (name) {\n            setError(\"Nieznany błąd\");\n            setErrorName(\"repassword\");\n        }\n        else switchFormState(\"login\")\n    }\n\n    const data = { username, school, repassword, password };\n\n    const handleSubmit = e => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Response:', data);\n                errorController(data.name);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n        e.preventDefault();\n    }\n\n\n    return (\n        <div className=\"register\">\n            <div>\n                <h1 className=\"register__title\">\n                    Stwórz nowe konto\n            </h1>\n                <h2 className=\"register__text\">\n                    Trzymaj kontakt anonimowo ze społecznością swojej szkoły.\n            </h2>\n            </div>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Pseudonim\"\n                    className=\"register__input\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'username' ? error : null}</span>\n                <select\n                    name=\"school\"\n                    placeholder=\"Wybierz szkołe\"\n                    className=\"register__input\"\n                    value={school}\n                    onChange={e => setSchool(e.target.value)}\n                >\n                    <option value hidden>Wybierz szkołe</option>\n                    <option value=\"kilińskiego\">kilińskiego</option>\n                    <option value=\"test\">test</option>\n                </select>\n                <span className=\"register__error\">{errorName === 'school' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"register__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'password' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"repassword\"\n                    placeholder=\"Powtórz hasło\"\n                    className=\"register__input\"\n                    value={repassword}\n                    onChange={e => setRepassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'repassword' ? error : null}</span >\n                <div className=\"register__buttons\">\n                    <button\n                        type=\"button\"\n                        className=\"register__loginButton\"\n                        onClick={() => switchFormState('login')}\n                    >\n                        <p className=\"register__loginText\">\n                            Masz już konto?\n                    </p>\n                        <p className=\"register__loginTextBlue\">\n                            Zaloguj się\n                        </p>\n                    </button>\n                    <button className=\"register__registerButton\">\n                        Zarejestruj się <img src={arrow} alt=\"\" />\n                    </button>\n                </div>\n            </form >\n        </div >\n    );\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { SignIn } from 'redux/actions/index';\n\nimport './style/login.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Login = ({ switchFormState }) => {\n    const [username, setusername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const dispatch = useDispatch();\n\n    const errorController = (status) => {\n        if (status === 400) {\n            setError(\"Wpisz dane logowania\");\n        } else if (status === 401) {\n            setError(\"Wpisane login lub hasło są nieprawidłowe\");\n        } else if (status === 404 || status === 403) {\n            setError(\"Serwery aktualnie są niedostępne. Proszę spróbować ponownie później.\");\n        } else if (status === 200) {\n        }\n    }\n\n    const data = { username, password }\n    const handleSubmit = (e) => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => { errorController(res.status); return (res.json()) })\n            .then((data) => {\n                console.log('Success:', data);\n                if (data.message) {\n                    console.log(\"Złe dane\");\n                } else {\n                    localStorage.setItem(\"token\", data.token);\n                    dispatch(SignIn());\n                }\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                if (error == \"TypeError: Failed to fetch\") errorController(404)\n            });\n        e.preventDefault();\n    }\n    return (\n        <div className=\"login\">\n            <h1 className=\"login__title\">\n                Logowanie\n            </h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pseudonim\"\n                    className=\"login__input\"\n                    value={username}\n                    onChange={e => setusername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"login__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"login__error\">{error}</span>\n                <div className=\"login__underInputs\">\n                    <button className=\"login__forgotPassword\">\n                        Zapomniałeś hasła?\n                    </button>\n                    <label className=\"login__remember\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"remember\"\n                            className=\"login__rememberCheckbox\"\n                        />\n                        Pamiętaj mnie\n                    </label>\n                </div>\n                <button className=\"login__loginButton\">\n                    Zaloguj się <img src={arrow} alt=\"\" />\n                </button>\n                <button className=\"login__registerButton\" onClick={() => switchFormState('register')}>Stwórz nowe konto</button>\n            </form>\n        </div >\n    );\n}\n\nexport default Login;","export const SignIn = () => {\n    return {\n        type: 'SIGN_IN'\n    }\n}\n\nexport const SignOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\nexport const SetSocket = (socket) => {\n    return {\n        type: 'SET_SOCKET',\n        socket\n    }\n}","import React, { useState } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nimport './style/start.scss'\n\nconst Start = () => {\n    const [formState, switchFormState] = useState('login');\n\n    return (\n        <div className=\"start\">\n            <div className=\"start__bannerText\">\n                Pozostań anonimowy i wyraź swoje opinie\n            </div>\n            <hr className=\"start__hr\" />\n            {formState === 'login' ? <Login switchFormState={switchFormState} /> : <Register switchFormState={switchFormState} />}\n        </div>\n    );\n}\n\nexport default Start;","import React from 'react';\nimport chatIco from 'svg/chatIco.svg'\nimport userIco from 'svg/userIco.svg'\n\nimport './styles/topBar.scss'\n\nconst TopBar = () => {\n    return (\n        <div className=\"topBar\">\n            <ul className=\"topBar__optionsList\">\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--menu\" onClick={() => localStorage.setItem(\"token\", \"\")}>\n                        <img src={userIco} alt=\"\" />\n                    </button>\n                </li>\n                <li className=\"topBar__options topBar__options--banner\">\n                    schoolchan\n                </li>\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--chat\">\n                        <img src={chatIco} alt=\"\" />\n                    </button>\n                </li>\n            </ul>\n\n        </div>\n    );\n}\n\nexport default TopBar;","import React from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\n\nimport './styles/comment.scss'\n\nconst Comment = ({ comment }) => {\n    return (\n        <li className=\"comment\">\n            <img src={racoonMale} alt=\"sex\" className=\"comment__sex\" />\n            <div className=\"comment__username\">{comment.username}</div>\n            &nbsp;\n            <div>\n                <div className=\"comment__text\">{comment.commentText}</div>\n            </div>\n            &nbsp;\n            {comment.image ? <a href={comment.image.large} rel=\"noopener noreferrer\" target=\"_blank\">Obraz</a> : null}\n        </li>\n    );\n}\n\nexport default Comment;","import React, { useState } from 'react';\nimport autosize from 'autosize'\nimport { useSelector } from 'react-redux';\nimport imageIcon from 'svg/image_icon.svg';\n\nimport './styles/commentForm.scss'\nconst CommentForm = ({ focus, post }) => {\n    const [image, setImage] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\");\n    const socket = useSelector(state => state.socket);\n\n    const sendComment = (e) => {\n        e.preventDefault();\n        const commentData = { image, commentText, postId: post._id };\n        socket.emit(\"sendComment\", commentData);\n        setCommentText(\"\");\n        setImage(\"\");\n    }\n\n    const uploadImage = (e) => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(res => res.json())\n                .then(res => {\n                    setImage({ large: res.data.image.url, mini: res.data.thumb.url });\n                })\n                .catch(error => console.log('error', error));\n        }\n\n        var file = e.target.files[0];\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result);\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n    autosize(document.querySelector('textarea'));\n    return (\n        <form className=\"commentForm\">\n            <label>\n                <img src={imageIcon} alt=\"sendImage\" />\n                <input\n                    className=\"commentForm__imageInput\"\n                    type=\"file\"\n                    onChange={(e) => uploadImage(e)}\n                />\n            </label>\n            <textarea\n                autoFocus={focus}\n                rows=\"1\"\n                wrap=\"hard\"\n                placeholder=\"Napisz komentarz...\"\n                className=\"commentForm__textInput\"\n                onChange={e => setCommentText(e.target.value)}\n                value={commentText}\n            >\n            </textarea>\n            <button className=\"commentForm__submit\" onClick={e => sendComment(e)}>⌲</button>\n        </form>\n    );\n}\n\nexport default CommentForm;","import React, { useEffect } from 'react';\nimport Comment from './Comment';\nimport { useSelector } from 'react-redux';\nimport CommentForm from './commentForm';\nimport backIco from 'svg/backIco.svg';\nimport useForceUpdate from 'use-force-update'\n// import uploadImage from 'api/uploadImage';\n\nimport './styles/comments.scss';\n\nconst Comments = ({ post, focus, postComments, forceUpdatePost }) => {\n    const socket = useSelector(state => state.socket);\n    const forceUpdate = useForceUpdate();\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"comment\", () => {\n                forceUpdate()\n            });\n        }\n    }, [socket, forceUpdate]);\n    window.onhashchange = () => {\n        forceUpdatePost();\n    }\n    return (\n        <div className=\"comments\">\n            <div className=\"comments__topBar\">\n                <button\n                    onClick={() => {\n                        window.history.back();\n                    }}\n                >\n                    <img src={backIco} alt=\"back\" className=\"comments__backButtonImg\" />\n                </button>\n                <div className=\"comments__title\">Komentarze</div>\n            </div>\n            <ul className=\"comments__list\">\n                {postComments.slice(0).reverse().map((comment, key) => <Comment key={key} comment={comment} />)}\n            </ul>\n            <CommentForm focus={focus} post={post} />\n        </div>\n    );\n}\n\nexport default Comments;","const whenPosted = (createdAt) => {\n    const date = new Date();\n    const minutes = -1 * (Date.parse(createdAt) - date.getTime()) / (1000 * 60);\n    if (minutes > 43829) {\n        const ISODate = new Date(createdAt);\n        let year = ISODate.getFullYear();\n        let month = ISODate.getMonth() + 1;\n        let dt = ISODate.getDate();\n\n        if (dt < 10) {\n            dt = '0' + dt;\n        }\n        if (month < 10) {\n            month = '0' + month;\n        }\n        return dt + '-' + month + '-' + year;\n    }\n    else if (minutes > 1440 * 2) {\n        return `${Math.ceil(minutes / 1440)} dni temu`;\n    }\n    else if (minutes > 1440) {\n        return `1 dzień temu`;\n    }\n    else if (minutes > 60 * 2) {\n        return `${Math.ceil(minutes / 60)} h temu`;\n    }\n    else if (minutes > 60) {\n        return `godzinę temu`;\n    }\n    else if (minutes > 2) {\n        return `${Math.ceil(minutes)} min temu`;\n    }\n    else if (minutes) {\n        return `minutę temu`;\n    }\n    else {\n        return 'przed chwilą';\n    }\n}\nexport default whenPosted;","import React, { useState, useEffect } from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\nimport reportIcon from 'svg/report.svg';\nimport Comments from './Comments'\nimport useForceUpdate from 'use-force-update'\nimport whenPosted from 'helper/whenPosted'\nimport { useSelector } from 'react-redux'\n\nimport './styles/post.scss';\n\nconst Post = ({ post }) => {\n    const socket = useSelector(state => state.socket)\n    const [commentsLength, setCommentsLength] = useState(0);\n\n    const forceUpdate = useForceUpdate();\n    let { comments, image, body, createdAt, username, _id } = post;\n\n    useEffect(() => {\n        try {\n            setCommentsLength(comments.length)\n        } catch (error) {\n            setCommentsLength(0)\n        }\n    }, [comments.length]);\n\n    useEffect(() => {\n        socket.on('comment', (comment) => {\n            if (_id === comment.postId) {\n                setCommentsLength(comments.length + 1)\n                comments.push(comment)\n                forceUpdate()\n            }\n        })\n    }, [comments, socket, _id, forceUpdate]);\n\n\n    return (\n        <li className=\"post\">\n            <img src={racoonMale} alt=\"sex\" className=\"post__sex\" />\n            <div className=\"post__content\">\n                <div className=\"post__username\">{username}</div>\n                <div className=\"post__postDate\">{whenPosted(createdAt)}</div>\n                <div className=\"post__body\">{body}</div>\n                {image ? <img className=\"post__image\" src={image.medium} alt=\"\" /> : null}\n                <div className=\"post__buttons\">\n                    <button className=\"post__like\">+1</button>\n                    <button className=\"post__dislike\">-1</button>\n                    <button\n                        className=\"post__commentsButton\"\n                        onClick={() => {\n                            window.location.hash = \"comments\";\n                            forceUpdate()\n                        }}\n                    >\n                        {commentsLength === 0 ? \"Napisz komentarz\" : `Komentarze ${commentsLength}`}\n                    </button>\n                </div>\n            </div>\n            <button className=\"post__reportButton\">\n                <img src={reportIcon} alt=\"report\" />\n            </button>\n            <div className=\"post__bottom\">\n                <hr className=\"post__hr\" />\n                <div>\n                    <div className=\"post__votes\">\n                        <span className=\"post__reactions\">\n                            13\n                        </span>\n                        <span>&nbsp;szopów jest za, a&nbsp;</span>\n                        <span className=\"post__reactions\">\n                            5\n                        </span>\n                        <span>&nbsp;przeciw</span>\n                    </div>\n                    <ul className=\"post__comments\">\n                        {comments.slice(0).reverse().slice(0, 3).map((comment, key) => (\n                            <li key={key}>\n                                <span className=\"post__username\">{comment.username}</span> {comment.commentText}\n                            </li>\n                        ))}\n                        {commentsLength > 3 ?\n                            <li>\n                                <button\n                                    className=\"post__showAllButton\"\n                                    onClick={() => {\n                                        window.location.hash = \"comments\";\n                                        forceUpdate()\n                                    }}\n                                >\n                                    Zobacz wszystkie\n                                </button>\n                            </li>\n                            : null}\n                    </ul>\n                </div>\n            </div>\n            {window.location.hash === \"#comments\" ?\n                <Comments\n                    forceUpdatePost={forceUpdate}\n                    post={post}\n                    postComments={comments}\n                    focus={commentsLength === 0 ? true : false} />\n                : null}\n        </li>\n    );\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport Post from './Post'\nimport { useSelector } from 'react-redux'\n\nimport './styles/posts.scss'\n\nconst Posts = () => {\n    const socket = useSelector(state => state.socket)\n    const [posts, setPosts] = useState([])\n\n    if (socket) {\n        socket.on('posts', data => {\n            setPosts(data)\n        })\n        socket.on('post', data => {\n            data.comments = []\n            setPosts([data, ...posts])\n        })\n    }\n    return (\n        <ul className=\"posts\">\n            {posts.map((post, id) => (\n                <Post\n                    key={post._id}\n                    post={post}\n                />\n            ))}\n        </ul>\n    );\n}\n\nexport default Posts;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport Draggable from 'react-draggable';\nimport autosize from 'autosize'\n\nimport closeIco from 'svg/closeIco.svg';\nimport formIco from 'svg/formIco.svg';\nimport uploadImageIco from 'svg/uploadImage.svg';\nimport uploadImageDoneIco from 'svg/uploadImageDone.svg';\n// import uploadImageLoadingIco from 'svg/uploadImageLoading.svg';\n\nimport './styles/createPostForm.scss'\n\nconst CreatePostForm = ({ setCreatePostFrom }) => {\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const socket = useSelector(state => state.socket)\n\n    const sendPost = (e, data) => {\n        e.preventDefault();\n        const postData = { body, image }\n        if (postData) {\n            socket.emit('sendPost', postData);\n            setCreatePostFrom(false)\n        }\n    }\n\n    const uploadImage = () => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(response => response.json())\n                .then(result => setImage({ large: result.data.image.url, mini: result.data.thumb.url, medium: result.data.medium.url }))\n                .catch(error => console.log('error', error));\n        }\n        var file = document.getElementById('file').files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n\n    }\n    autosize(document.querySelector('textarea'))\n\n    return (\n        <Draggable\n            axis=\"y\"\n            handle=\".createPostForm__handle\"\n        >\n            <div className=\"createPostForm\">\n                <div className=\"createPostForm__handle\">\n                    <div>\n                        <img className=\"createPostForm__formIco\" src={formIco} alt=\"createPost\" />\n                        <span className=\"createPostForm__handleTitle\">Utwórz post</span>\n                    </div>\n                    <button\n                        className=\"createPostForm__closeButton\"\n                        onClick={() => setCreatePostFrom(false)}\n                    >\n                        <img src={closeIco} alt=\"closeForm\" />\n                    </button>\n                </div>\n                <form action=\"\" className=\"createPostForm__form\">\n                    <label className=\"createPostForm__label\" htmlFor=\"body\">\n                        Treść:\n                </label>\n                    <textarea\n                        name=\"body\"\n                        className=\"createPostForm__postBody\"\n                        rows=\"8\"\n                        placeholder=\"Nie ma to jak koronawirus x_x\"\n                        onChange={e => setBody(e.target.value)}\n                        value={body}\n                    >\n\n                    </textarea>\n                    <label className=\"createPostForm__label\" htmlFor=\"image\">\n                        Obraz:\n                </label>\n                    <label className=\"createPostForm__labelButtonStyle\">\n                        <img src={image === \"\" ? uploadImageIco : uploadImageDoneIco} alt=\"upload\" className=\"createPostForm__uploadImg\" />\n                        <input\n                            className=\"createPostForm__imageButton\"\n                            name=\"image\"\n                            type=\"file\"\n                            accept=\"image/x-png,image/jpeg\"\n                            id=\"file\"\n                            onChange={() => uploadImage()}\n                        />\n                    </label>\n                    <button\n                        className=\"createPostForm__submit\"\n                        onClick={(e) => sendPost(e)}\n                    >\n                        Opublikuj\n                </button>\n                </form>\n            </div>\n        </Draggable>\n    );\n}\n\nexport default CreatePostForm;","import React, { useState } from 'react';\nimport Add from 'svg/addIco.svg'\nimport CreatePostForm from './CreatePostForm'\n\nimport './styles/createPost.scss'\n\nconst CreatePost = () => {\n    const [createPostFrom, setCreatePostFrom] = useState(false)\n    return (\n        <div className=\"createPost\">\n            {createPostFrom\n                ? <CreatePostForm setCreatePostFrom={setCreatePostFrom} />\n                : <button\n                    className=\"createPost__button\"\n                    onClick={() => setCreatePostFrom(true)}\n                >\n                    <img src={Add} alt=\"\" />\n                </button>\n            }\n\n        </div>\n    );\n}\n\nexport default CreatePost;","import React from 'react';\nimport Posts from './post/Posts'\nimport CreatePost from './createPost/CreatePost'\n\nimport './styles/chan.scss'\n\n\nconst Chan = () => {\n    return (\n        <div className=\"chan\">\n            <Posts />\n            <CreatePost />\n        </div>\n    );\n}\n\nexport default Chan;","import React from 'react';\nimport TopBar from './TopBar';\nimport Chan from './Chan'\n\nconst Main = () => {\n    window.onbeforeunload = () => {\n        return \"Napewno chcesz opuścić stronę?\";\n    }\n    return (\n        <div>\n            <TopBar />\n            <Chan />\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport * as ServiceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport SocketConnect from 'api/SocketConnect';\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SocketConnect />\n    </Provider>, document.getElementById('root'));\n\nServiceWorker.register();\n\nif ('serviceWorker' in navigator) {\n    console.log(\"Will the service worker register?\");\n    navigator.serviceWorker.register('./serviceWorker.js')\n        .then(function (reg) {\n            console.log(\"Yes, it did.\");\n        }).catch(function (err) {\n            console.log(\"No it didn't. This happened: \", err)\n        });\n}"],"sourceRoot":""}