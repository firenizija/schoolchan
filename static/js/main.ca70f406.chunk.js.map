{"version":3,"sources":["svg/arrow.svg","svg/backButton.svg","svg/racoon_male.svg","svg/image_icon.svg","svg/closeIco.svg","svg/online.svg","svg/chatIco.svg","svg/userIco.svg","svg/newChat.svg","svg/report.svg","svg/backIco.svg","svg/addIco.svg","svg/formIco.svg","svg/uploadImage.svg","svg/uploadImageDone.svg","svg/sendMessage.svg","svg/all.svg","serviceWorker.js","api/SocketConnect.js","redux/reducers/isLogged.js","redux/reducers/socket.js","redux/reducers/posts.js","redux/reducers/userInfo.js","redux/reducers/index.js","redux/actions/index.js","components/mobile/start/Register.js","components/mobile/start/Login.js","components/mobile/start/Start.js","components/mobile/chan/TopBar.js","components/mobile/chan/post/Comment.js","components/mobile/chan/post/commentForm.js","components/mobile/chan/post/Comments.js","helper/whenPosted.js","components/mobile/chan/post/Post.js","components/mobile/chan/post/Posts.js","components/mobile/chan/createPost/CreatePostForm.js","components/mobile/chan/createPost/CreatePost.js","components/mobile/chan/Chan.js","components/mobile/chan/aside/chat/TopBarChat.js","components/mobile/chan/aside/chat/messages/Message.js","components/mobile/chan/aside/chat/messages/Messages.js","components/mobile/chan/aside/chat/MessageForm.js","components/mobile/chan/aside/chat/Conversation.js","components/mobile/chan/aside/chat/Chat.js","components/mobile/chan/aside/menu/Menu.js","components/mobile/chan/Main.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","socket","tokenIsSet","localStorage","getItem","loggedReducer","action","type","posts","post","userInfo","user","AllReducers","combineReducers","isLogged","SetPosts","Register","switchFormState","useState","username","setUsername","school","setSchool","repassword","setRepassword","password","setPassword","setError","errorName","setErrorName","data","className","onSubmit","e","fetch","process","method","headers","body","JSON","stringify","response","json","name","preventDefault","placeholder","value","onChange","target","hidden","onClick","src","arrow","alt","Login","setusername","dispatch","useDispatch","errorController","status","res","message","setItem","token","Start","formState","TopBar","setMenu","forceUpdateMain","hash","history","back","backButton","userIco","newChat","chatIco","Comment","comment","racoonMale","commentText","image","href","large","rel","CommentForm","focus","setImage","setCommentText","useSelector","uploadImage","file","files","reader","FileReader","onloadend","base64","myHeaders","Headers","append","urlencoded","URLSearchParams","redirect","url","mini","thumb","sendImage","result","substr","indexOf","readAsDataURL","autosize","document","querySelector","imageIcon","autoFocus","rows","wrap","commentData","postId","_id","emit","sendComment","Comments","postComments","forceUpdatePost","forceUpdate","useForceUpdate","useEffect","on","onhashchange","backIco","slice","reverse","map","key","whenPosted","createdAt","date","Date","minutes","parse","getTime","ISODate","year","getFullYear","month","getMonth","dt","getDate","Math","ceil","Post","commentsLength","setCommentsLength","comments","length","push","medium","reportIcon","Posts","reduxPosts","setPosts","id","CreatePostForm","setCreatePostFrom","setBody","getElementById","axis","handle","formIco","closeIco","htmlFor","uploadImageIco","uploadImageDoneIco","accept","postData","sendPost","CreatePost","createPostFrom","Add","Chan","visible","display","style","TopBarChat","chatWith","setChatWith","online","Message","isMy","Messages","messages","setMessages","messagesDatabase","MessageForm","messageText","setMessageText","messageImage","messageObj","handleClickSend","sendMessage","Conversation","objDiv","scrollTop","scrollHeight","Chat","all","Menu","reload","Main","menu","onload","SocketConnect","ENDPOINT","io","err","removeItem","alert","isMobile","store","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","URL","origin","addEventListener","contentType","get","ready","unregister","checkValidServiceWorker","ServiceWorker","reg"],"mappings":"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","file":"static/js/main.ca70f406.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.1d027598.svg\";","module.exports = __webpack_public_path__ + \"static/media/backButton.49052b35.svg\";","module.exports = __webpack_public_path__ + \"static/media/racoon_male.9eabe416.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_icon.eae12adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeIco.6be77778.svg\";","module.exports = __webpack_public_path__ + \"static/media/online.86d4e583.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatIco.4195cd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIco.c95fa3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/newChat.d9414f81.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.b7a16ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/backIco.8bf6e5a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIco.a83663f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/formIco.db5ef68f.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImage.af8867ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImageDone.3e48864c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sendMessage.3ee2f767.svg\";","module.exports = __webpack_public_path__ + \"static/media/all.e487a034.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SignOut, SetSocket, SetUser } from 'redux/actions/index';\nimport Start from 'components/mobile/start/Start';\nimport Main from 'components/mobile/chan/Main';\nimport isMobile from 'is-mobile';\n\nlet socket;\n\nconst SocketConnect = () => {\n    const ENDPOINT = process.env.REACT_APP_API;\n    const dispatch = useDispatch();\n    const isLogged = useSelector(state => state.isLogged);\n    useEffect(() => {\n        socket = io(ENDPOINT, {\n            'query': 'token=' + localStorage.getItem(\"token\")\n        });\n        dispatch(SetSocket(socket));\n        socket.on(\"error\", function (err) {\n            if (err) {\n                localStorage.removeItem(\"token\");\n                dispatch(SignOut());\n            }\n        });\n        socket.on('connect', () => {\n\n        })\n        socket.on('userInfo', (res) => {\n            dispatch(SetUser(res));\n            socket.emit('joinChan', (error) => {\n                if (error) {\n                    alert(error);\n                }\n            });\n        });\n\n        socket.on('connect_error', () => {\n            console.log(\"Brak połączenia\")\n            localStorage.removeItem(\"token\");\n            dispatch(SignOut())\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ENDPOINT, dispatch, socket]);\n    return (\n        <>\n            {isLogged ?\n                isMobile() ? <Main /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"\n                :\n                isMobile() ? <Start /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"}\n        </>\n    )\n}\n\nexport default SocketConnect;","const tokenIsSet = localStorage.getItem(\"token\") !== null;\nconst loggedReducer = (state = tokenIsSet, action) => {\n    switch (action.type) {\n        case 'SIGN_IN':\n            return true;\n        case 'SIGN_OUT':\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loggedReducer;","const socket = (state = \"\", action) => {\n    switch (action.type) {\n        case 'SET_SOCKET':\n            return action.socket;\n        case 'RESET_SOCKET':\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default socket;","const posts = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_POSTS':\n            return {\n                posts: action.posts\n            }\n        case 'ADD_POST':\n            return {\n                ...state,\n                posts: [action.post, ...state.posts]\n            }\n        default:\n            return {\n                posts: []\n            };\n    }\n};\n\nexport default posts;","const userInfo = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.user\n        default:\n            return state\n    }\n};\n\nexport default userInfo;","import isLogged from './isLogged'\nimport socket from './socket'\nimport posts from './posts'\nimport userInfo from './userInfo'\n\nimport { combineReducers } from 'redux';\n\nconst AllReducers = combineReducers({\n    isLogged,\n    socket,\n    posts,\n    userInfo\n})\nexport default AllReducers;","export const SignIn = () => {\n    return {\n        type: 'SIGN_IN'\n    }\n}\n\nexport const SignOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\nexport const SetSocket = (socket) => {\n    return {\n        type: 'SET_SOCKET',\n        socket\n    }\n}\n\nexport const SetPosts = (posts) => {\n    return {\n        type: 'SET_POSTS',\n        posts\n    }\n}\n\nexport const AddPost = (post) => {\n    return {\n        type: 'ADD_POST',\n        post\n    }\n}\n\nexport const SetUser = (user) => {\n    return {\n        type: 'SET_USER',\n        user\n    }\n}","import React, { useState } from 'react';\n\nimport './style/register.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Register = ({ switchFormState }) => {\n    const [username, setUsername] = useState('');\n    const [school, setSchool] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [errorName, setErrorName] = useState('');\n\n    const errorController = (name) => {\n        if (name === \"MissingUsernameError\") {\n            setError(\"Podaj nazwę uzytkownika\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"MissingPasswordError\") {\n            setError(\"Wpisz hasło\");\n            setErrorName(\"password\");\n        }\n        else if (name === \"PasswordsDoNotMatch\") {\n            setError(\"Podane hasła nie są takie same\");\n            setErrorName(\"repassword\");\n        }\n        else if (name === \"UserExistsError\") {\n            setError(\"Ten pseudonim juz jest zajęty\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"NoSchoolSelected\") {\n            setError(\"Wybierz szkołę\");\n            setErrorName(\"school\");\n        }\n        else if (name === \"AccountCreated\") {\n            switchFormState(\"login\")\n        }\n        else if (name) {\n            setError(\"Nieznany błąd\");\n            setErrorName(\"repassword\");\n        }\n        else switchFormState(\"login\")\n    }\n\n    const data = { username, school, repassword, password };\n\n    const handleSubmit = e => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Response:', data);\n                errorController(data.name);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n        e.preventDefault();\n    }\n\n\n    return (\n        <div className=\"register\">\n            <div>\n                <h1 className=\"register__title\">\n                    Stwórz nowe konto\n            </h1>\n                <h2 className=\"register__text\">\n                    Trzymaj kontakt anonimowo ze społecznością swojej szkoły.\n            </h2>\n            </div>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Pseudonim\"\n                    className=\"register__input\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'username' ? error : null}</span>\n                <select\n                    name=\"school\"\n                    placeholder=\"Wybierz szkołe\"\n                    className=\"register__input\"\n                    value={school}\n                    onChange={e => setSchool(e.target.value)}\n                >\n                    <option value hidden>Wybierz szkołe</option>\n                    <option value=\"kilińskiego\">kilińskiego</option>\n                    <option value=\"test\">test</option>\n                </select>\n                <span className=\"register__error\">{errorName === 'school' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"register__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'password' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"repassword\"\n                    placeholder=\"Powtórz hasło\"\n                    className=\"register__input\"\n                    value={repassword}\n                    onChange={e => setRepassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'repassword' ? error : null}</span >\n                <div className=\"register__buttons\">\n                    <button\n                        type=\"button\"\n                        className=\"register__loginButton\"\n                        onClick={() => switchFormState('login')}\n                    >\n                        <p className=\"register__loginText\">\n                            Masz już konto?\n                    </p>\n                        <p className=\"register__loginTextBlue\">\n                            Zaloguj się\n                        </p>\n                    </button>\n                    <button className=\"register__registerButton\">\n                        Zarejestruj się <img src={arrow} alt=\"\" />\n                    </button>\n                </div>\n            </form >\n        </div >\n    );\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { SignIn } from 'redux/actions/index';\n\nimport './style/login.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Login = ({ switchFormState }) => {\n    const [username, setusername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const dispatch = useDispatch();\n\n    const errorController = (status) => {\n        if (status === 400) {\n            setError(\"Wpisz dane logowania\");\n        } else if (status === 401) {\n            setError(\"Wpisane login lub hasło są nieprawidłowe\");\n        } else if (status === 404 || status === 403) {\n            setError(\"Serwery aktualnie są niedostępne. Proszę spróbować ponownie później.\");\n        } else if (status === 200) {\n        }\n    }\n\n    const data = { username, password }\n    const handleSubmit = (e) => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => { errorController(res.status); return (res.json()) })\n            .then((data) => {\n                console.log('Success:', data);\n                if (data.message) {\n                    console.log(\"Złe dane\");\n                } else {\n                    localStorage.setItem(\"token\", data.token);\n                    dispatch(SignIn());\n                }\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                if (error == \"TypeError: Failed to fetch\") errorController(404)\n            });\n        e.preventDefault();\n    }\n    return (\n        <div className=\"login\">\n            <h1 className=\"login__title\">\n                Logowanie\n            </h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pseudonim\"\n                    className=\"login__input\"\n                    value={username}\n                    onChange={e => setusername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"login__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"login__error\">{error}</span>\n                <div className=\"login__underInputs\">\n                    <button className=\"login__forgotPassword\">\n                        Zapomniałeś hasła?\n                    </button>\n                    <label className=\"login__remember\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"remember\"\n                            className=\"login__rememberCheckbox\"\n                        />\n                        Pamiętaj mnie\n                    </label>\n                </div>\n                <button className=\"login__loginButton\">\n                    Zaloguj się <img src={arrow} alt=\"\" />\n                </button>\n                <button className=\"login__registerButton\" onClick={() => switchFormState('register')}>Stwórz nowe konto</button>\n            </form>\n        </div >\n    );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nimport './style/start.scss'\n\nconst Start = () => {\n    const [formState, switchFormState] = useState('login');\n\n    return (\n        <div className=\"start\">\n            <div className=\"start__bannerText\">\n                Pozostań anonimowy i wyraź swoje opinie\n            </div>\n            <hr className=\"start__hr\" />\n            {formState === 'login' ? <Login switchFormState={switchFormState} /> : <Register switchFormState={switchFormState} />}\n        </div>\n    );\n}\n\nexport default Start;","import React from 'react';\nimport chatIco from 'svg/chatIco.svg';\nimport userIco from 'svg/userIco.svg';\nimport backButton from 'svg/backButton.svg';\nimport newChat from 'svg/newChat.svg';\n\n\nimport './styles/topBar.scss'\n\nconst TopBar = ({ setMenu, forceUpdateMain }) => {\n    return (\n        <div className=\"topBar\">\n            <ul className=\"topBar__optionsList\">\n                {window.location.hash === \"#chat\" ?\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button\n                            className=\"topBar__button topBar__button--menu\"\n                            onClick={() => {\n                                window.history.back();\n                            }}\n                        >\n                            <img src={backButton} alt=\"\" />\n                        </button>\n                    </li>\n                    :\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button className=\"topBar__button topBar__button--menu\" onClick={() => setMenu(true)}>\n                            <img src={userIco} alt=\"\" />\n                        </button>\n                    </li>\n                }\n\n                <li className=\"topBar__options topBar__options--banner\">\n                    schoolchan\n                </li>\n                {window.location.hash === \"#chat\" ?\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button className=\"topBar__button topBar__button--chat\" onClick={() => null}>\n                            <img src={newChat} alt=\"\" />\n                        </button>\n                    </li>\n                    :\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button\n                            className=\"topBar__button topBar__button--chat\"\n                            onClick={() => {\n                                window.location.hash = \"chat\";\n                                forceUpdateMain()\n                            }}>\n                            <img src={chatIco} alt=\"\" />\n                        </button>\n                    </li>\n                }\n\n            </ul>\n\n        </div>\n    );\n}\n\nexport default TopBar;","import React from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\n\nimport './styles/comment.scss'\n\nconst Comment = ({ comment }) => {\n    return (\n        <li className=\"comment\">\n            <img src={racoonMale} alt=\"sex\" className=\"comment__sex\" />\n            <div className=\"comment__text\">\n                <span className=\"comment__username\">{comment.username}</span>\n                &nbsp;{comment.commentText}\n            </div>\n            &nbsp;\n            {comment.image ? <a href={comment.image.large} rel=\"noopener noreferrer\" target=\"_blank\">Obraz</a> : null}\n        </li>\n    );\n}\n\nexport default Comment;","import React, { useState } from 'react';\nimport autosize from 'autosize'\nimport { useSelector } from 'react-redux';\nimport imageIcon from 'svg/image_icon.svg';\n\nimport './styles/commentForm.scss';\n\nconst CommentForm = ({ focus, post }) => {\n    const [image, setImage] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\");\n    const socket = useSelector(state => state.socket);\n\n    const sendComment = (e) => {\n        e.preventDefault();\n        const commentData = { image, commentText, postId: post._id };\n        socket.emit(\"sendComment\", commentData);\n        setCommentText(\"\");\n        setImage(\"\");\n    }\n\n    const uploadImage = (e) => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(res => res.json())\n                .then(res => {\n                    setImage({ large: res.data.image.url, mini: res.data.thumb.url });\n                })\n                .catch(error => console.log('error', error));\n        }\n\n        var file = e.target.files[0];\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result);\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n    autosize(document.querySelector('textarea'));\n    return (\n        <form className=\"commentForm\">\n            <label>\n                <img src={imageIcon} alt=\"sendImage\" />\n                <input\n                    className=\"commentForm__imageInput\"\n                    type=\"file\"\n                    onChange={(e) => uploadImage(e)}\n                />\n            </label>\n            <textarea\n                autoFocus={focus}\n                rows=\"1\"\n                wrap=\"hard\"\n                placeholder=\"Napisz komentarz...\"\n                className=\"commentForm__textInput\"\n                onChange={e => setCommentText(e.target.value)}\n                value={commentText}\n            >\n            </textarea>\n            <button className=\"commentForm__submit\" onClick={e => sendComment(e)}>⌲</button>\n        </form>\n    );\n}\n\nexport default CommentForm;","import React, { useEffect } from 'react';\nimport Comment from './Comment';\nimport { useSelector } from 'react-redux';\nimport CommentForm from './commentForm';\nimport backIco from 'svg/backIco.svg';\nimport useForceUpdate from 'use-force-update'\n// import uploadImage from 'api/uploadImage';\n\nimport './styles/comments.scss';\n\nconst Comments = ({ post, focus, postComments, forceUpdatePost }) => {\n    const socket = useSelector(state => state.socket);\n    const forceUpdate = useForceUpdate();\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"comment\", () => {\n                forceUpdate()\n            });\n        }\n    }, [socket, forceUpdate]);\n    window.onhashchange = () => {\n        forceUpdatePost();\n    }\n    return (\n        <div className=\"comments\">\n            <div className=\"comments__topBar\">\n                <button\n                    onClick={() => {\n                        window.history.back();\n                    }}\n                >\n                    <img src={backIco} alt=\"back\" className=\"comments__backButtonImg\" />\n                </button>\n                <div className=\"comments__title\">Komentarze</div>\n            </div>\n            <ul className=\"comments__list\">\n                {postComments.slice(0).reverse().map((comment, key) => <Comment key={key} comment={comment} />)}\n            </ul>\n            <CommentForm focus={focus} post={post} />\n        </div>\n    );\n}\n\nexport default Comments;","const whenPosted = (createdAt) => {\n    const date = new Date();\n    const minutes = -1 * (Date.parse(createdAt) - date.getTime()) / (1000 * 60);\n    if (minutes > 43829) {\n        const ISODate = new Date(createdAt);\n        let year = ISODate.getFullYear();\n        let month = ISODate.getMonth() + 1;\n        let dt = ISODate.getDate();\n\n        if (dt < 10) {\n            dt = '0' + dt;\n        }\n        if (month < 10) {\n            month = '0' + month;\n        }\n        return dt + '-' + month + '-' + year;\n    }\n    else if (minutes > 1440 * 2) {\n        return `${Math.ceil(minutes / 1440)} dni temu`;\n    }\n    else if (minutes > 1440) {\n        return `1 dzień temu`;\n    }\n    else if (minutes > 60 * 2) {\n        return `${Math.ceil(minutes / 60)} h temu`;\n    }\n    else if (minutes > 60) {\n        return `godzinę temu`;\n    }\n    else if (minutes > 2) {\n        return `${Math.ceil(minutes)} min temu`;\n    }\n    else if (minutes) {\n        return `minutę temu`;\n    }\n    else {\n        return 'przed chwilą';\n    }\n}\nexport default whenPosted;","import React, { useState, useEffect } from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\nimport reportIcon from 'svg/report.svg';\nimport Comments from './Comments'\nimport useForceUpdate from 'use-force-update'\nimport whenPosted from 'helper/whenPosted'\nimport { useSelector } from 'react-redux'\n\nimport './styles/post.scss';\n\nconst Post = ({ post }) => {\n    const socket = useSelector(state => state.socket)\n    const [commentsLength, setCommentsLength] = useState(0);\n\n    const forceUpdate = useForceUpdate();\n    let { comments, image, body, createdAt, username, _id } = post;\n\n    useEffect(() => {\n        try {\n            setCommentsLength(comments.length)\n        } catch (error) {\n            setCommentsLength(0)\n        }\n    }, [comments.length]);\n\n    useEffect(() => {\n        socket.on('comment', (comment) => {\n            if (_id === comment.postId) {\n                setCommentsLength(comments.length + 1)\n                comments.push(comment)\n                forceUpdate()\n            }\n        })\n    }, [comments, socket, _id, forceUpdate]);\n\n\n    return (\n        <li className=\"post\">\n            <img src={racoonMale} alt=\"sex\" className=\"post__sex\" />\n            <div className=\"post__content\">\n                <div className=\"post__username\">{username}</div>\n                <div className=\"post__postDate\">{whenPosted(createdAt)}</div>\n                <div className=\"post__body\">{body}</div>\n                {image ? <img className=\"post__image\" src={image.medium} alt=\"\" /> : null}\n                <div className=\"post__buttons\">\n                    <button className=\"post__like\">+1</button>\n                    <button className=\"post__dislike\">-1</button>\n                    <button\n                        className=\"post__commentsButton\"\n                        onClick={() => {\n                            window.location.hash = \"comments\";\n                            forceUpdate()\n                        }}\n                    >\n                        {commentsLength === 0 ? \"Napisz komentarz\" : `Komentarze ${commentsLength}`}\n                    </button>\n                </div>\n            </div>\n            <button className=\"post__reportButton\">\n                <img src={reportIcon} alt=\"report\" />\n            </button>\n            <div className=\"post__bottom\">\n                <hr className=\"post__hr\" />\n                <div>\n                    <div className=\"post__votes\">\n                        <span className=\"post__reactions\">\n                            13\n                        </span>\n                        <span>&nbsp;szopów jest za, a&nbsp;</span>\n                        <span className=\"post__reactions\">\n                            5\n                        </span>\n                        <span>&nbsp;przeciw</span>\n                    </div>\n                    <ul className=\"post__comments\">\n                        {comments.slice(0).reverse().slice(0, 3).map((comment, key) => (\n                            <li key={key}>\n                                <span className=\"post__username\">{comment.username}</span> {comment.commentText}\n                            </li>\n                        ))}\n                        {commentsLength > 3 ?\n                            <li>\n                                <button\n                                    className=\"post__showAllButton\"\n                                    onClick={() => {\n                                        window.location.hash = \"comments\";\n                                        forceUpdate()\n                                    }}\n                                >\n                                    Zobacz wszystkie\n                                </button>\n                            </li>\n                            : null}\n                    </ul>\n                </div>\n            </div>\n            {window.location.hash === \"#comments\" ?\n                <Comments\n                    forceUpdatePost={forceUpdate}\n                    post={post}\n                    postComments={comments}\n                    focus={commentsLength === 0 ? true : false} />\n                : null}\n        </li>\n    );\n}\n\nexport default Post;","import React, { useState, useEffect } from 'react';\nimport Post from './Post'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useForceUpdate from 'use-force-update'\nimport { SetPosts } from 'redux/actions/index';\n\nimport './styles/posts.scss'\n\nconst Posts = () => {\n    const dispatch = useDispatch();\n    const socket = useSelector(state => state.socket);\n    const reduxPosts = useSelector(state => state.posts);\n    const [posts, setPosts] = useState(reduxPosts.posts);\n\n    const forceUpdate = useForceUpdate();\n    useEffect(() => {\n        if (socket) {\n            socket.on('posts', data => {\n                dispatch(SetPosts(data))\n                setPosts(data);\n            })\n            socket.on('post', data => {\n                data.comments = [];\n                setPosts([data, ...posts]);\n            })\n        } else {\n            forceUpdate();\n        }\n    }, [forceUpdate, socket, posts, dispatch]);\n    useEffect(() => {\n        dispatch(SetPosts(posts));\n    }, [posts, dispatch])\n\n    return (\n        <ul className=\"posts\">\n            {posts.map((post, id) => (\n                <Post\n                    key={post._id}\n                    post={post}\n                />\n            ))}\n        </ul>\n    );\n}\n\nexport default Posts;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport Draggable from 'react-draggable';\nimport autosize from 'autosize'\n\nimport closeIco from 'svg/closeIco.svg';\nimport formIco from 'svg/formIco.svg';\nimport uploadImageIco from 'svg/uploadImage.svg';\nimport uploadImageDoneIco from 'svg/uploadImageDone.svg';\n// import uploadImageLoadingIco from 'svg/uploadImageLoading.svg';\n\nimport './styles/createPostForm.scss'\n\nconst CreatePostForm = ({ setCreatePostFrom }) => {\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const socket = useSelector(state => state.socket)\n\n    const sendPost = (e, data) => {\n        e.preventDefault();\n        const postData = { body, image }\n        if (postData) {\n            socket.emit('sendPost', postData);\n            setCreatePostFrom(false)\n        }\n    }\n\n    const uploadImage = () => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(response => response.json())\n                .then(result => setImage({ large: result.data.image.url, mini: result.data.thumb.url, medium: result.data.medium.url }))\n                .catch(error => console.log('error', error));\n        }\n        var file = document.getElementById('file').files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n\n    }\n    autosize(document.querySelector('textarea'))\n\n    return (\n        <Draggable\n            axis=\"y\"\n            handle=\".createPostForm__handle\"\n        >\n            <div className=\"createPostForm\">\n                <div className=\"createPostForm__handle\">\n                    <div>\n                        <img className=\"createPostForm__formIco\" src={formIco} alt=\"createPost\" />\n                        <span className=\"createPostForm__handleTitle\">Utwórz post</span>\n                    </div>\n                    <button\n                        className=\"createPostForm__closeButton\"\n                        onClick={() => setCreatePostFrom(false)}\n                    >\n                        <img src={closeIco} alt=\"closeForm\" />\n                    </button>\n                </div>\n                <form action=\"\" className=\"createPostForm__form\">\n                    <label className=\"createPostForm__label\" htmlFor=\"body\">\n                        Treść:\n                </label>\n                    <textarea\n                        name=\"body\"\n                        className=\"createPostForm__postBody\"\n                        rows=\"8\"\n                        placeholder=\"Nie ma to jak koronawirus x_x\"\n                        onChange={e => setBody(e.target.value)}\n                        value={body}\n                    >\n\n                    </textarea>\n                    <label className=\"createPostForm__label\" htmlFor=\"image\">\n                        Obraz:\n                </label>\n                    <label className=\"createPostForm__labelButtonStyle\">\n                        <img src={image === \"\" ? uploadImageIco : uploadImageDoneIco} alt=\"upload\" className=\"createPostForm__uploadImg\" />\n                        <input\n                            className=\"createPostForm__imageButton\"\n                            name=\"image\"\n                            type=\"file\"\n                            accept=\"image/x-png,image/jpeg\"\n                            id=\"file\"\n                            onChange={() => uploadImage()}\n                        />\n                    </label>\n                    <button\n                        className=\"createPostForm__submit\"\n                        onClick={(e) => sendPost(e)}\n                    >\n                        Opublikuj\n                </button>\n                </form>\n            </div>\n        </Draggable>\n    );\n}\n\nexport default CreatePostForm;","import React, { useState } from 'react';\nimport Add from 'svg/addIco.svg'\nimport CreatePostForm from './CreatePostForm'\n\nimport './styles/createPost.scss'\n\nconst CreatePost = () => {\n    const [createPostFrom, setCreatePostFrom] = useState(false)\n    return (\n        <div className=\"createPost\">\n            {createPostFrom\n                ? <CreatePostForm setCreatePostFrom={setCreatePostFrom} />\n                : <button\n                    className=\"createPost__button\"\n                    onClick={() => setCreatePostFrom(true)}\n                >\n                    <img src={Add} alt=\"\" />\n                </button>\n            }\n\n        </div>\n    );\n}\n\nexport default CreatePost;","import React from 'react';\nimport Posts from './post/Posts'\nimport CreatePost from './createPost/CreatePost'\n\nimport './styles/chan.scss'\n\n\nconst Chan = ({ setMenu }) => {\n    const visible = { display: \"block\" };\n    if (window.location.hash !== \"\") {\n        visible.display = \"none\";\n    } else visible.display = \"block\";\n    return (\n        <div style={visible} className=\"chan\" onClick={() => setMenu(false)}>\n            <Posts />\n            <CreatePost />\n        </div>\n    );\n}\n\nexport default Chan;","import React from 'react';\n\nimport backButton from 'svg/backButton.svg';\nimport online from 'svg/online.svg';\nimport './styles/topBarChat.scss'\n\nconst TopBarChat = ({ chatWith, setChatWith }) => {\n    return (\n        <div className=\"topBarChat\">\n            <button className=\"topBarChat__backButton\" onClick={() => { setChatWith(''); window.history.back(); }}>\n                <img src={backButton} alt=\"back\" />\n            </button>\n            <div className=\"topBarChat__title\">\n                {chatWith}\n            </div>\n            <div className=\"topBarChat__online\">\n                <div className=\"topBarChat__onlineNumber\">1</div>\n                <img src={online} alt=\"online\" />\n            </div>\n        </div>\n    );\n}\n\nexport default TopBarChat;","import React from 'react';\n\nimport './styles/message.scss'\n\nconst Message = ({ message, isMy }) => {\n    return (\n        <div className={`message ${isMy ? 'message--end' : null}`}>\n            <div className={`message__speechBubble ${isMy ? 'message__speechBubble--end' : null}`}>\n                {message.body}\n            </div>\n            <div className=\"message__username\">\n                {message.username}\n            </div>\n        </div>\n    );\n}\n\nexport default Message;","import React, { useState, useEffect } from 'react';\nimport Message from './Message'\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { useSelector } from 'react-redux';\n\nimport './styles/messages.scss'\n\nconst Messages = ({ chatWith }) => {\n    const socket = useSelector(state => state.socket);\n    const username = useSelector(state => state.userInfo.username);\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socket.on('message', message => {\n            setMessages([...messages, message]);\n        });\n    }, [messages, socket]);\n\n\n    useEffect(() => {\n        socket.emit('joinChat', chatWith);\n        socket.on('messages', messagesDatabase => {\n            setMessages(messagesDatabase);\n        });\n    }, [socket, chatWith]);\n\n    return (\n        <ScrollToBottom className=\"messages\">\n            {messages.map((message) => <Message key={message._id} message={message} isMy={message.username === username} />)}\n        </ScrollToBottom>\n    );\n}\n\nexport default Messages;","import React, { useState } from 'react';\nimport autosize from 'autosize';\nimport sendMessage from 'svg/sendMessage.svg'\nimport imageIcon from 'svg/image_icon.svg';\nimport { useSelector } from 'react-redux';\n\nimport './styles/messageForm.scss';\n\nconst MessageForm = () => {\n    const socket = useSelector(state => state.socket);\n    const [messageText, setMessageText] = useState('');\n    const [messageImage, setMessageImage] = useState('');\n\n    autosize(document.querySelector('.messageForm__textarea'));\n\n    const handleClickSend = () => {\n        const messageObj = { messageText, messageImage }\n        socket.emit('sendMessage', messageObj);\n        setMessageText('');\n    }\n\n    return (\n        <div className=\"messageForm\">\n            <button className=\"messageForm__sendImageButton\">\n                <img src={imageIcon} alt=\"\" />\n            </button>\n            <textarea\n                className=\"messageForm__textarea\"\n                rows=\"1\"\n                wrap=\"hard\"\n                placeholder=\"Napisz wiadomość...\"\n                onChange={e => setMessageText(e.target.value)}\n                value={messageText}\n            ></textarea>\n            <button\n                className=\"messageForm__sendMessageButton\"\n                onClick={() => handleClickSend()}\n            >\n                <img src={sendMessage} alt=\"\" />\n            </button>\n        </div>\n    );\n}\n\nexport default MessageForm;","import React from 'react';\nimport TopBarChat from './TopBarChat';\nimport Messages from './messages/Messages';\nimport MessageForm from './MessageForm';\n\nimport './styles/conversation.scss'\n\nconst Conversation = ({ chatWith, setChatWith }) => {\n    const objDiv = document.querySelector('.conversation');\n    if (objDiv) objDiv.scrollTop = objDiv.scrollHeight;\n    return (\n        <div className=\"conversation\">\n            <TopBarChat chatWith={chatWith} setChatWith={setChatWith} />\n            <Messages chatWith={chatWith} />\n            <MessageForm chatWith={chatWith} />\n        </div>\n    );\n}\n\nexport default Conversation;","import React, { useState } from 'react';\nimport Conversation from './Conversation';\nimport all from 'svg/all.svg';\nimport online from 'svg/online.svg';\n\nimport './styles/chat.scss';\n\nconst Chat = ({ forceUpdateMain }) => {\n    const [chatWith, setChatWith] = useState('');\n    window.onhashchange = () => {\n        forceUpdateMain();\n    }\n\n    return (\n        <>\n            <div className=\"chat\">\n                <button\n                    className=\"chat__all\"\n                    onClick={() => {\n                        setChatWith('all');\n                        window.location.hash += \"/#all\"\n                    }}>\n                    <div className=\"chat__allHeader\">\n                        <img src={all} alt=\"wtf\" />\n                        <div className=\"chat__allTitle\">\n                            Wszyscy\n                    </div>\n                    </div>\n                    <div className=\"chat__allOnline\">\n                        <div className=\"chat__allOnlineNumber\">0</div>\n                        <img src={online} alt=\"\" />\n                    </div>\n                </button>\n                <ul>\n                    <li>Tu znajdą się Twoje rozmowy z innymi szopami</li>\n                </ul>\n            </div>\n            {chatWith ? <Conversation chatWith={chatWith} setChatWith={setChatWith} /> : null}\n        </>\n    );\n}\n\nexport default Chat;","import React from 'react';\nimport closeIco from 'svg/closeIco.svg'\n\nimport './styles/menu.scss';\nconst logout = () => {\n    localStorage.setItem(\"token\", null);\n    window.location.reload();\n}\n\nconst Menu = ({ setMenu }) => {\n    return (\n        <aside className=\"menu\">\n            <div className=\"menu__header\">\n                Witaj, <span className=\"menu__username\" >adam</span>\n                <button className=\"menu__close\" onClick={() => setMenu(false)}>\n                    <img src={closeIco} alt=\"close\" />\n                </button>\n            </div>\n            <ul className=\"menu__options\">\n                <li className=\"menu__option menu__option--chosen\">Tablica</li>\n                <li className=\"menu__option\">Moje posty</li>\n                <li className=\"menu__option\">Obserwowane</li>\n                <li className=\"menu__option\">Sklep</li>\n                <li className=\"menu__option\">Randka</li>\n                <li className=\"menu__option\">Ustawienia</li>\n                <li\n                    className=\"menu__option menu__option--logout\"\n                    onClick={() => logout()}\n                >\n                    Wyloguj\n                </li>\n            </ul>\n        </aside>\n    );\n}\n\nexport default Menu;","import React, { useState } from 'react';\nimport TopBar from './TopBar';\nimport Chan from './Chan';\nimport Chat from './aside/chat/Chat';\nimport Menu from './aside/menu/Menu';\nimport useForceUpdate from 'use-force-update';\n\nconst Main = () => {\n    const forceUpdate = useForceUpdate();\n    const [menu, setMenu] = useState(false);\n    window.onload = () => {\n        window.location.hash = \"\";\n    }\n    console.log()\n    return (\n        <div>\n            <TopBar setMenu={setMenu} forceUpdateMain={forceUpdate} />\n            {window.location.hash.indexOf(\"chat\") > 0 ? <Chat forceUpdateMain={forceUpdate} /> : null}\n            {menu ? <Menu setMenu={setMenu} /> : null}\n            <Chan setMenu={setMenu} />\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport * as ServiceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport SocketConnect from 'api/SocketConnect';\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SocketConnect />\n    </Provider>, document.getElementById('root'));\n\nServiceWorker.register();\n\nif ('serviceWorker' in navigator) {\n    console.log(\"Will the service worker register?\");\n    navigator.serviceWorker.register('./serviceWorker.js')\n        .then(function (reg) {\n            console.log(\"Yes, it did.\");\n        }).catch(function (err) {\n            console.log(\"No it didn't. This happened: \", err)\n        });\n}"],"sourceRoot":""}