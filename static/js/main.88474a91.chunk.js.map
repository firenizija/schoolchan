{"version":3,"sources":["svg/arrow.svg","api/SocketConnect.js","redux/reducers/isLogged.js","redux/reducers/socket.js","redux/reducers/index.js","components/mobile/start/Register.js","components/mobile/start/Login.js","redux/actions/index.js","components/mobile/start/Start.js","components/mobile/chan/TopBar.js","components/mobile/chan/post/Comment.js","components/mobile/chan/post/Comments.js","helper/whenPosted.js","components/mobile/chan/post/Post.js","components/mobile/chan/post/Posts.js","components/mobile/chan/createPost/CreatePostForm.js","components/mobile/chan/createPost/CreatePost.js","components/mobile/chan/Chan.js","components/mobile/chan/Main.js","index.js","svg/chatIco.svg","svg/userIco.svg","svg/racoon_male.svg","svg/report.svg","svg/image_icon.svg","svg/addIco.svg","svg/closeIco.svg","svg/formIco.svg"],"names":["module","exports","socket","tokenIsSet","localStorage","getItem","loggedReducer","state","action","type","AllReducers","combineReducers","isLogged","Register","switchFormState","useState","username","setUsername","school","setSchool","repassword","setRepassword","password","setPassword","error","setError","errorName","setErrorName","data","className","onSubmit","e","fetch","process","method","headers","body","JSON","stringify","then","response","json","name","console","log","catch","preventDefault","placeholder","value","onChange","target","hidden","onClick","src","arrow","alt","Login","setusername","dispatch","useDispatch","errorController","status","res","message","setItem","token","Start","formState","TopBar","userIco","chatIco","Comment","comment","commentText","image","href","large","rel","Comments","post","setCommentsView","setImage","setCommentText","comments","setComments","useSelector","useEffect","emit","_id","on","uploadImage","file","files","reader","FileReader","onloadend","base64","myHeaders","Headers","append","urlencoded","URLSearchParams","redirect","url","mini","thumb","medium","sendImage","result","substr","indexOf","readAsDataURL","map","key","imageIcon","rows","wrap","commentData","postId","sendComment","whenPosted","createdAt","date","Date","minutes","parse","getTime","ISODate","year","getFullYear","month","getMonth","dt","getDate","Math","ceil","Post","commentsView","commentsLength","setCommentsLength","length","racoonMale","reportIcon","Posts","posts","setPosts","id","CreatePostForm","setCreatePostFrom","setBody","document","getElementById","formIco","closeIco","cols","postData","sendPost","CreatePost","createPostFrom","Add","Chan","SocketConnect","Main","ENDPOINT","io","err","removeItem","alert","isMobile","store","createStore","allReducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"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","file":"static/js/main.88474a91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.1d027598.svg\";","import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SignOut, SetSocket } from 'redux/actions/index';\nimport Start from 'components/mobile/start/Start';\nimport Main from 'components/mobile/chan/Main';\nimport isMobile from 'is-mobile';\n\nconst ENDPOINT = process.env.REACT_APP_API;\nlet socket;\nconst SocketConnect = () => {\n    const dispatch = useDispatch();\n    const isLogged = useSelector(state => state.isLogged);\n    useEffect(() => {\n        socket = io(ENDPOINT, {\n            'query': 'token=' + localStorage.getItem(\"token\")\n        });\n\n        socket.on(\"error\", function (err) {\n            if (err) {\n                localStorage.removeItem(\"token\");\n                dispatch(SignOut())\n            }\n        });\n\n        socket.on('userInfo', (res) => {\n            // setUsername(res.username);\n            // setSchool(res.school);\n            dispatch(SetSocket(socket));\n            socket.emit('joinChan', (error) => {\n                if (error) {\n                    alert(error);\n                }\n            });\n        });\n\n        socket.on('connect_error', () => {\n            console.log(\"Brak połączenia\")\n            localStorage.removeItem(\"token\");\n            dispatch(SignOut())\n        });\n        // eslint-disable-next-line \n    }, [ENDPOINT, dispatch]);\n    return (\n        <>\n            {isLogged ?\n                isMobile() ? <Main /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"\n                :\n                isMobile() ? <Start /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"}\n        </>\n    )\n}\n\nexport default SocketConnect;","const tokenIsSet = localStorage.getItem(\"token\") !== \"\";\nconst loggedReducer = (state = tokenIsSet, action) => {\n    switch (action.type) {\n        case 'SIGN_IN':\n            return true;\n        case 'SIGN_OUT':\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loggedReducer;","const socket = (state = \"\", action) => {\n    switch (action.type) {\n        case 'SET_SOCKET':\n            return action.socket;\n        case 'RESET_SOCKET':\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default socket;","import isLogged from './isLogged'\nimport socket from './socket'\nimport { combineReducers } from 'redux';\n\nconst AllReducers = combineReducers({\n    isLogged,\n    socket\n})\nexport default AllReducers;","import React, { useState } from 'react';\n\nimport './style/register.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Register = ({ switchFormState }) => {\n    const [username, setUsername] = useState('');\n    const [school, setSchool] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [errorName, setErrorName] = useState('');\n\n    const errorController = (name) => {\n        if (name === \"MissingUsernameError\") {\n            setError(\"Podaj nazwę uzytkownika\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"MissingPasswordError\") {\n            setError(\"Wpisz hasło\");\n            setErrorName(\"password\");\n        }\n        else if (name === \"PasswordsDoNotMatch\") {\n            setError(\"Podane hasła nie są takie same\");\n            setErrorName(\"repassword\");\n        }\n        else if (name === \"UserExistsError\") {\n            setError(\"Ten pseudonim juz jest zajęty\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"NoSchoolSelected\") {\n            setError(\"Wybierz szkołę\");\n            setErrorName(\"school\");\n        }\n        else if (name === \"AccountCreated\") {\n            switchFormState(\"login\")\n        }\n        else if (name) {\n            setError(\"Nieznany błąd\");\n            setErrorName(\"repassword\");\n        }\n        else switchFormState(\"login\")\n    }\n\n    const data = { username, school, repassword, password };\n\n    const handleSubmit = e => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Response:', data);\n                errorController(data.name);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n        e.preventDefault();\n    }\n\n\n    return (\n        <div className=\"register\">\n            <div>\n                <h1 className=\"register__title\">\n                    Stwórz nowe konto\n            </h1>\n                <h2 className=\"register__text\">\n                    Trzymaj kontakt anonimowo ze społecznością swojej szkoły.\n            </h2>\n            </div>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Pseudonim\"\n                    className=\"register__input\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'username' ? error : null}</span>\n                <select\n                    name=\"school\"\n                    placeholder=\"Wybierz szkołe\"\n                    className=\"register__input\"\n                    value={school}\n                    onChange={e => setSchool(e.target.value)}\n                >\n                    <option value hidden>Wybierz szkołe</option>\n                    <option value=\"kilińskiego\">kilińskiego</option>\n                    <option value=\"test\">test</option>\n                </select>\n                <span className=\"register__error\">{errorName === 'school' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"register__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'password' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"repassword\"\n                    placeholder=\"Powtórz hasło\"\n                    className=\"register__input\"\n                    value={repassword}\n                    onChange={e => setRepassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'repassword' ? error : null}</span >\n                <div className=\"register__buttons\">\n                    <button\n                        type=\"button\"\n                        className=\"register__loginButton\"\n                        onClick={() => switchFormState('login')}\n                    >\n                        <p className=\"register__loginText\">\n                            Masz już konto?\n                    </p>\n                        <p className=\"register__loginTextBlue\">\n                            Zaloguj się\n                        </p>\n                    </button>\n                    <button className=\"register__registerButton\">\n                        Zarejestruj się <img src={arrow} alt=\"\" />\n                    </button>\n                </div>\n            </form >\n        </div >\n    );\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { SignIn } from 'redux/actions/index';\n\nimport './style/login.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Login = ({ switchFormState }) => {\n    const [username, setusername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const dispatch = useDispatch();\n\n    const errorController = (status) => {\n        if (status === 400) {\n            setError(\"Wpisz dane logowania\");\n        } else if (status === 401) {\n            setError(\"Wpisane login lub hasło są nieprawidłowe\");\n        } else if (status === 404 || status === 403) {\n            setError(\"Serwery aktualnie są niedostępne. Proszę spróbować ponownie później.\");\n        } else if (status === 200) {\n            // window.location.hash = \"/chan\"\n        }\n    }\n\n    const data = { username, password }\n    const handleSubmit = (e) => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => { errorController(res.status); return (res.json()) })\n            .then((data) => {\n                console.log('Success:', data);\n                if (data.message) {\n                    console.log(\"Złe dane\");\n                } else {\n                    localStorage.setItem(\"token\", data.token);\n                    dispatch(SignIn());\n                }\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                if (error == \"TypeError: Failed to fetch\") errorController(404)\n            });\n        e.preventDefault();\n    }\n    return (\n        <div className=\"login\">\n            <h1 className=\"login__title\">\n                Logowanie\n            </h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pseudonim\"\n                    className=\"login__input\"\n                    value={username}\n                    onChange={e => setusername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"login__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"login__error\">{error}</span>\n                <div className=\"login__underInputs\">\n                    <button className=\"login__forgotPassword\">\n                        Zapomniałeś hasła?\n                    </button>\n                    <label className=\"login__remember\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"remember\"\n                            className=\"login__rememberCheckbox\"\n                        />\n                        Pamiętaj mnie\n                    </label>\n                </div>\n                <button className=\"login__loginButton\">\n                    Zaloguj się <img src={arrow} alt=\"\" />\n                </button>\n                <button className=\"login__registerButton\" onClick={() => switchFormState('register')}>Stwórz nowe konto</button>\n            </form>\n        </div >\n    );\n}\n\nexport default Login;","export const SignIn = () => {\n    return {\n        type: 'SIGN_IN'\n    }\n}\n\nexport const SignOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\nexport const SetSocket = (socket) => {\n    return {\n        type: 'SET_SOCKET',\n        socket\n    }\n}","import React, { useState } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nimport './style/start.scss'\n\nconst Start = () => {\n    const [formState, switchFormState] = useState('login');\n\n    return (\n        <div className=\"start\">\n            <div className=\"start__bannerText\">\n                Pozostań anonimowy i wyraź swoje opinie\n            </div>\n            <hr className=\"start__hr\" />\n            {formState === 'login' ? <Login switchFormState={switchFormState} /> : <Register switchFormState={switchFormState} />}\n        </div>\n    );\n}\n\nexport default Start;","import React from 'react';\nimport chatIco from 'svg/chatIco.svg'\nimport userIco from 'svg/userIco.svg'\n\nimport './styles/topBar.scss'\n\nconst TopBar = () => {\n    return (\n        <div className=\"topBar\">\n            <ul className=\"topBar__optionsList\">\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--menu\">\n                        <img src={userIco} alt=\"\" />\n                    </button>\n                </li>\n                <li className=\"topBar__options topBar__options--banner\">\n                    schoolchan\n                </li>\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--chat\">\n                        <img src={chatIco} alt=\"\" />\n                    </button>\n                </li>\n            </ul>\n\n        </div>\n    );\n}\n\nexport default TopBar;","import React from 'react';\n\nimport './styles/comment.scss'\n\nconst Comment = ({ comment }) => {\n    return (\n        <li className=\"comment\">\n            <span className=\"comment__username\">{comment.username}</span>\n            &nbsp;{comment.commentText}&nbsp;\n            {comment.image ? <a href={comment.image.large} rel=\"noopener noreferrer\" target=\"_blank\">Obraz</a> : null}\n        </li>\n    );\n}\n\nexport default Comment;","import React, { useState, useEffect } from 'react';\nimport Comment from './Comment';\nimport imageIcon from 'svg/image_icon.svg';\nimport { useSelector } from 'react-redux';\n// import uploadImage from 'api/uploadImage';\n\nimport './styles/comments.scss';\n\nconst Comments = ({ post, setCommentsView }) => {\n    const [image, setImage] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\");\n    const [comments, setComments] = useState([]);\n\n    const socket = useSelector(state => state.socket);\n\n    useEffect(() => {\n        socket.emit('showComments', post._id);\n    }, [socket, post._id]);\n\n    useEffect(() => {\n        if (socket) {\n            socket.on('comments', data => {\n                setComments(data)\n            })\n            socket.on(\"comment\", (comment) => {\n                setComments([comment, ...comments])\n            });\n        }\n    }, [comments, socket]);\n\n    const sendComment = (e) => {\n        e.preventDefault();\n        const commentData = { image, commentText, postId: post._id };\n        socket.emit(\"sendComment\", commentData);\n    }\n\n    const uploadImage = (e) => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(res => res.json())\n                .then(res => {\n                    setImage({ large: res.data.image.url, mini: res.data.thumb.url, medium: res.data.medium.url })\n                })\n                .catch(error => console.log('error', error));\n        }\n\n        var file = e.target.files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n\n    return (\n        <div className=\"comments\">\n            <div className=\"comments__topBar\">\n                <button\n                    onClick={() => setCommentsView(false)}\n                >\n                    ◀️\n                </button>\n                <div className=\"comments__title\">Komentarze</div>\n            </div>\n            <ul className=\"comments__list\">\n                {comments.map((comment, key) => <Comment key={key} comment={comment} />)}\n            </ul>\n            <form className=\"comments__commentForm\">\n                <label>\n                    <img src={imageIcon} alt=\"sendImage\" />\n                    <input\n                        className=\"comments__imageInput\"\n                        type=\"file\"\n                        onChange={(e) => uploadImage(e)}\n                    />\n                </label>\n                <textarea\n                    rows=\"1\"\n                    wrap=\"hard\"\n                    placeholder=\"Napisz komentarz...\"\n                    className=\"comments__textInput\"\n                    onChange={e => setCommentText(e.target.value)}\n                    value={commentText}\n                >\n                </textarea>\n                <button onClick={e => sendComment(e)}>⌲</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Comments;","const whenPosted = (createdAt) => {\n    const date = new Date();\n    const minutes = -1 * (Date.parse(createdAt) - date.getTime()) / (1000 * 60);\n    if (minutes > 43829) {\n        const ISODate = new Date(createdAt);\n        let year = ISODate.getFullYear();\n        let month = ISODate.getMonth() + 1;\n        let dt = ISODate.getDate();\n\n        if (dt < 10) {\n            dt = '0' + dt;\n        }\n        if (month < 10) {\n            month = '0' + month;\n        }\n        return dt + '-' + month + '-' + year;\n    }\n    else if (minutes > 1440 * 2) {\n        return `${Math.ceil(minutes / 1440)} dni temu`;\n    }\n    else if (minutes > 1440) {\n        return `1 dzień temu`;\n    }\n    else if (minutes > 60 * 2) {\n        return `godzinę temu`;\n    }\n    else if (minutes > 60) {\n        return `${Math.ceil(minutes / 60)} h temu`;\n    }\n    else if (minutes > 2) {\n        return `${Math.ceil(minutes)} min temu`;\n    }\n    else if (minutes) {\n        return `minutę temu`;\n    }\n    else {\n        return 'przed chwilą';\n    }\n}\nexport default whenPosted;","import React, { useState, useEffect } from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\nimport reportIcon from 'svg/report.svg';\nimport Comments from './Comments'\nimport whenPosted from 'helper/whenPosted'\n\nimport './styles/post.scss';\n\nconst Post = ({ post }) => {\n    const [commentsView, setCommentsView] = useState(false);\n    const [commentsLength, setCommentsLength] = useState()\n\n    let { comments, image, body, createdAt, username } = post;\n    //if comments is undefined make it array\n    comments = comments ? comments : [];\n    useEffect(() => {\n        setCommentsLength(comments.length)\n    }, [comments.length])\n\n    return (\n        <li className=\"post\">\n            <img src={racoonMale} alt=\"sex\" className=\"post__sex\" />\n            <div className=\"post__content\">\n                <div className=\"post__username\">{username}</div>\n                <div className=\"post__postDate\">{whenPosted(createdAt)}</div>\n                <div className=\"post__body\">{body}</div>\n                {image ? <img className=\"post__image\" src={image.medium} alt=\"\" /> : null}\n                <div className=\"post__buttons\">\n                    <button className=\"post__like\">+1</button>\n                    <button className=\"post__dislike\">-1</button>\n                    <button\n                        className=\"post__commentsButton\"\n                        onClick={() => setCommentsView(true)}\n                    >\n                        {commentsLength === 0 ? \"Napisz komentarz\" : `Komentarze ${commentsLength}`}\n                    </button>\n                </div>\n            </div>\n            <button className=\"post__reportButton\">\n                <img src={reportIcon} alt=\"report\" />\n            </button>\n            <div className=\"post__bottom\">\n                <hr className=\"post__hr\" />\n                <div>\n                    <div className=\"post__votes\">\n                        <span className=\"post__reactions\">\n                            13\n                        </span>\n                        <span>&nbsp;szopów jest za, a&nbsp;</span>\n                        <span className=\"post__reactions\">\n                            5\n                        </span>\n                        <span>&nbsp;przeciw</span>\n                    </div>\n                    <ul className=\"post__comments\">\n                        {comments[0] ?\n                            <li>\n                                <span className=\"post__username\">{comments[0].username}</span> {comments[0].commentText}\n                            </li>\n                            : null}\n                        {comments[1] ?\n                            <li>\n                                <span className=\"post__username\">{comments[1].username}</span> {comments[1].commentText}\n                            </li>\n                            : null}\n                    </ul>\n                </div>\n            </div>\n            {commentsView ? <Comments post={post} setCommentsView={setCommentsView} /> : null}\n        </li>\n    );\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport Post from './Post'\nimport { useSelector } from 'react-redux'\n\nimport './styles/posts.scss'\n\nconst Posts = () => {\n    const socket = useSelector(state => state.socket)\n    const [posts, setPosts] = useState([])\n    if (socket) {\n        socket.on('posts', data => {\n            setPosts(data)\n        })\n        socket.on('post', data => {\n            setPosts([data, ...posts])\n        })\n    }\n    return (\n        <ul className=\"posts\">\n            {posts.map((post, id) => (\n                <Post\n                    key={id}\n                    post={post}\n                />\n            ))}\n        </ul>\n    );\n}\n\nexport default Posts;","import React, { useState } from 'react';\nimport closeIco from 'svg/closeIco.svg';\nimport formIco from 'svg/formIco.svg';\nimport { useSelector } from 'react-redux'\n\nimport './styles/createPostForm.scss'\n\nconst CreatePostForm = ({ setCreatePostFrom }) => {\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const socket = useSelector(state => state.socket)\n\n    const sendPost = (e, data) => {\n        e.preventDefault();\n        const postData = { body, image }\n        if (postData) {\n            socket.emit('sendPost', postData);\n        }\n    }\n\n    const uploadImage = () => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(response => response.json())\n                .then(result => setImage({ large: result.data.image.url, mini: result.data.thumb.url, medium: result.data.medium.url }))\n                .catch(error => console.log('error', error));\n        }\n        var file = document.getElementById('file').files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n\n    }\n\n    return (\n        <div className=\"createPostForm\">\n            <div className=\"createPostForm__handle\">\n                <div>\n                    <img src={formIco} alt=\"createPost\" />\n                    Utwórz post\n                    </div>\n                <button\n                    className=\"createPostForm__closeButton\"\n                    onClick={() => setCreatePostFrom(false)}\n                >\n                    <img src={closeIco} alt=\"closeForm\" />\n                </button>\n            </div>\n            <form action=\"\" className=\"createPostForm__form\">\n                Treść:\n                    <textarea\n                    name=\"\"\n                    id=\"\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    onChange={e => setBody(e.target.value)}\n                    value={body}\n                >\n\n                </textarea>\n                Obraz:\n                    <input\n                    type=\"file\"\n                    id=\"file\"\n                    onChange={() => uploadImage()}\n                />\n                <button\n                    onClick={(e) => sendPost(e)}\n                >\n                    Opublikuj\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatePostForm;","import React, { useState } from 'react';\nimport Add from 'svg/addIco.svg'\nimport CreatePostForm from './CreatePostForm'\n\nimport './styles/createPost.scss'\n\nconst CreatePost = () => {\n    const [createPostFrom, setCreatePostFrom] = useState(false)\n    return (\n        <div className=\"createPost\">\n            {createPostFrom\n                ? <CreatePostForm setCreatePostFrom={setCreatePostFrom} />\n                : <button\n                    className=\"createPost__button\"\n                    onClick={() => setCreatePostFrom(true)}\n                >\n                    <img src={Add} alt=\"\" />\n                </button>\n            }\n\n        </div>\n    );\n}\n\nexport default CreatePost;","import React from 'react';\nimport Posts from './post/Posts'\nimport CreatePost from './createPost/CreatePost'\nimport SocketConnect from 'api/SocketConnect'\n\nimport './styles/chan.scss'\n\n\nconst Chan = () => {\n    SocketConnect();\n\n    return (\n        <div className=\"chan\">\n            <Posts />\n            <CreatePost />\n        </div>\n    );\n}\n\nexport default Chan;","import React from 'react';\nimport TopBar from './TopBar';\nimport Chan from './Chan'\n\nconst Main = () => {\n    return (\n        <div>\n            <TopBar />\n            <Chan />\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux'\nimport allReducers from './redux/reducers'\nimport { Provider } from 'react-redux'\nimport SocketConnect from 'api/SocketConnect'\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SocketConnect />\n    </Provider>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/chatIco.4195cd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIco.c95fa3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/racoon_male.9eabe416.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.b7a16ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_icon.eae12adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIco.a83663f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeIco.6be77778.svg\";","module.exports = __webpack_public_path__ + \"static/media/formIco.db5ef68f.svg\";"],"sourceRoot":""}