{"version":3,"sources":["svg/racoon_male.svg","svg/arrow.svg","svg/backButton.svg","svg/image_icon.svg","svg/online.svg","svg/closeIco.svg","svg/chatIco.svg","svg/userIco.svg","svg/newChat.svg","svg/report.svg","svg/backIco.svg","svg/addIco.svg","svg/formIco.svg","svg/uploadImage.svg","svg/uploadImageDone.svg","svg/sendMessage.svg","svg/all.svg","serviceWorker.js","components/mobile/chan/post/Posts.js","components/mobile/chan/aside/chat/messages/Messages.js","redux/reducers/isLogged.js","redux/reducers/socket.js","redux/reducers/posts.js","redux/reducers/userInfo.js","redux/reducers/messages.js","redux/reducers/index.js","redux/actions/index.js","components/mobile/start/Register.js","helper/cookies.js","components/mobile/start/Login.js","components/mobile/start/Start.js","components/mobile/chan/TopBar.js","components/mobile/chan/post/Comment.js","components/mobile/chan/post/CommentForm.js","components/mobile/chan/post/Comments.js","helper/whenPosted.js","components/mobile/chan/post/Post.js","components/mobile/chan/createPost/CreatePostForm.js","components/mobile/chan/createPost/CreatePost.js","components/mobile/chan/Chan.js","components/mobile/chan/aside/chat/TopBarChat.js","components/mobile/chan/aside/chat/messages/Message.js","components/mobile/chan/aside/chat/MessageForm.js","components/mobile/chan/aside/chat/Conversation.js","components/mobile/chan/aside/chat/Chat.js","components/mobile/chan/aside/menu/Menu.js","components/mobile/chan/Main.js","api/SocketConnect.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","lastPostId","lastMessageId","tokenIsSet","localStorage","getItem","loggedReducer","action","type","ENDPOINT","process","token","socketConnect","io","socket","postsObj","posts","myPosts","post","userInfo","user","messages","message","moreMessages","AllReducers","combineReducers","isLogged","SetSocket","AddPost","Register","switchFormState","useState","username","setUsername","school","setSchool","repassword","setRepassword","password","setPassword","setError","errorName","setErrorName","data","className","onSubmit","e","fetch","method","headers","body","JSON","stringify","response","json","name","preventDefault","placeholder","value","onChange","target","hidden","onClick","src","arrow","alt","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","Login","setusername","rememberMe","setRememberMe","dispatch","useDispatch","tokenCookie","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","getCookie","errorController","status","setItem","res","checked","Start","formState","onload","hash","TopBar","setMenu","forceUpdateMain","history","back","backButton","userIco","newChat","chatIco","Comment","comment","racoonMale","commentText","image","href","large","rel","CommentForm","focus","setImage","setCommentText","useSelector","sendComment","commentData","postId","_id","emit","uploadImage","file","files","reader","FileReader","onloadend","base64","myHeaders","Headers","append","urlencoded","URLSearchParams","redirect","url","mini","thumb","sendImage","result","substr","readAsDataURL","autosize","querySelector","imageIcon","autoFocus","rows","wrap","onKeyPress","key","Comments","postComments","forceUpdatePost","forceUpdate","useForceUpdate","useEffect","on","onhashchange","backIco","slice","reverse","map","whenPosted","createdAt","date","minutes","parse","ISODate","year","getFullYear","month","getMonth","dt","getDate","Math","ceil","Post","commentsLength","setCommentsLength","comments","push","medium","reportIcon","waitForMorePosts","Posts","postType","SetPosts","SetMyPosts","useScrollPosition","prevPos","currPos","scrollProgress","offsetHeight","innerHeight","y","CreatePostForm","setCreatePostFrom","setBody","getElementById","axis","handle","formIco","closeIco","htmlFor","uploadImageIco","uploadImageDoneIco","accept","id","postData","sendPost","CreatePost","createPostFrom","Add","Chan","visible","display","style","TopBarChat","chatWith","setChatWith","online","Message","isMy","isWaitingForMessages","Messages","AddMessage","messagesDatabase","SetMessages","scrollToBottom","messagesBlock","button","loadedMessages","querySelectorAll","pajac","setInterval","scrollTop","click","speed","bottom","scrollIntoView","behavior","newMessage","messagesScroll","scrollHeight","MessageForm","messageText","setMessageText","messageImage","handleClickSend","messageObj","sendMessage","Conversation","Chat","all","Menu","setPostType","reload","Main","menu","SocketConnect","err","removeItem","alert","isMobile","store","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","URL","origin","addEventListener","contentType","get","ready","unregister","checkValidServiceWorker","ServiceWorker","reg"],"mappings":"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","file":"static/js/main.da45419b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/racoon_male.9eabe416.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.1d027598.svg\";","module.exports = __webpack_public_path__ + \"static/media/backButton.49052b35.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_icon.eae12adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/online.86d4e583.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeIco.6be77778.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatIco.4195cd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIco.c95fa3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/newChat.d9414f81.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.b7a16ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/backIco.8bf6e5a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIco.a83663f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/formIco.db5ef68f.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImage.af8867ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadImageDone.3e48864c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sendMessage.3ee2f767.svg\";","module.exports = __webpack_public_path__ + \"static/media/all.e487a034.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React, { useEffect } from 'react';\nimport Post from './Post'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { SetPosts, SetMyPosts, AddPost } from 'redux/actions/index';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\n\nimport './styles/posts.scss'\nlet lastPostId\nlet waitForMorePosts = false;\nconst Posts = ({ postType }) => {\n    const dispatch = useDispatch();\n    const socket = useSelector(state => state.socket);\n    const posts = useSelector(state => state.posts);\n\n    useEffect(() => {\n        if (socket) {\n            socket.on('posts', data => {\n                if (data.length > 0) {\n                    dispatch(SetPosts(data))\n                    lastPostId = data[data.length - 1]._id\n                }\n            })\n            socket.on('post', data => {\n                dispatch(AddPost(data))\n            })\n            socket.on('morePosts', data => {\n                if (data.length > 0) {\n                    data.map(post => dispatch(AddPost(post)));\n                    lastPostId = data[data.length - 1]._id\n                    waitForMorePosts = false;\n                }\n            })\n            socket.on('myPosts', myPosts => {\n                dispatch(SetMyPosts(myPosts))\n            });\n        }\n\n    }, [dispatch, socket]);\n\n    useScrollPosition(({ prevPos, currPos }) => {\n        const scrollProgress = (document.body.offsetHeight - window.innerHeight) + currPos.y;\n        if (!waitForMorePosts && scrollProgress < 0) {\n            socket.emit('getMorePosts', lastPostId);\n            waitForMorePosts = true;\n        }\n    }, [posts],\n        null,\n        false,\n        300)\n\n    return (\n        <ul className=\"posts\">\n            {posts[postType].map((post) => (\n                <Post\n                    key={post._id}\n                    post={post}\n                />\n            ))}\n        </ul>\n    );\n}\n\nexport default Posts;","import React, { useEffect, useState } from 'react';\nimport Message from './Message';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SetMessages, AddMessage, AddMoreMessages } from 'redux/actions/index';\n\nimport './styles/messages.scss'\nlet isWaitingForMessages = false;\nlet lastMessageId\nconst Messages = ({ chatWith }) => {\n    const dispatch = useDispatch();\n    const socket = useSelector(state => state.socket);\n    const username = useSelector(state => state.userInfo.username);\n    const messages = useSelector(state => state.messages);\n\n    useEffect(() => {\n        socket.on('message', message => {\n            dispatch(AddMessage(message))\n        });\n        socket.on('moreMessages', message => {\n            if (message.length > 0) {\n                lastMessageId = message[message.length - 1]._id\n                message.map(data => dispatch(AddMoreMessages(data)));\n                isWaitingForMessages = false;\n            }\n        });\n    }, [dispatch, socket]);\n\n    useEffect(() => {\n        socket.emit('joinChat', chatWith);\n        socket.on('messages', messagesDatabase => {\n            if (messagesDatabase.length > 0) {\n                lastMessageId = messagesDatabase[0]._id\n                dispatch(SetMessages(messagesDatabase))\n                scrollToBottom('fast');\n            }\n        });\n    }, [chatWith, dispatch, socket]);\n    const loadMoreMessages = () => {\n        isWaitingForMessages = true;\n        socket.emit('getMoreMessages', lastMessageId);\n    }\n    useEffect(() => {\n        const messagesBlock = document.querySelector('.messages__scroll')\n        const button = document.querySelector('.messages__loadMoreButton')\n        const loadedMessages = document.querySelectorAll('.message')\n        if (messagesBlock && loadedMessages.length > 5) {\n            let pajac\n            for (let i = 0; i < 5; i++) {\n                pajac = loadedMessages[i].offsetHeight\n            }\n            setInterval(() => {\n                const y = messagesBlock.scrollTop;\n                if (!isWaitingForMessages && messages.messages.length > 14 && y < 50) {\n                    messagesBlock.scrollTop = y + pajac;\n                    button.click();\n                }\n            }, 1000);\n        }\n    }, [messages]);\n    const scrollToBottom = (speed) => {\n        const bottom = document.querySelector(\"#bottom\");\n        if (speed === \"smooth\") {\n            bottom.scrollIntoView({ behavior: \"smooth\" });\n        } else if (speed === \"fast\") {\n            bottom.scrollIntoView();\n        }\n    }\n    useEffect(() => {\n        const newMessage = document.querySelectorAll('.message')\n        const messagesScroll = document.querySelector('.messages__scroll')\n        if (newMessage.length > 0) {\n            const scrollHeightMessages = messagesScroll.scrollHeight - messagesScroll.scrollTop - messagesScroll.offsetHeight - newMessage[newMessage.length - 1].offsetHeight - 24;\n            if (scrollHeightMessages < 100) scrollToBottom('smooth');\n        }\n\n    }, [messages])\n\n    return (\n        <div\n            className=\"messages\"\n        >\n            <div\n                className=\"messages__scroll\"\n            >\n                <button className=\"messages__loadMoreButton\" onClick={() => loadMoreMessages()}></button>\n                {messages.messages.map((message) => <Message key={message._id} message={message} isMy={message.username === username} />)}\n                <div id=\"bottom\"></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Messages;","const tokenIsSet = localStorage.getItem(\"token\") !== null;\nconst loggedReducer = (state = tokenIsSet, action) => {\n    switch (action.type) {\n        case 'SIGN_IN':\n            return true;\n        case 'SIGN_OUT':\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loggedReducer;","import io from 'socket.io-client';\nconst ENDPOINT = process.env.REACT_APP_API;\nconst token = localStorage.getItem(\"token\");\n\nlet socketConnect = io(ENDPOINT, {\n    'query': 'token=' + token\n});\nconst socket = (state = socketConnect, action) => {\n    switch (action.type) {\n        case 'SET_SOCKET':\n            return (io(ENDPOINT, {\n                'query': 'token=' + localStorage.getItem(\"token\")\n            }));\n        case 'RESET_SOCKET':\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default socket;","const postsObj = {\n    posts: [],\n    myPosts: [],\n}\nconst posts = (state = postsObj, action) => {\n    switch (action.type) {\n        case 'SET_POSTS':\n            return {\n                ...state,\n                posts: action.posts\n            }\n        case 'SET_MY_POSTS':\n            return {\n                ...state,\n                myPosts: action.myPosts\n            }\n        case 'ADD_POST':\n            return {\n                ...state,\n                posts: [...state.posts, action.post]\n            }\n        default:\n            return state\n    }\n};\n\nexport default posts;","const userInfo = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.user\n        default:\n            return state\n    }\n};\n\nexport default userInfo;","const messages = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_MESSAGES':\n            return {\n                messages: action.messages\n            }\n        case 'ADD_MESSAGES':\n            return {\n                ...state,\n                messages: [...state.messages, action.message]\n            }\n        case 'ADD_MORE_MESSAGES':\n            return {\n                ...state,\n                messages: [action.moreMessages, ...state.messages]\n            }\n        default:\n            return {\n                messages: []\n            };\n    }\n};\n\nexport default messages;","import isLogged from './isLogged'\nimport socket from './socket'\nimport posts from './posts'\nimport userInfo from './userInfo'\nimport messages from './messages'\n\nimport { combineReducers } from 'redux';\n\nconst AllReducers = combineReducers({\n    isLogged,\n    socket,\n    posts,\n    userInfo,\n    messages\n})\nexport default AllReducers;","export const SignIn = () => {\n    return {\n        type: 'SIGN_IN'\n    }\n}\n\nexport const SignOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\nexport const SetSocket = (socket) => {\n    return {\n        type: 'SET_SOCKET',\n        socket\n    }\n}\n\nexport const SetPosts = (posts) => {\n    return {\n        type: 'SET_POSTS',\n        posts\n    }\n}\n\nexport const SetMyPosts = (myPosts) => {\n    return {\n        type: 'SET_MY_POSTS',\n        myPosts\n    }\n}\n\nexport const AddPost = (post) => {\n    return {\n        type: 'ADD_POST',\n        post\n    }\n}\n\nexport const SetUser = (user) => {\n    return {\n        type: 'SET_USER',\n        user\n    }\n}\n\nexport const SetMessages = (messages) => {\n    return {\n        type: 'SET_MESSAGES',\n        messages\n    }\n}\n\nexport const AddMessage = (message) => {\n    return {\n        type: 'ADD_MESSAGES',\n        message\n    }\n}\n\nexport const AddMoreMessages = (moreMessages) => {\n    return {\n        type: 'ADD_MORE_MESSAGES',\n        moreMessages\n    }\n}","import React, { useState } from 'react';\n\nimport './style/register.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Register = ({ switchFormState }) => {\n    const [username, setUsername] = useState('');\n    const [school, setSchool] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [errorName, setErrorName] = useState('');\n\n    const errorController = (name) => {\n        if (name === \"MissingUsernameError\") {\n            setError(\"Podaj nazwę uzytkownika\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"MissingPasswordError\") {\n            setError(\"Wpisz hasło\");\n            setErrorName(\"password\");\n        }\n        else if (name === \"PasswordsDoNotMatch\") {\n            setError(\"Podane hasła nie są takie same\");\n            setErrorName(\"repassword\");\n        }\n        else if (name === \"UserExistsError\") {\n            setError(\"Ten pseudonim juz jest zajęty\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"NoSchoolSelected\") {\n            setError(\"Wybierz szkołę\");\n            setErrorName(\"school\");\n        }\n        else if (name === \"AccountCreated\") {\n            switchFormState(\"login\")\n        }\n        else if (name) {\n            setError(\"Nieznany błąd\");\n            setErrorName(\"repassword\");\n        }\n        else switchFormState(\"login\")\n    }\n\n    const data = { username, school, repassword, password };\n\n    const handleSubmit = e => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Response:', data);\n                errorController(data.name);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n        e.preventDefault();\n    }\n\n\n    return (\n        <div className=\"register\">\n            <div>\n                <h1 className=\"register__title\">\n                    Stwórz nowe konto\n            </h1>\n                <h2 className=\"register__text\">\n                    Trzymaj kontakt anonimowo ze społecznością swojej szkoły.\n            </h2>\n            </div>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Pseudonim\"\n                    className=\"register__input\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'username' ? error : null}</span>\n                <select\n                    name=\"school\"\n                    placeholder=\"Wybierz szkołe\"\n                    className=\"register__input\"\n                    value={school}\n                    onChange={e => setSchool(e.target.value)}\n                >\n                    <option value hidden>Wybierz szkołe</option>\n                    <option value=\"kilińskiego\">kilińskiego</option>\n                    <option value=\"test\">test</option>\n                </select>\n                <span className=\"register__error\">{errorName === 'school' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"register__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'password' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"repassword\"\n                    placeholder=\"Powtórz hasło\"\n                    className=\"register__input\"\n                    value={repassword}\n                    onChange={e => setRepassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'repassword' ? error : null}</span >\n                <div className=\"register__buttons\">\n                    <button\n                        type=\"button\"\n                        className=\"register__loginButton\"\n                        onClick={() => switchFormState('login')}\n                    >\n                        <p className=\"register__loginText\">\n                            Masz już konto?\n                    </p>\n                        <p className=\"register__loginTextBlue\">\n                            Zaloguj się\n                        </p>\n                    </button>\n                    <button className=\"register__registerButton\">\n                        Zarejestruj się <img src={arrow} alt=\"\" />\n                    </button>\n                </div>\n            </form >\n        </div >\n    );\n}\n\nexport default Register;","const setCookie = (cname, cvalue, exdays) => {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    var expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\nconst getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\nexport { setCookie, getCookie }","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { SignIn, SetSocket } from 'redux/actions/index';\nimport { getCookie, setCookie } from 'helper/cookies'\n\nimport './style/login.scss'\nimport arrow from 'svg/arrow.svg'\n\nconst Login = ({ switchFormState }) => {\n    const [username, setusername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const dispatch = useDispatch();\n    const tokenCookie = getCookie('token');\n    const errorController = (status) => {\n        if (status === 400) {\n            setError(\"Wpisz dane logowania\");\n        } else if (status === 401) {\n            setError(\"Wpisane login lub hasło są nieprawidłowe\");\n        } else if (status === 404 || status === 403) {\n            setError(\"Serwery aktualnie są niedostępne. Proszę spróbować ponownie później.\");\n        } else if (status === 200) {\n        }\n    }\n\n    const data = { username, password }\n    const handleSubmit = (e) => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => { errorController(res.status); return (res.json()) })\n            .then((data) => {\n                console.log('Success:', data);\n                if (data.message) {\n                    console.log(\"Złe dane\");\n                } else {\n                    localStorage.setItem(\"token\", data.token);\n                    if (rememberMe) {\n                        setCookie('token', data.token, 7);\n                    }\n                    dispatch(SetSocket())\n                    dispatch(SignIn());\n                }\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                if (error == \"TypeError: Failed to fetch\") errorController(404)\n            });\n        e.preventDefault();\n    }\n\n    if (tokenCookie.length > 0) {\n        localStorage.setItem(\"token\", data.token);\n        dispatch(SetSocket())\n        dispatch(SignIn());\n    }\n\n\n    return (\n        <div className=\"login\">\n            <h1 className=\"login__title\">\n                Logowanie\n            </h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pseudonim\"\n                    className=\"login__input\"\n                    value={username}\n                    onChange={e => setusername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"login__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"login__error\">{error}</span>\n                <div className=\"login__underInputs\">\n                    <button className=\"login__forgotPassword\">\n                        Zapomniałeś hasła?\n                    </button>\n                    <label className=\"login__remember\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"remember\"\n                            className=\"login__rememberCheckbox\"\n                            onChange={e => setRememberMe(e.target.checked)}\n                            checked={rememberMe}\n                        />\n                        Pamiętaj mnie\n                    </label>\n                </div>\n                <button\n                    className=\"login__loginButton\"\n                >\n                    Zaloguj się <img src={arrow} alt=\"\" />\n                </button>\n                <button className=\"login__registerButton\" onClick={() => switchFormState('register')}>Stwórz nowe konto</button>\n            </form>\n        </div >\n    );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nimport './style/start.scss'\n\nconst Start = () => {\n    const [formState, switchFormState] = useState('login');\n    window.onload = () => {\n        window.location.hash = \"\";\n    }\n    return (\n        <div className=\"start\">\n            <div className=\"start__bannerText\">\n                Pozostań anonimowy i wyraź swoje opinie\n            </div>\n            <hr className=\"start__hr\" />\n            {formState === 'login' ? <Login switchFormState={switchFormState} /> : <Register switchFormState={switchFormState} />}\n        </div>\n    );\n}\n\nexport default Start;","import React from 'react';\nimport chatIco from 'svg/chatIco.svg';\nimport userIco from 'svg/userIco.svg';\nimport backButton from 'svg/backButton.svg';\nimport newChat from 'svg/newChat.svg';\n\n\nimport './styles/topBar.scss'\n\nconst TopBar = ({ setMenu, forceUpdateMain }) => {\n    return (\n        <div className=\"topBar\">\n            <ul className=\"topBar__optionsList\">\n                {window.location.hash === \"#chat\" ?\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button\n                            className=\"topBar__button topBar__button--menu\"\n                            onClick={() => {\n                                window.history.back();\n                            }}\n                        >\n                            <img src={backButton} alt=\"\" />\n                        </button>\n                    </li>\n                    :\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button className=\"topBar__button topBar__button--menu\" onClick={() => setMenu(true)}>\n                            <img src={userIco} alt=\"\" />\n                        </button>\n                    </li>\n                }\n\n                <li className=\"topBar__options topBar__options--banner\">\n                    schoolchan\n                </li>\n                {window.location.hash === \"#chat\" ?\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button className=\"topBar__button topBar__button--chat\" onClick={() => null}>\n                            <img src={newChat} alt=\"\" />\n                        </button>\n                    </li>\n                    :\n                    <li className=\"topBar__options topBar__options--button\">\n                        <button\n                            className=\"topBar__button topBar__button--chat\"\n                            onClick={() => {\n                                window.location.hash = \"chat\";\n                                forceUpdateMain()\n                            }}>\n                            <img src={chatIco} alt=\"\" />\n                        </button>\n                    </li>\n                }\n\n            </ul>\n\n        </div>\n    );\n}\n\nexport default TopBar;","import React from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\n\nimport './styles/comment.scss'\n\nconst Comment = ({ comment }) => {\n    return (\n        <li className=\"comment\">\n            <img src={racoonMale} alt=\"sex\" className=\"comment__sex\" />\n            <div className=\"comment__text\">\n                <span className=\"comment__username\">{comment.username}</span>\n                &nbsp;{comment.commentText}\n            </div>\n            &nbsp;\n            {comment.image ? <a href={comment.image.large} rel=\"noopener noreferrer\" target=\"_blank\">Obraz</a> : null}\n        </li>\n    );\n}\n\nexport default Comment;","import React, { useState } from 'react';\nimport autosize from 'autosize'\nimport { useSelector } from 'react-redux';\nimport imageIcon from 'svg/image_icon.svg';\n\nimport './styles/commentForm.scss';\n\nconst CommentForm = ({ focus, post }) => {\n    const [image, setImage] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\");\n    const socket = useSelector(state => state.socket);\n\n    const sendComment = (e) => {\n        e.preventDefault();\n        const commentData = { image, commentText, postId: post._id };\n        socket.emit(\"sendComment\", commentData);\n        setCommentText(\"\");\n        setImage(\"\");\n    }\n\n    const uploadImage = (e) => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(res => res.json())\n                .then(res => {\n                    setImage({ large: res.data.image.url, mini: res.data.thumb.url });\n                })\n                .catch(error => console.log('error', error));\n        }\n\n        var file = e.target.files[0];\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result);\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n    autosize(document.querySelector('textarea'));\n    return (\n        <form className=\"commentForm\">\n            <label>\n                <img src={imageIcon} alt=\"sendImage\" />\n                <input\n                    className=\"commentForm__imageInput\"\n                    type=\"file\"\n                    onChange={(e) => uploadImage(e)}\n                />\n            </label>\n            <textarea\n                autoFocus={focus}\n                rows=\"1\"\n                wrap=\"hard\"\n                placeholder=\"Napisz komentarz...\"\n                className=\"commentForm__textInput\"\n                onChange={e => setCommentText(e.target.value)}\n                value={commentText}\n                onKeyPress={e => e.key === 'Enter' ? sendComment(e) : null}\n            >\n            </textarea>\n            <button className=\"commentForm__submit\" onClick={e => sendComment(e)}>⌲</button>\n        </form>\n    );\n}\n\nexport default CommentForm;","import React, { useEffect } from 'react';\nimport Comment from './Comment';\nimport { useSelector } from 'react-redux';\nimport CommentForm from './CommentForm';\nimport backIco from 'svg/backIco.svg';\nimport useForceUpdate from 'use-force-update'\n// import uploadImage from 'api/uploadImage';\n\nimport './styles/comments.scss';\n\nconst Comments = ({ post, focus, postComments, forceUpdatePost }) => {\n    const socket = useSelector(state => state.socket);\n    const forceUpdate = useForceUpdate();\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"comment\", () => {\n                forceUpdate();\n            });\n        }\n    }, [socket, forceUpdate]);\n    window.onhashchange = () => {\n        forceUpdatePost();\n    }\n    return (\n        <div className=\"comments\">\n            <div className=\"comments__topBar\">\n                <button\n                    onClick={() => {\n                        window.history.back();\n                    }}\n                >\n                    <img src={backIco} alt=\"back\" className=\"comments__backButtonImg\" />\n                </button>\n                <div className=\"comments__title\">Komentarze</div>\n            </div>\n            <ul className=\"comments__list\">\n                {postComments.slice(0).reverse().map((comment, key) => <Comment key={key} comment={comment} />)}\n            </ul>\n            <CommentForm focus={focus} post={post} />\n        </div>\n    );\n}\n\nexport default Comments;","const whenPosted = (createdAt) => {\n    const date = new Date();\n    const minutes = -1 * (Date.parse(createdAt) - date.getTime()) / (1000 * 60);\n    if (minutes > 43829) {\n        const ISODate = new Date(createdAt);\n        let year = ISODate.getFullYear();\n        let month = ISODate.getMonth() + 1;\n        let dt = ISODate.getDate();\n\n        if (dt < 10) {\n            dt = '0' + dt;\n        }\n        if (month < 10) {\n            month = '0' + month;\n        }\n        return dt + '-' + month + '-' + year;\n    }\n    else if (minutes > 1440 * 2) {\n        return `${Math.ceil(minutes / 1440)} dni temu`;\n    }\n    else if (minutes > 1440) {\n        return `1 dzień temu`;\n    }\n    else if (minutes > 60 * 2) {\n        return `${Math.ceil(minutes / 60)} h temu`;\n    }\n    else if (minutes > 60) {\n        return `godzinę temu`;\n    }\n    else if (minutes > 2) {\n        return `${Math.ceil(minutes)} min temu`;\n    }\n    else if (minutes) {\n        return `minutę temu`;\n    }\n    else {\n        return 'przed chwilą';\n    }\n}\nexport default whenPosted;","import React, { useState, useEffect } from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\nimport reportIcon from 'svg/report.svg';\nimport Comments from './Comments'\nimport useForceUpdate from 'use-force-update'\nimport whenPosted from 'helper/whenPosted'\nimport { useSelector } from 'react-redux'\n\nimport './styles/post.scss';\n\nconst Post = ({ post }) => {\n    const socket = useSelector(state => state.socket);\n    const [commentsLength, setCommentsLength] = useState(0);\n\n    const forceUpdate = useForceUpdate();\n    let { comments, image, body, createdAt, username, _id } = post;\n\n    useEffect(() => {\n        try {\n            setCommentsLength(comments.length);\n        } catch (error) {\n            setCommentsLength(0);\n        }\n    }, [comments.length]);\n\n    useEffect(() => {\n        socket.on('comment', (comment) => {\n            if (_id === comment.postId) {\n                setCommentsLength(comments.length + 1);\n                comments.push(comment);\n                forceUpdate();\n            }\n        })\n    }, [comments, socket, _id, forceUpdate]);\n\n\n    return (\n        <li className=\"post\">\n            <img src={racoonMale} alt=\"sex\" className=\"post__sex\" />\n            <div className=\"post__content\">\n                <div className=\"post__username\">{username}</div>\n                <div className=\"post__postDate\">{whenPosted(createdAt)}</div>\n                <div className=\"post__body\">{body}</div>\n                {image ? <img className=\"post__image\" src={image.medium} alt=\"\" /> : null}\n                <div className=\"post__buttons\">\n                    <button className=\"post__like\">+1</button>\n                    <button className=\"post__dislike\">-1</button>\n                    <button\n                        className=\"post__commentsButton\"\n                        onClick={() => {\n                            window.location.hash = \"comments\";\n                            forceUpdate()\n                        }}\n                    >\n                        {commentsLength === 0 ? \"Napisz komentarz\" : `Komentarze ${commentsLength}`}\n                    </button>\n                </div>\n            </div>\n            <button className=\"post__reportButton\">\n                <img src={reportIcon} alt=\"report\" />\n            </button>\n            <div className=\"post__bottom\">\n                <hr className=\"post__hr\" />\n                <div>\n                    <div className=\"post__votes\">\n                        <span className=\"post__reactions\">\n                            13\n                        </span>\n                        <span>&nbsp;szopów jest za, a&nbsp;</span>\n                        <span className=\"post__reactions\">\n                            5\n                        </span>\n                        <span>&nbsp;przeciw</span>\n                    </div>\n                    <ul className=\"post__comments\">\n                        {comments.slice(0).reverse().slice(0, 3).map((comment, key) => (\n                            <li key={key}>\n                                <span className=\"post__username\">{comment.username}</span> {comment.commentText}\n                            </li>\n                        ))}\n                        {commentsLength > 3 ?\n                            <li>\n                                <button\n                                    className=\"post__showAllButton\"\n                                    onClick={() => {\n                                        window.location.hash = \"comments\";\n                                        forceUpdate()\n                                    }}\n                                >\n                                    Zobacz wszystkie\n                                </button>\n                            </li>\n                            : null}\n                    </ul>\n                </div>\n            </div>\n            {window.location.hash === \"#comments\" ?\n                <Comments\n                    forceUpdatePost={forceUpdate}\n                    post={post}\n                    postComments={comments}\n                    focus={commentsLength === 0 ? true : false} />\n                : null}\n        </li>\n    );\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport Draggable from 'react-draggable';\nimport autosize from 'autosize'\n\nimport closeIco from 'svg/closeIco.svg';\nimport formIco from 'svg/formIco.svg';\nimport uploadImageIco from 'svg/uploadImage.svg';\nimport uploadImageDoneIco from 'svg/uploadImageDone.svg';\n// import uploadImageLoadingIco from 'svg/uploadImageLoading.svg';\n\nimport './styles/createPostForm.scss'\n\nconst CreatePostForm = ({ setCreatePostFrom }) => {\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const socket = useSelector(state => state.socket)\n\n    const sendPost = (e, data) => {\n        e.preventDefault();\n        const postData = { body, image }\n        if (postData) {\n            socket.emit('sendPost', postData);\n            setCreatePostFrom(false)\n        }\n    }\n\n    const uploadImage = () => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(response => response.json())\n                .then(result => setImage({ large: result.data.image.url, mini: result.data.thumb.url, medium: result.data.medium.url }))\n                .catch(error => console.log('error', error));\n        }\n        var file = document.getElementById('file').files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n\n    }\n    autosize(document.querySelector('textarea'))\n\n    return (\n        <Draggable\n            axis=\"y\"\n            handle=\".createPostForm__handle\"\n        >\n            <div className=\"createPostForm\">\n                <div className=\"createPostForm__handle\">\n                    <div>\n                        <img className=\"createPostForm__formIco\" src={formIco} alt=\"createPost\" />\n                        <span className=\"createPostForm__handleTitle\">Utwórz post</span>\n                    </div>\n                    <button\n                        className=\"createPostForm__closeButton\"\n                        onClick={() => setCreatePostFrom(false)}\n                    >\n                        <img src={closeIco} alt=\"closeForm\" />\n                    </button>\n                </div>\n                <form action=\"\" className=\"createPostForm__form\">\n                    <label className=\"createPostForm__label\" htmlFor=\"body\">\n                        Treść:\n                </label>\n                    <textarea\n                        name=\"body\"\n                        className=\"createPostForm__postBody\"\n                        rows=\"8\"\n                        placeholder=\"Nie ma to jak koronawirus x_x\"\n                        onChange={e => setBody(e.target.value)}\n                        value={body}\n                    >\n\n                    </textarea>\n                    <label className=\"createPostForm__label\" htmlFor=\"image\">\n                        Obraz:\n                </label>\n                    <label className=\"createPostForm__labelButtonStyle\">\n                        <img src={image === \"\" ? uploadImageIco : uploadImageDoneIco} alt=\"upload\" className=\"createPostForm__uploadImg\" />\n                        <input\n                            className=\"createPostForm__imageButton\"\n                            name=\"image\"\n                            type=\"file\"\n                            accept=\"image/x-png,image/jpeg\"\n                            id=\"file\"\n                            onChange={() => uploadImage()}\n                        />\n                    </label>\n                    <button\n                        className=\"createPostForm__submit\"\n                        onClick={(e) => sendPost(e)}\n                    >\n                        Opublikuj\n                </button>\n                </form>\n            </div>\n        </Draggable>\n    );\n}\n\nexport default CreatePostForm;","import React, { useState } from 'react';\nimport Add from 'svg/addIco.svg'\nimport CreatePostForm from './CreatePostForm'\n\nimport './styles/createPost.scss'\n\nconst CreatePost = () => {\n    const [createPostFrom, setCreatePostFrom] = useState(false)\n    return (\n        <div className=\"createPost\">\n            {createPostFrom\n                ? <CreatePostForm setCreatePostFrom={setCreatePostFrom} />\n                : <button\n                    className=\"createPost__button\"\n                    onClick={() => setCreatePostFrom(true)}\n                >\n                    <img src={Add} alt=\"\" />\n                </button>\n            }\n\n        </div>\n    );\n}\n\nexport default CreatePost;","import React from 'react';\nimport Posts from './post/Posts'\nimport CreatePost from './createPost/CreatePost'\n\nimport './styles/chan.scss'\n\n\nconst Chan = ({ postType }) => {\n    const visible = { display: \"block\" };\n    if (window.location.hash !== \"\") {\n        visible.display = \"none\";\n    } else visible.display = \"block\";\n    return (\n        <div style={visible} className=\"chan\">\n            <Posts postType={postType} />\n            <CreatePost />\n        </div>\n    );\n}\n\nexport default Chan;","import React from 'react';\n\nimport backButton from 'svg/backButton.svg';\nimport online from 'svg/online.svg';\nimport './styles/topBarChat.scss'\n\nconst TopBarChat = ({ chatWith, setChatWith }) => {\n    return (\n        <div className=\"topBarChat\">\n            <button className=\"topBarChat__backButton\" onClick={() => { setChatWith(''); window.history.back(); }}>\n                <img src={backButton} alt=\"back\" />\n            </button>\n            <div className=\"topBarChat__title\">\n                {chatWith}\n            </div>\n            <div className=\"topBarChat__online\">\n                <div className=\"topBarChat__onlineNumber\">1</div>\n                <img src={online} alt=\"online\" />\n            </div>\n        </div>\n    );\n}\n\nexport default TopBarChat;","import React from 'react';\n\nimport './styles/message.scss'\n\nconst Message = ({ message, isMy }) => {\n    // console.count(\"message\")\n    return (\n        <div className={`message ${isMy ? 'message--end' : null}`}>\n            <div className={`message__speechBubble ${isMy ? 'message__speechBubble--end' : null}`}>\n                {message.body}\n            </div>\n            <div className=\"message__username\">\n                {message.username}\n            </div>\n        </div>\n    );\n}\n\nexport default Message;","import React, { useState } from 'react';\nimport autosize from 'autosize';\nimport sendMessage from 'svg/sendMessage.svg'\nimport imageIcon from 'svg/image_icon.svg';\nimport { useSelector } from 'react-redux';\n\nimport './styles/messageForm.scss';\n\nconst MessageForm = () => {\n    const socket = useSelector(state => state.socket);\n    const [messageText, setMessageText] = useState('');\n    const [messageImage, setMessageImage] = useState('');\n\n    autosize(document.querySelector('.messageForm__textarea'));\n\n    const handleClickSend = (e) => {\n        e.preventDefault()\n        const messageObj = { messageText, messageImage }\n        socket.emit('sendMessage', messageObj);\n        setMessageText('');\n    }\n    return (\n        <div className=\"messageForm\">\n            <button className=\"messageForm__sendImageButton\">\n                <img src={imageIcon} alt=\"\" />\n            </button>\n            <textarea\n                className=\"messageForm__textarea\"\n                rows=\"1\"\n                wrap=\"hard\"\n                placeholder=\"Napisz wiadomość...\"\n                onChange={e => setMessageText(e.target.value)}\n                onKeyPress={e => e.key === 'Enter' ? handleClickSend(e) : null}\n                value={messageText}\n                autoFocus\n            ></textarea>\n            <button\n                className=\"messageForm__sendMessageButton\"\n                onClick={(e) => handleClickSend(e)}\n            >\n                <img src={sendMessage} alt=\"\" />\n            </button>\n        </div>\n    );\n}\n\nexport default MessageForm;","import React from 'react';\nimport TopBarChat from './TopBarChat';\nimport Messages from './messages/Messages';\nimport MessageForm from './MessageForm';\n\nimport './styles/conversation.scss'\n\nconst Conversation = ({ chatWith, setChatWith }) => {\n    return (\n        <div className=\"conversation\">\n            <TopBarChat chatWith={chatWith} setChatWith={setChatWith} />\n            <Messages chatWith={chatWith} />\n            <MessageForm chatWith={chatWith} />\n        </div>\n    );\n}\n\nexport default Conversation;","import React, { useState } from 'react';\nimport Conversation from './Conversation';\nimport all from 'svg/all.svg';\nimport online from 'svg/online.svg';\n\nimport './styles/chat.scss';\n\nconst Chat = ({ forceUpdateMain }) => {\n    const [chatWith, setChatWith] = useState('');\n    window.onhashchange = () => {\n        forceUpdateMain();\n    }\n\n    return (\n        <>\n            <div className=\"chat\">\n                <button\n                    className=\"chat__all\"\n                    onClick={() => {\n                        setChatWith('all');\n                        window.location.hash += \"/#all\"\n                    }}>\n                    <div className=\"chat__allHeader\">\n                        <img src={all} alt=\"wtf\" />\n                        <div className=\"chat__allTitle\">\n                            Wszyscy\n                    </div>\n                    </div>\n                    <div className=\"chat__allOnline\">\n                        <div className=\"chat__allOnlineNumber\">0</div>\n                        <img src={online} alt=\"\" />\n                    </div>\n                </button>\n                <ul>\n                    <li>Tu znajdą się Twoje rozmowy z innymi szopami</li>\n                </ul>\n            </div>\n            {chatWith ? <Conversation chatWith={chatWith} setChatWith={setChatWith} /> : null}\n        </>\n    );\n}\n\nexport default Chat;","import React from 'react';\nimport closeIco from 'svg/closeIco.svg';\nimport { useSelector } from 'react-redux';\nimport racoonMale from 'svg/racoon_male.svg'\nimport { setCookie } from 'helper/cookies'\n\nimport './styles/menu.scss';\nconst logout = () => {\n    localStorage.setItem(\"token\", null);\n    setCookie('token', \"\", 0);\n    window.location.reload();\n}\n\nconst Menu = ({ setMenu, setPostType, postType }) => {\n    const username = useSelector(state => state.userInfo.username);\n    return (\n        <aside className=\"menu\">\n            <div className=\"menu__content\">\n                <div className=\"menu__header\">\n                    <img src={racoonMale} alt=\"profile\" className=\"menu__profile\" />\n                    Witaj,&nbsp;<span className=\"menu__username\" >{username}</span>\n                    {/* <button className=\"menu__close\" onClick={() => setMenu(false)}>\n                        <img src={closeIco} alt=\"close\" />\n                    </button> */}\n                </div>\n                <ul className=\"menu__options\">\n                    <li\n                        className={`menu__option ${postType === 'posts' ? 'menu__option--chosen' : null}`}\n                        onClick={() => {\n                            setPostType('posts');\n                            setMenu(false);\n                        }}\n                    >\n                        Tablica\n                </li>\n                    <li\n                        className={`menu__option ${postType === 'myPosts' ? 'menu__option--chosen' : null}`}\n                        onClick={() => {\n                            setPostType('myPosts');\n                            setMenu(false);\n                        }}\n                    >\n                        Moje posty\n                </li>\n                    <li\n                        className={`menu__option ${postType === 'followingPosts' ? 'menu__option--chosen' : null}`}\n                        onClick={() => {\n                            setPostType('followingPosts');\n                            setMenu(false);\n                        }}\n                    >\n                        Obserwowane\n                </li>\n                    <li className=\"menu__option\">\n                        Sklep\n                </li>\n                    <li className=\"menu__option\">\n                        Randka\n                </li>\n                    <li className=\"menu__option\">\n                        Ustawienia\n                </li>\n                    <li\n                        className=\"menu__option menu__option--logout\"\n                        onClick={() => logout()}\n                    >\n                        Wyloguj\n                </li>\n                </ul>\n            </div>\n            <div className=\"menu__bg\" onClick={() => setMenu(false)} />\n        </aside>\n    );\n}\n\nexport default Menu;","import React, { useState } from 'react';\nimport TopBar from './TopBar';\nimport Chan from './Chan';\nimport Chat from './aside/chat/Chat';\nimport Menu from './aside/menu/Menu';\nimport useForceUpdate from 'use-force-update';\n\nconst Main = () => {\n    const forceUpdate = useForceUpdate();\n    const [menu, setMenu] = useState(false);\n    const [postType, setPostType] = useState(\"posts\");\n    window.onload = () => {\n        window.location.hash = \"\";\n    }\n    return (\n        <div>\n            <TopBar setMenu={setMenu} forceUpdateMain={forceUpdate} />\n            {window.location.hash.indexOf(\"chat\") > 0 ? <Chat forceUpdateMain={forceUpdate} /> : null}\n            {menu ? <Menu setMenu={setMenu} setPostType={setPostType} postType={postType} /> : null}\n            <Chan postType={postType} />\n        </div>\n    );\n}\n\nexport default Main;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SignOut, SetUser } from 'redux/actions/index';\nimport Start from 'components/mobile/start/Start';\nimport Main from 'components/mobile/chan/Main';\nimport isMobile from 'is-mobile';\n\nconst SocketConnect = () => {\n    const ENDPOINT = process.env.REACT_APP_API;\n    const dispatch = useDispatch();\n    const isLogged = useSelector(state => state.isLogged);\n    const socket = useSelector(state => state.socket);\n    const userInfo = useSelector(state => state.userInfo)\n\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"error\", function (err) {\n                if (err) {\n                    localStorage.removeItem(\"token\");\n                    dispatch(SignOut());\n                }\n            });\n            socket.on('connect', () => {\n            })\n            socket.on('userInfo', (res) => {\n                dispatch(SetUser(res));\n                socket.emit('joinChan', (error) => {\n                    if (error) {\n                        alert(error);\n                    }\n                });\n            });\n\n            socket.on('connect_error', () => {\n                console.log(\"Brak połączenia\")\n                localStorage.removeItem(\"token\");\n                dispatch(SignOut())\n            });\n        }\n    }, [ENDPOINT, dispatch, socket]);\n    return (\n        <>\n            {\n                isLogged ?\n                    isMobile() ? <Main /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"\n                    :\n                    isMobile() ? <Start /> : \"Tymczasowo wersja strony dostępna tylko na urządzenia mobilne\"\n            }\n        </>\n    )\n}\n\nexport default SocketConnect;","import React from 'react';\nimport * as ServiceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport SocketConnect from 'api/SocketConnect';\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SocketConnect />\n    </Provider>, document.getElementById('root'));\n\nServiceWorker.register();\n\nif ('serviceWorker' in navigator) {\n    console.log(\"Will the service worker register?\");\n    navigator.serviceWorker.register('./serviceWorker.js')\n        .then(function (reg) {\n            console.log(\"Yes, it did.\");\n        }).catch(function (err) {\n            console.log(\"No it didn't. This happened: \", err)\n        });\n}"],"sourceRoot":""}