{"version":3,"sources":["components/mobile/chan/Chan.js","components/mobile/start/Register.js","components/mobile/start/Login.js","components/mobile/start/Start.js","components/mobile/chan/TopBar.js","components/mobile/chan/post/Comment.js","components/mobile/chan/post/Comments.js","helper/whenPosted.js","components/mobile/chan/post/Post.js","components/mobile/chan/post/Posts.js","components/mobile/chan/createPost/CreatePostForm.js","components/mobile/chan/createPost/CreatePost.js","redux/actions/index.js","components/mobile/chan/Main.js","components/MobileApp.js","components/App.js","redux/reducers/isLogged.js","redux/reducers/socket.js","redux/reducers/index.js","index.js","components/mobile/start/svg/arrow.svg","components/mobile/chan/svg/chatIco.svg","components/mobile/chan/svg/userIco.svg","svg/racoon_male.svg","svg/report.svg","svg/image_icon.svg","components/mobile/chan/createPost/svg/addIco.svg","components/mobile/chan/createPost/svg/closeIco.svg","components/mobile/chan/createPost/svg/formIco.svg"],"names":["socket","Register","switchFormState","useState","username","setUsername","school","setSchool","repassword","setRepassword","password","setPassword","error","setError","errorName","setErrorName","data","className","onSubmit","e","fetch","process","method","headers","body","JSON","stringify","then","response","json","name","console","log","catch","preventDefault","type","placeholder","value","onChange","target","hidden","onClick","src","arrow","alt","Login","setusername","errorController","status","window","location","pathname","res","message","localStorage","setItem","token","Start","formState","TopBar","userIco","chatIco","Comment","comment","commentText","image","href","large","Comments","post","setCommentsView","setImage","setCommentText","comments","setComments","useSelector","state","useEffect","emit","_id","on","uploadImage","file","files","reader","FileReader","onloadend","base64","myHeaders","Headers","append","urlencoded","URLSearchParams","redirect","url","mini","thumb","medium","sendImage","result","substr","indexOf","readAsDataURL","map","key","imageIcon","rows","wrap","commentData","postId","sendComment","whenPosted","createdAt","date","Date","minutes","parse","getTime","ISODate","year","getFullYear","month","getMonth","dt","getDate","Math","ceil","Post","commentsView","commentsLength","setCommentsLength","length","racoonMale","reportIcon","Posts","posts","setPosts","id","CreatePostForm","setCreatePostFrom","setBody","document","getElementById","formIco","closeIco","action","cols","postData","sendPost","CreatePost","createPostFrom","Add","ENDPOINT","jwt","getItem","Chan","dispatch","useDispatch","io","room","alert","Main","App","basename","path","exact","component","loggedReducer","AllReducers","combineReducers","isLogged","store","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","isMobile","ReactDOM","render","MobileApp","module","exports"],"mappings":"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","file":"static/js/main.fc9545e1.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport Posts from './post/Posts'\nimport CreatePost from './createPost/CreatePost'\nimport io from 'socket.io-client'\nimport { useDispatch } from 'react-redux'\nimport { SignOut, SetSocket } from 'redux/actions/index';\nimport './styles/chan.scss'\n\nconst ENDPOINT = process.env.REACT_APP_API;\nconst name = 'anonim';\nconst room = 'room'\nconst jwt = localStorage.getItem(\"token\")\nlet socket;\n\nconst Chan = () => {\n    // const [username, setUsername] = useState(\"\");\n    // const [school, setSchool] = useState(\"\");\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        socket = io(ENDPOINT, {\n            'query': 'token=' + jwt\n        });\n\n        socket.on(\"error\", function (error) {\n            window.location.pathname = \"\"\n        });\n\n        socket.on('userInfo', (res) => {\n            // setUsername(res.username);\n            // setSchool(res.school);\n            dispatch(SetSocket(socket));\n            socket.emit('joinChan', { name, room }, (error) => {\n                if (error) {\n                    alert(error);\n                }\n            });\n        });\n\n        socket.on('connect_error', () => {\n            console.log(\"Brak połączenia\")\n            dispatch(SignOut())\n            window.location.pathname = \"\"\n        });\n\n    }, [ENDPOINT]);\n\n    return (\n        <div className=\"chan\">\n            <Posts />\n            <CreatePost />\n        </div>\n    );\n}\n\nexport default Chan;","import React, { useState } from 'react';\n\nimport './style/register.scss'\nimport arrow from './svg/arrow.svg'\n\nconst Register = ({ switchFormState }) => {\n    const [username, setUsername] = useState('');\n    const [school, setSchool] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [errorName, setErrorName] = useState('');\n\n    const errorController = (name) => {\n        if (name === \"MissingUsernameError\") {\n            setError(\"Podaj nazwę uzytkownika\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"MissingPasswordError\") {\n            setError(\"Wpisz hasło\");\n            setErrorName(\"password\");\n        }\n        else if (name === \"PasswordsDoNotMatch\") {\n            setError(\"Podane hasła nie są takie same\");\n            setErrorName(\"repassword\");\n        }\n        else if (name === \"UserExistsError\") {\n            setError(\"Ten pseudonim juz jest zajęty\");\n            setErrorName(\"username\");\n        }\n        else if (name === \"NoSchoolSelected\") {\n            setError(\"Wybierz szkołę\");\n            setErrorName(\"school\");\n        }\n        else if (name === \"AccountCreated\") {\n            switchFormState(\"login\")\n        }\n        else if (name) {\n            setError(\"Nieznany błąd\");\n            setErrorName(\"repassword\");\n        }\n        else switchFormState(\"login\")\n    }\n\n    const data = { username, school, repassword, password };\n\n    const handleSubmit = e => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Response:', data);\n                errorController(data.name);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n        e.preventDefault();\n    }\n\n\n    return (\n        <div className=\"register\">\n            <div>\n                <h1 className=\"register__title\">\n                    Stwórz nowe konto\n            </h1>\n                <h2 className=\"register__text\">\n                    Trzymaj kontakt anonimowo ze społecznością swojej szkoły.\n            </h2>\n            </div>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Pseudonim\"\n                    className=\"register__input\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'username' ? error : null}</span>\n                <select\n                    name=\"school\"\n                    placeholder=\"Wybierz szkołe\"\n                    className=\"register__input\"\n                    value={school}\n                    onChange={e => setSchool(e.target.value)}\n                >\n                    <option value hidden>Wybierz szkołe</option>\n                    <option value=\"kilińskiego\">kilińskiego</option>\n                    <option value=\"test\">test</option>\n                </select>\n                <span className=\"register__error\">{errorName === 'school' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"register__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'password' ? error : null}</span>\n                <input\n                    type=\"password\"\n                    name=\"repassword\"\n                    placeholder=\"Powtórz hasło\"\n                    className=\"register__input\"\n                    value={repassword}\n                    onChange={e => setRepassword(e.target.value)}\n                />\n                <span className=\"register__error\">{errorName === 'repassword' ? error : null}</span >\n                <div className=\"register__buttons\">\n                    <button\n                        type=\"button\"\n                        className=\"register__loginButton\"\n                        onClick={() => switchFormState('login')}\n                    >\n                        <p className=\"register__loginText\">\n                            Masz już konto?\n                    </p>\n                        <p className=\"register__loginTextBlue\">\n                            Zaloguj się\n                        </p>\n                    </button>\n                    <button className=\"register__registerButton\">\n                        Zarejestruj się <img src={arrow} alt=\"\" />\n                    </button>\n                </div>\n            </form >\n        </div >\n    );\n}\n\nexport default Register;","import React, { useState } from 'react';\n\nimport './style/login.scss'\nimport arrow from './svg/arrow.svg'\n\nconst Login = ({ switchFormState }) => {\n    const [username, setusername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const errorController = (status) => {\n        if (status === 400) {\n            setError(\"Wpisz dane logowania\");\n        } else if (status === 401) {\n            setError(\"Wpisane login lub hasło są nieprawidłowe\");\n        } else if (status === 404 || status === 403) {\n            setError(\"Serwery aktualnie są niedostępne. Proszę spróbować ponownie później.\");\n        } else if (status === 200) {\n            window.location.pathname = \"/chan\"\n        }\n    }\n\n    const data = { username, password }\n    const handleSubmit = (e) => {\n        fetch(`${process.env.REACT_APP_API}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => { errorController(res.status); return (res.json()) })\n            .then((data) => {\n                console.log('Success:', data);\n                if (data.message) {\n                    console.log(\"Złe dane\");\n                } else {\n                    localStorage.setItem(\"token\", data.token)\n                }\n            })\n            .catch((error) => {\n                if (error == \"TypeError: Failed to fetch\") errorController(404)\n            });\n        e.preventDefault();\n    }\n    return (\n        <div className=\"login\">\n            <h1 className=\"login__title\">\n                Logowanie\n            </h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pseudonim\"\n                    className=\"login__input\"\n                    value={username}\n                    onChange={e => setusername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Hasło\"\n                    className=\"login__input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <span className=\"login__error\">{error}</span>\n                <div className=\"login__underInputs\">\n                    <button className=\"login__forgotPassword\">\n                        Zapomniałeś hasła?\n                    </button>\n                    <label className=\"login__remember\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"remember\"\n                            className=\"login__rememberCheckbox\"\n                        />\n                        Pamiętaj mnie\n                    </label>\n                </div>\n                <button className=\"login__loginButton\">\n                    Zaloguj się <img src={arrow} alt=\"\" />\n                </button>\n                <button className=\"login__registerButton\" onClick={() => switchFormState('register')}>Stwórz nowe konto</button>\n            </form>\n        </div >\n    );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nimport './style/start.scss'\n\nconst Start = () => {\n    const [formState, switchFormState] = useState('login');\n\n    return (\n        <div className=\"start\">\n            <div className=\"start__bannerText\">\n                Pozostań anonimowy i wyraź swoje opinie\n            </div>\n            <hr className=\"start__hr\" />\n            {formState === 'login' ? <Login switchFormState={switchFormState} /> : <Register switchFormState={switchFormState} />}\n        </div>\n    );\n}\n\nexport default Start;","import React from 'react';\nimport chatIco from './svg/chatIco.svg'\nimport userIco from './svg/userIco.svg'\n\nimport './styles/topBar.scss'\n\nconst TopBar = () => {\n    return (\n        <div className=\"topBar\">\n            <ul className=\"topBar__optionsList\">\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--menu\">\n                        <img src={userIco} alt=\"\" />\n                    </button>\n                </li>\n                <li className=\"topBar__options topBar__options--banner\">\n                    schoolchan\n                </li>\n                <li className=\"topBar__options topBar__options--button\">\n                    <button className=\"topBar__button topBar__button--chat\">\n                        <img src={chatIco} alt=\"\" />\n                    </button>\n                </li>\n            </ul>\n\n        </div>\n    );\n}\n\nexport default TopBar;","import React from 'react';\n\nimport './styles/comment.scss'\n\nconst Comment = ({ comment }) => {\n    return (\n        <li className=\"comment\">\n            <span className=\"comment__username\">{comment.username}</span>\n            &nbsp;{comment.commentText}&nbsp;\n            {comment.image ? <a href={comment.image.large} target=\"_blank\">Obraz</a> : null}\n        </li>\n    );\n}\n\nexport default Comment;","import React, { useState, useEffect } from 'react';\nimport Comment from './Comment';\nimport imageIcon from 'svg/image_icon.svg';\nimport { useSelector } from 'react-redux';\n// import uploadImage from 'api/uploadImage';\n\nimport './styles/comments.scss';\n\nconst Comments = ({ post, setCommentsView }) => {\n    const [image, setImage] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\");\n    const [comments, setComments] = useState([]);\n\n    const socket = useSelector(state => state.socket);\n\n    useEffect(() => {\n        socket.emit('showComments', post._id);\n    }, [socket, post._id]);\n\n    useEffect(() => {\n        if (socket) {\n            socket.on('comments', data => {\n                setComments(data)\n            })\n            socket.on(\"comment\", (comment) => {\n                setComments([comment, ...comments])\n            });\n        }\n    }, [comments, socket]);\n\n    const sendComment = (e) => {\n        e.preventDefault();\n        const commentData = { image, commentText, postId: post._id };\n        socket.emit(\"sendComment\", commentData);\n    }\n\n    const uploadImage = (e) => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(res => res.json())\n                .then(res => {\n                    setImage({ large: res.data.image.url, mini: res.data.thumb.url, medium: res.data.medium.url })\n                })\n                .catch(error => console.log('error', error));\n        }\n\n        var file = e.target.files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n\n    return (\n        <div className=\"comments\">\n            <div className=\"comments__topBar\">\n                <button\n                    onClick={() => setCommentsView(false)}\n                >\n                    ◀️\n                </button>\n                <div className=\"comments__title\">Komentarze</div>\n            </div>\n            <ul className=\"comments__list\">\n                {comments.map((comment, key) => <Comment key={key} comment={comment} />)}\n            </ul>\n            <form className=\"comments__commentForm\">\n                <label>\n                    <img src={imageIcon} alt=\"sendImage\" />\n                    <input\n                        className=\"comments__imageInput\"\n                        type=\"file\"\n                        onChange={(e) => uploadImage(e)}\n                    />\n                </label>\n                <textarea\n                    rows=\"1\"\n                    wrap=\"hard\"\n                    placeholder=\"Napisz komentarz...\"\n                    className=\"comments__textInput\"\n                    onChange={e => setCommentText(e.target.value)}\n                    value={commentText}\n                >\n                </textarea>\n                <button onClick={e => sendComment(e)}>⌲</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Comments;","const whenPosted = (createdAt) => {\n    const date = new Date();\n    const minutes = -1 * (Date.parse(createdAt) - date.getTime()) / (1000 * 60);\n    if (minutes > 43829) {\n        const ISODate = new Date(createdAt);\n        let year = ISODate.getFullYear();\n        let month = ISODate.getMonth() + 1;\n        let dt = ISODate.getDate();\n\n        if (dt < 10) {\n            dt = '0' + dt;\n        }\n        if (month < 10) {\n            month = '0' + month;\n        }\n        return dt + '-' + month + '-' + year;\n    }\n    else if (minutes > 1440 * 2) {\n        return `${Math.ceil(minutes / 1440)} dni temu`;\n    }\n    else if (minutes > 1440) {\n        return `1 dzień temu`;\n    }\n    else if (minutes > 60 * 2) {\n        return `godzinę temu`;\n    }\n    else if (minutes > 60) {\n        return `${Math.ceil(minutes / 60)} h temu`;\n    }\n    else if (minutes > 2) {\n        return `${Math.ceil(minutes)} min temu`;\n    }\n    else if (minutes) {\n        return `minutę temu`;\n    }\n    else {\n        return 'przed chwilą';\n    }\n}\nexport default whenPosted;","import React, { useState, useEffect } from 'react';\nimport racoonMale from 'svg/racoon_male.svg';\nimport reportIcon from 'svg/report.svg';\nimport Comments from './Comments'\nimport whenPosted from 'helper/whenPosted'\n\nimport './styles/post.scss';\n\nconst Post = ({ post }) => {\n    const [commentsView, setCommentsView] = useState(false);\n    const [commentsLength, setCommentsLength] = useState()\n\n    let { comments, image, body, createdAt, username } = post;\n    //if comments is undefined make it array\n    comments = comments ? comments : [];\n    useEffect(() => {\n        setCommentsLength(comments.length)\n    }, [comments.length])\n\n    return (\n        <li className=\"post\">\n            <img src={racoonMale} alt=\"sex\" className=\"post__sex\" />\n            <div className=\"post__content\">\n                <div className=\"post__username\">{username}</div>\n                <div className=\"post__postDate\">{whenPosted(createdAt)}</div>\n                <div className=\"post__body\">{body}</div>\n                {image ? <img className=\"post__image\" src={image.medium} alt=\"\" /> : null}\n                <div className=\"post__buttons\">\n                    <button className=\"post__like\">+1</button>\n                    <button className=\"post__dislike\">-1</button>\n                    <button\n                        className=\"post__commentsButton\"\n                        onClick={() => setCommentsView(true)}\n                    >\n                        {commentsLength === 0 ? \"Napisz komentarz\" : `Komentarze ${commentsLength}`}\n                    </button>\n                </div>\n            </div>\n            <button className=\"post__reportButton\">\n                <img src={reportIcon} alt=\"report\" />\n            </button>\n            <div className=\"post__bottom\">\n                <hr className=\"post__hr\" />\n                <div>\n                    <div className=\"post__votes\">\n                        <span className=\"post__reactions\">\n                            13\n                        </span>\n                        <span>&nbsp;szopów jest za, a&nbsp;</span>\n                        <span className=\"post__reactions\">\n                            5\n                        </span>\n                        <span>&nbsp;przeciw</span>\n                    </div>\n                    <ul className=\"post__comments\">\n                        {comments[0] ?\n                            <li>\n                                <span className=\"post__username\">{comments[0].username}</span> {comments[0].commentText}\n                            </li>\n                            : null}\n                        {comments[1] ?\n                            <li>\n                                <span className=\"post__username\">{comments[1].username}</span> {comments[1].commentText}\n                            </li>\n                            : null}\n                    </ul>\n                </div>\n            </div>\n            {commentsView ? <Comments post={post} setCommentsView={setCommentsView} /> : null}\n        </li>\n    );\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport Post from './Post'\nimport { useSelector } from 'react-redux'\n\nimport './styles/posts.scss'\n\nconst Posts = () => {\n    const socket = useSelector(state => state.socket)\n    const [posts, setPosts] = useState([])\n    if (socket) {\n        socket.on('posts', data => {\n            setPosts(data)\n        })\n        socket.on('post', data => {\n            setPosts([data, ...posts])\n        })\n    }\n    return (\n        <ul className=\"posts\">\n            {posts.map((post, id) => (\n                <Post\n                    key={id}\n                    post={post}\n                />\n            ))}\n        </ul>\n    );\n}\n\nexport default Posts;","import React, { useState } from 'react';\nimport closeIco from './svg/closeIco.svg';\nimport formIco from './svg/formIco.svg';\nimport { useSelector } from 'react-redux'\n\nimport './styles/createPostForm.scss'\n\nconst CreatePostForm = ({ setCreatePostFrom }) => {\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const socket = useSelector(state => state.socket)\n\n    const sendPost = (e, data) => {\n        e.preventDefault();\n        const postData = { body, image }\n        if (postData) {\n            socket.emit('sendPost', postData);\n        }\n    }\n\n    const uploadImage = () => {\n        const sendImage = (base64) => {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n            var urlencoded = new URLSearchParams();\n            urlencoded.append(\"key\", process.env.REACT_APP_SECRET);\n            urlencoded.append(\"image\", base64);\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                redirect: 'follow'\n            };\n\n            fetch(\"https://api.imgbb.com/1/upload\", requestOptions)\n                .then(response => response.json())\n                .then(result => setImage({ large: result.data.image.url, mini: result.data.thumb.url, medium: result.data.medium.url }))\n                .catch(error => console.log('error', error));\n        }\n        var file = document.getElementById('file').files[0]\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n            var base64result = reader.result.substr(reader.result.indexOf(',') + 1);\n            sendImage(base64result)\n        }\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n\n    }\n\n    return (\n        <div className=\"createPostForm\">\n            <div className=\"createPostForm__handle\">\n                <div>\n                    <img src={formIco} alt=\"createPost\" />\n                    Utwórz post\n                    </div>\n                <button\n                    className=\"createPostForm__closeButton\"\n                    onClick={() => setCreatePostFrom(false)}\n                >\n                    <img src={closeIco} alt=\"closeForm\" />\n                </button>\n            </div>\n            <form action=\"\" className=\"createPostForm__form\">\n                Treść:\n                    <textarea\n                    name=\"\"\n                    id=\"\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    onChange={e => setBody(e.target.value)}\n                    value={body}\n                >\n\n                </textarea>\n                Obraz:\n                    <input\n                    type=\"file\"\n                    id=\"file\"\n                    onChange={() => uploadImage()}\n                />\n                <button\n                    onClick={(e) => sendPost(e)}\n                >\n                    Opublikuj\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatePostForm;","import React, { useState } from 'react';\nimport Add from './svg/addIco.svg'\nimport CreatePostForm from './CreatePostForm'\n\nimport './styles/createPost.scss'\n\nconst CreatePost = () => {\n    const [createPostFrom, setCreatePostFrom] = useState(false)\n    return (\n        <div className=\"createPost\">\n            {createPostFrom\n                ? <CreatePostForm setCreatePostFrom={setCreatePostFrom} />\n                : <button\n                    className=\"createPost__button\"\n                    onClick={() => setCreatePostFrom(true)}\n                >\n                    <img src={Add} alt=\"\" />\n                </button>\n            }\n\n        </div>\n    );\n}\n\nexport default CreatePost;","export const SignIn = () => {\n    return {\n        type: 'SIGN_IN'\n    }\n}\n\nexport const SignOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\nexport const SetSocket = (socket) => {\n    return {\n        type: 'SET_SOCKET',\n        socket\n    }\n}","import React from 'react';\nimport TopBar from './TopBar';\nimport Chan from './Chan'\n\nconst Main = () => {\n    return (\n        <div>\n            <TopBar />\n            <Chan />\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport Start from './mobile/start/Start';\nimport Main from './mobile/chan/Main'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={Start} />\n          <Route path=\"/chan\" component={Main} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n// import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      PC\n    </div>\n  );\n}\n\nexport default App;\n","const loggedReducer = (state = false, action) => {\n    switch (action.type) {\n        case 'SIGN_IN':\n            return true;\n        case 'SIGN_OUT':\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loggedReducer;","const socket = (state = \"\", action) => {\n    switch (action.type) {\n        case 'SET_SOCKET':\n            return action.socket;\n        case 'RESET_SOCKET':\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default socket;","import isLogged from './isLogged'\nimport socket from './socket'\nimport { combineReducers } from 'redux';\n\nconst AllReducers = combineReducers({\n    isLogged,\n    socket\n})\nexport default AllReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport MobileApp from './components/MobileApp';\nimport App from './components/App';\nimport isMobile from 'is-mobile';\nimport { createStore } from 'redux'\nimport allReducers from './redux/reducers'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nif (isMobile()) {\n    ReactDOM.render(\n        <Provider store={store}>\n            <MobileApp />\n        </Provider>\n        , document.getElementById('root'));\n} else {\n    ReactDOM.render(<App />, document.getElementById('root'));\n}\n","module.exports = __webpack_public_path__ + \"static/media/arrow.1d027598.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatIco.4195cd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIco.c95fa3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/racoon_male.9eabe416.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.b7a16ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_icon.eae12adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIco.a83663f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/closeIco.6be77778.svg\";","module.exports = __webpack_public_path__ + \"static/media/formIco.db5ef68f.svg\";"],"sourceRoot":""}